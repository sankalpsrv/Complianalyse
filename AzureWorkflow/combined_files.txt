{"draftCombinedProcess.py": "import model
import metamodelAndRAG
import utils

import json


def metamodel_options():
    print(
        \"The following metamodels can be used to align the new XML generation: (Input anything other than integers 1-7 to continue\")

    print(
        \"1. Context \n 2. Defeasible \n 3. Deontic \n 4. Legal Temporal \n 5. Metadata-actor \n 6. Metadata jurisdiction authority \n 7. Statement\")

    metamodel_selected = input(
        'Enter the number of the metamodel to process (or press enter to continue with all/selected): ')

    while metamodels_to_process is not None and len(metamodels_to_process) > 0:
        metamodel_selected = int(metamodel_options())
        metamodels_to_process.append(metamodel_selected)

    return metamodel_selected
def similarityProcess(XML_responses, text_value, similarities_dict_below_threshold):
    print(
        \"These are the list of similarities between the newest XML generation and the previously generated XML with their index numbers: \n\")
    i = 0
    for XML_values, similarity in similarities_dict_below_threshold.items():
        i += 1
        print(i, \".: Similarity between the two XML elements or attributes here\", XML_values, \"is equal to\", similarity)

    input_for_revision_opt = input(
        'Do you want to upload an entire new revised XML in place of the newest XML generation? Enter \"Yes\" or input any other key to continue')

    if input_for_revision_opt == \"Yes\":
        new_text_value_fn = input('Enter the filename')

        with open(new_text_value_fn, \"r\") as new_text_file:
            new_text_value = new_text_file.read()
        return new_text_value

    else:
        input_for_metamodel = input('Do you want to align with the metadata model? Enter \"Yes\" or enter any other key to continue without doing so')

        if input_for_metamodel == \"Yes\":
            metamodels_to_process=metamodel_options()
            new_text_value = metamodelAndRAG.similarity_tweaking(metamodels_to_process, text_value)
            return new_text_value
        else:
            return text_value

def responseGetter(df2, XML_arg):


    XML_responses = []

    i = 0
    for index, row in df2.iterrows():
        section_title = row['Section Title']
        nested_content = row['Nested Content']

        i+=1

        # Process section_title and nested_content as needed
        # print(f\"Section Title: {section_title}\")
        # print(f\"Nested Content: {nested_content}\n\")
        section_for_conversion = f\"{section_title}: {nested_content}\n\"

        result = model.send_request(section_for_conversion)

        result_json = json.loads(result.decode('utf-8'))

        # Extract the codeblock
        text_value_old = result_json['choices'][0]['message']['content']
        text_value = utils.strip_code_block(text_value_old)
        filename_debug_old = \"./_cache/old_text_value.txt\" + str(i)
        filename_debug_stripped = \"./_cache/text_value_stripped.txt\" + str(i)
        with open(filename_debug_old, \"w\") as fn:
            fn.write(text_value_old)
        with open(filename_debug_stripped , \"w\") as fn:
            fn.write(text_value)

        string_namespace = '<LegalRuleML xmlns:lrml=\"http://www.oasis-open.org/committees/legalruleml\">'
        if len(XML_responses) == 0:
            new_text_value = string_namespace + text_value
        else:
            XML_HorA=input(\"Enter 1 to update the new XML content via XML Similarity removal and/or metamodel context, 2 to proceed only with metamodel context alignment, or enter any other key to continue\")

            if XML_HorA == \"1\":

                similarities_dict_below_threshold, dict1, dict2_cleaned = utils.XML_Similarity(XML_responses, text_value)

                new_text_value = similarityProcess(XML_responses, text_value, similarities_dict_below_threshold)

            elif XML_HorA == \"2\":
                metamodels_to_process = metamodel_options()
                new_text_value = metamodelAndRAG.similarity_tweaking(metamodels_to_process, text_value)

        XML_responses.append(new_text_value)

    return XML_responses"},
{"fullsections.csv": "Section Title,Nested Content
1. Short title and commencement.,\"These rules may be called the E-Waste (Management) Rules, 2016., They shall come into force from the 1st day of October, 2016.\"
1. Short title and commencement.,\"These rules may be called the E-Waste (Management) Rules, 2016.\"
1. Short title and commencement.,\"They shall come into force from the 1st day of October, 2016.\"
2. Application.,\"- These rules shall apply to every manufacturer, producer, consumer, bulk consumer, collection centres, dealers, e-retailer, refurbisher, dismantler and recycler involved in manufacture, sale, transfer, purchase, collection, storage and processing of e-waste or electrical and electronic equipment listed in Schedule I, including their components, consumables, parts and spares which make the product operational but shall not apply to -, used lead acid batteries as covered under the Batteries (Management and Handling) Rules, 2001 made under the Act;, micro enterprises as defined in the Micro, Small and Medium Enterprises Development Act, 2006 (27 of 2006); and, radio-active wastes as covered under the provisions of the Atomic Energy Act, 1962 (33 of 1962) and rules made there under.\"
2. Application.,\"used lead acid batteries as covered under the Batteries (Management and Handling) Rules, 2001 made under the Act;\"
2. Application.,\"micro enterprises as defined in the Micro, Small and Medium Enterprises Development Act, 2006 (27 of 2006); and\"
2. Application.,\"radio-active wastes as covered under the provisions of the Atomic Energy Act, 1962 (33 of 1962) and rules made there under.\"
3. Definitions.,\"In these rules, unless the context otherwise requires, -, 'Act' means the Environment (Protection) Act, 1986 (29 of 1986);, 'authorisation' means permission for generation, handling, collection, reception, storage, transportation, refurbishing, dismantling, recycling, treatment and disposal of e-waste, granted to manufacturer, dismantler, refurbisher and recycler;, 'bulk consumer' means bulk users of electrical and electronic equipment such as Central Government or State Government Departments, public sector undertakings, banks, educational institutions, multinational organisations, international agencies, partnership and public or private companies that are registered under the Factories Act, 1948 (63 of 1948) and the Companies Act, 2013 (18 of 2013) and health care facilities which have turnover of more than one crore or have more than twenty employees;, 'Central Pollution Control Board' means the Central Pollution Control Board constituted under sub-section (1) of section 3 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);, 'collection centre' means a centre or a collection point or both established by producer individually or as association jointly to collect e-waste for channelising the e-waste to recycler and play such role as indicated in the authorisation for Extended Producer Responsibility granted to the producer and having facilities as per the guidelines of Central Pollution Control Board, including the collection centre established by the dismantler or refurbisher or recycler which should be a part of their authorisation issued by the State Pollution Control Board where the facility exists;, 'component' means one of the parts of a sub-assembly or assembly of which a manufactured product is made up and into which it may be resolved and includes an accessory or attachment to another component;, 'consumables' means an item, which participates in or is required for a manufacturing process or for functioning of the electrical and electronic equipment and may or may not form part of end-product. Items, which are substantially or totally consumed during a manufacturing process, shall be deemed to be consumables;, 'consumer' means any person using electrical and electronic equipment excluding the bulk consumers;, 'channelisation' means to direct the path for movement of e-wastes from collection onwards to authorised dismantler or recycler. In case of fluorescent and other mercury containing lamps, where recyclers are not available, this means path for movement from collection centre to Treatment, Storage and Disposal Facility;, 'dealer' means any individual or firm that buys or receives electrical and electronic equipment as listed in Schedule I of these rules and their components or consumables or parts or spares from producers for sale;, 'deposit refund scheme' means a scheme whereby the producer charges an additional amount as a deposit at the time of sale of the electrical and electronic equipment and returns it to the consumer along with interest when the end-of-life electrical and electronic equipment is returned;, 'dismantler' means any person or organisation engaged in dismantling of used electrical and electronic equipment into their components and having facilities as per the guidelines of Central Pollution Control Board and having authorisation from concerned State Pollution Control Board;, 'disposal' means any operation which does not lead to recycling, recovery or reuse and includes physicochemical or biological treatment, incineration and deposition in secured landfill;, 'end-of-life' of the product means the time when the product is intended to be discarded by the user;, 'environmentally sound management of e-waste' means taking all steps required to ensure that e-waste is managed in a manner which shall protect health and environment against any adverse effects, which may result from such e-waste;, 'electrical and electronic equipment' means equipment which are dependent on electric current or electromagnetic field in order to become functional;, 'e-retailer' means an individual or company or business entity that uses an electronic network such as internet, telephone, to sell its goods;, 'e-waste' means electrical and electronic equipment, whole or in part discarded as waste by the consumer or bulk consumer as well as rejects from manufacturing, refurbishment and repair processes;, 'e-waste exchange' means an independent market instrument offering assistance or independent electronic systems offering services for sale and purchase of e-waste generated from end-of-life electrical and electronic equipment between agencies or organisations authorised under these rules;, 'Extended Producer Responsibility' means responsibility of any producer of electrical or electronic equipment, for channelisation of e-waste to ensure environmentally sound management of such waste. Extended Producer Responsibility may comprise of implementing take back system or setting up of collection centres or both and having agreed arrangements with authorised dismantler or recycler either individually or collectively through a Producer Responsibility Organisation recognised by producer or producers in their Extended Producer Responsibility - Authorisation;, 'Extended Producer Responsibility - Authorisation' means a permission given by Central Pollution Control Board to a producer, for managing Extended Producer Responsibility with implementation plans and targets outlined in such authorisation including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;, 'Extended Producer Responsibility Plan' means a plan submitted by a producer to Central Pollution Control Board, at the time of applying for Extended Producer Responsibility - Authorisation in which a producer shall provide details of e-waste channelisation system for targeted collection including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;, 'facility' means any location wherein the process incidental to the collection, reception, storage, segregation, refurbishing, dismantling, recycling, treatment and disposal of e-waste are carried out;, 'Form' means a form appended to these rules;, 'historical e-waste' means e-waste generated from electrical and electronic equipment as specified in Schedule I, which was available on the date from which these rules come into force;, 'manufacturer' means a person or an entity or a company as defined in the Companies Act, 2013 (18 of 2013) or a factory as defined in the Factories Act, 1948 (63 of 1948) or Small and Medium Enterprises as defined in Micro, Small and Medium Enterprises Development Act, 2006 (27 of 2006), which has facilities for manufacture of electrical and electronic equipment;, 'orphaned products' means non-branded or assembled electrical and electronic equipment as specified in Schedule I or those produced by a company, which has closed its operations;, 'part' means an element of a sub-assembly or assembly not normally useful by itself, and not amenable to further disassembly for maintenance purposes. A part may be a component, spare or an accessory;, 'producer' means any person who, irrespective of the selling technique used such as dealer, retailer, e-retailer, etc.;, manufactures and offers to sell electrical and electronic equipment and their components or consumables or parts or spares under its own brand; or, offers to sell under its own brand, assembled electrical and electronic equipment and their components or consumables or parts or spares produced by other manufacturers or suppliers; or, offers to sell imported electrical and electronic equipment and their components or consumables or parts or spares;, 'Producer Responsibility Organisation' means a professional organisation authorised or financed collectively or individually by producers, which can take the responsibility for collection and channelisation of e-waste generated from the 'end-of-life' of their products to ensure environmentally sound management of such e-waste;, 'recycler' - means any person who is engaged in recycling and reprocessing of waste electrical and electronic equipment or assemblies or their components and having facilities as elaborated in the guidelines of Central Pollution Control Board;, 'refurbishment' means repairing of used electrical and electronic equipment as listed in Schedule I for extending its working life for its originally intended use and selling the same in the market or returning to owner;, 'refurbisher' for the purpose of these rules, means any company or undertaking registered under the Factories Act, 1948 or the Companies Act, 1956 or both or district industries centre engaged in refurbishment of used electrical and electronic equipment;, 'Schedule' means the Schedule appended to these rules;, \"\"spares\"\" means a part or a sub-assembly or assembly for substitution which is ready to replace an identical or similar part or sub-assembly or assembly including a component or an accessory;, 'State Government' in relation to an Union territory means, the Administrator thereof appointed under article 239 of the Constitution;, 'State Pollution Control Board' means the concerned State Pollution Control Board or the Pollution Control Committee of the Union Territories constituted under sub-section (1) of section 4 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);, 'target' means the quantity of e-waste to be collected by the producer in fulfilment of Extended Producer Responsibility;, 'transporter' means a person or company or entity engaged in the off-site transportation of e-waste by air, rail, road or water carrying a manifest system issued by the person or company or entity who has handed over the e-waste to the transporter, giving the origin, destination and quantity of the e-waste being transported; (2) Words and expressions used in these rules and not defined but defined in the Act shall have the meanings respectively assigned to them in the Act.\"
3. Definitions.,\"In these rules, unless the context otherwise requires, -, 'Act' means the Environment (Protection) Act, 1986 (29 of 1986);, 'authorisation' means permission for generation, handling, collection, reception, storage, transportation, refurbishing, dismantling, recycling, treatment and disposal of e-waste, granted to manufacturer, dismantler, refurbisher and recycler;, 'bulk consumer' means bulk users of electrical and electronic equipment such as Central Government or State Government Departments, public sector undertakings, banks, educational institutions, multinational organisations, international agencies, partnership and public or private companies that are registered under the Factories Act, 1948 (63 of 1948) and the Companies Act, 2013 (18 of 2013) and health care facilities which have turnover of more than one crore or have more than twenty employees;, 'Central Pollution Control Board' means the Central Pollution Control Board constituted under sub-section (1) of section 3 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);, 'collection centre' means a centre or a collection point or both established by producer individually or as association jointly to collect e-waste for channelising the e-waste to recycler and play such role as indicated in the authorisation for Extended Producer Responsibility granted to the producer and having facilities as per the guidelines of Central Pollution Control Board, including the collection centre established by the dismantler or refurbisher or recycler which should be a part of their authorisation issued by the State Pollution Control Board where the facility exists;, 'component' means one of the parts of a sub-assembly or assembly of which a manufactured product is made up and into which it may be resolved and includes an accessory or attachment to another component;, 'consumables' means an item, which participates in or is required for a manufacturing process or for functioning of the electrical and electronic equipment and may or may not form part of end-product. Items, which are substantially or totally consumed during a manufacturing process, shall be deemed to be consumables;, 'consumer' means any person using electrical and electronic equipment excluding the bulk consumers;, 'channelisation' means to direct the path for movement of e-wastes from collection onwards to authorised dismantler or recycler. In case of fluorescent and other mercury containing lamps, where recyclers are not available, this means path for movement from collection centre to Treatment, Storage and Disposal Facility;, 'dealer' means any individual or firm that buys or receives electrical and electronic equipment as listed in Schedule I of these rules and their components or consumables or parts or spares from producers for sale;, 'deposit refund scheme' means a scheme whereby the producer charges an additional amount as a deposit at the time of sale of the electrical and electronic equipment and returns it to the consumer along with interest when the end-of-life electrical and electronic equipment is returned;, 'dismantler' means any person or organisation engaged in dismantling of used electrical and electronic equipment into their components and having facilities as per the guidelines of Central Pollution Control Board and having authorisation from concerned State Pollution Control Board;, 'disposal' means any operation which does not lead to recycling, recovery or reuse and includes physicochemical or biological treatment, incineration and deposition in secured landfill;, 'end-of-life' of the product means the time when the product is intended to be discarded by the user;, 'environmentally sound management of e-waste' means taking all steps required to ensure that e-waste is managed in a manner which shall protect health and environment against any adverse effects, which may result from such e-waste;, 'electrical and electronic equipment' means equipment which are dependent on electric current or electromagnetic field in order to become functional;, 'e-retailer' means an individual or company or business entity that uses an electronic network such as internet, telephone, to sell its goods;, 'e-waste' means electrical and electronic equipment, whole or in part discarded as waste by the consumer or bulk consumer as well as rejects from manufacturing, refurbishment and repair processes;, 'e-waste exchange' means an independent market instrument offering assistance or independent electronic systems offering services for sale and purchase of e-waste generated from end-of-life electrical and electronic equipment between agencies or organisations authorised under these rules;, 'Extended Producer Responsibility' means responsibility of any producer of electrical or electronic equipment, for channelisation of e-waste to ensure environmentally sound management of such waste. Extended Producer Responsibility may comprise of implementing take back system or setting up of collection centres or both and having agreed arrangements with authorised dismantler or recycler either individually or collectively through a Producer Responsibility Organisation recognised by producer or producers in their Extended Producer Responsibility - Authorisation;, 'Extended Producer Responsibility - Authorisation' means a permission given by Central Pollution Control Board to a producer, for managing Extended Producer Responsibility with implementation plans and targets outlined in such authorisation including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;, 'Extended Producer Responsibility Plan' means a plan submitted by a producer to Central Pollution Control Board, at the time of applying for Extended Producer Responsibility - Authorisation in which a producer shall provide details of e-waste channelisation system for targeted collection including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;, 'facility' means any location wherein the process incidental to the collection, reception, storage, segregation, refurbishing, dismantling, recycling, treatment and disposal of e-waste are carried out;, 'Form' means a form appended to these rules;, 'historical e-waste' means e-waste generated from electrical and electronic equipment as specified in Schedule I, which was available on the date from which these rules come into force;, 'manufacturer' means a person or an entity or a company as defined in the Companies Act, 2013 (18 of 2013) or a factory as defined in the Factories Act, 1948 (63 of 1948) or Small and Medium Enterprises as defined in Micro, Small and Medium Enterprises Development Act, 2006 (27 of 2006), which has facilities for manufacture of electrical and electronic equipment;, 'orphaned products' means non-branded or assembled electrical and electronic equipment as specified in Schedule I or those produced by a company, which has closed its operations;, 'part' means an element of a sub-assembly or assembly not normally useful by itself, and not amenable to further disassembly for maintenance purposes. A part may be a component, spare or an accessory;, 'producer' means any person who, irrespective of the selling technique used such as dealer, retailer, e-retailer, etc.;, manufactures and offers to sell electrical and electronic equipment and their components or consumables or parts or spares under its own brand; or, offers to sell under its own brand, assembled electrical and electronic equipment and their components or consumables or parts or spares produced by other manufacturers or suppliers; or, offers to sell imported electrical and electronic equipment and their components or consumables or parts or spares;, 'Producer Responsibility Organisation' means a professional organisation authorised or financed collectively or individually by producers, which can take the responsibility for collection and channelisation of e-waste generated from the 'end-of-life' of their products to ensure environmentally sound management of such e-waste;, 'recycler' - means any person who is engaged in recycling and reprocessing of waste electrical and electronic equipment or assemblies or their components and having facilities as elaborated in the guidelines of Central Pollution Control Board;, 'refurbishment' means repairing of used electrical and electronic equipment as listed in Schedule I for extending its working life for its originally intended use and selling the same in the market or returning to owner;, 'refurbisher' for the purpose of these rules, means any company or undertaking registered under the Factories Act, 1948 or the Companies Act, 1956 or both or district industries centre engaged in refurbishment of used electrical and electronic equipment;, 'Schedule' means the Schedule appended to these rules;, \"\"spares\"\" means a part or a sub-assembly or assembly for substitution which is ready to replace an identical or similar part or sub-assembly or assembly including a component or an accessory;, 'State Government' in relation to an Union territory means, the Administrator thereof appointed under article 239 of the Constitution;, 'State Pollution Control Board' means the concerned State Pollution Control Board or the Pollution Control Committee of the Union Territories constituted under sub-section (1) of section 4 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);, 'target' means the quantity of e-waste to be collected by the producer in fulfilment of Extended Producer Responsibility;, 'transporter' means a person or company or entity engaged in the off-site transportation of e-waste by air, rail, road or water carrying a manifest system issued by the person or company or entity who has handed over the e-waste to the transporter, giving the origin, destination and quantity of the e-waste being transported; (2) Words and expressions used in these rules and not defined but defined in the Act shall have the meanings respectively assigned to them in the Act.\"
3. Definitions.,\"'Act' means the Environment (Protection) Act, 1986 (29 of 1986);\"
3. Definitions.,\"'authorisation' means permission for generation, handling, collection, reception, storage, transportation, refurbishing, dismantling, recycling, treatment and disposal of e-waste, granted to manufacturer, dismantler, refurbisher and recycler;\"
3. Definitions.,\"'bulk consumer' means bulk users of electrical and electronic equipment such as Central Government or State Government Departments, public sector undertakings, banks, educational institutions, multinational organisations, international agencies, partnership and public or private companies that are registered under the Factories Act, 1948 (63 of 1948) and the Companies Act, 2013 (18 of 2013) and health care facilities which have turnover of more than one crore or have more than twenty employees;\"
3. Definitions.,\"'Central Pollution Control Board' means the Central Pollution Control Board constituted under sub-section (1) of section 3 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);\"
3. Definitions.,\"'collection centre' means a centre or a collection point or both established by producer individually or as association jointly to collect e-waste for channelising the e-waste to recycler and play such role as indicated in the authorisation for Extended Producer Responsibility granted to the producer and having facilities as per the guidelines of Central Pollution Control Board, including the collection centre established by the dismantler or refurbisher or recycler which should be a part of their authorisation issued by the State Pollution Control Board where the facility exists;\"
3. Definitions.,'component' means one of the parts of a sub-assembly or assembly of which a manufactured product is made up and into which it may be resolved and includes an accessory or attachment to another component;
3. Definitions.,\"'consumables' means an item, which participates in or is required for a manufacturing process or for functioning of the electrical and electronic equipment and may or may not form part of end-product. Items, which are substantially or totally consumed during a manufacturing process, shall be deemed to be consumables;\"
3. Definitions.,'consumer' means any person using electrical and electronic equipment excluding the bulk consumers;
3. Definitions.,\"'channelisation' means to direct the path for movement of e-wastes from collection onwards to authorised dismantler or recycler. In case of fluorescent and other mercury containing lamps, where recyclers are not available, this means path for movement from collection centre to Treatment, Storage and Disposal Facility;\"
3. Definitions.,'dealer' means any individual or firm that buys or receives electrical and electronic equipment as listed in Schedule I of these rules and their components or consumables or parts or spares from producers for sale;
3. Definitions.,'deposit refund scheme' means a scheme whereby the producer charges an additional amount as a deposit at the time of sale of the electrical and electronic equipment and returns it to the consumer along with interest when the end-of-life electrical and electronic equipment is returned;
3. Definitions.,'dismantler' means any person or organisation engaged in dismantling of used electrical and electronic equipment into their components and having facilities as per the guidelines of Central Pollution Control Board and having authorisation from concerned State Pollution Control Board;
3. Definitions.,\"'disposal' means any operation which does not lead to recycling, recovery or reuse and includes physicochemical or biological treatment, incineration and deposition in secured landfill;\"
3. Definitions.,'end-of-life' of the product means the time when the product is intended to be discarded by the user;
3. Definitions.,\"'environmentally sound management of e-waste' means taking all steps required to ensure that e-waste is managed in a manner which shall protect health and environment against any adverse effects, which may result from such e-waste;\"
3. Definitions.,'electrical and electronic equipment' means equipment which are dependent on electric current or electromagnetic field in order to become functional;
3. Definitions.,\"'e-retailer' means an individual or company or business entity that uses an electronic network such as internet, telephone, to sell its goods;\"
3. Definitions.,\"'e-waste' means electrical and electronic equipment, whole or in part discarded as waste by the consumer or bulk consumer as well as rejects from manufacturing, refurbishment and repair processes;\"
3. Definitions.,'e-waste exchange' means an independent market instrument offering assistance or independent electronic systems offering services for sale and purchase of e-waste generated from end-of-life electrical and electronic equipment between agencies or organisations authorised under these rules;
3. Definitions.,\"'Extended Producer Responsibility' means responsibility of any producer of electrical or electronic equipment, for channelisation of e-waste to ensure environmentally sound management of such waste. Extended Producer Responsibility may comprise of implementing take back system or setting up of collection centres or both and having agreed arrangements with authorised dismantler or recycler either individually or collectively through a Producer Responsibility Organisation recognised by producer or producers in their Extended Producer Responsibility - Authorisation;\"
3. Definitions.,\"'Extended Producer Responsibility - Authorisation' means a permission given by Central Pollution Control Board to a producer, for managing Extended Producer Responsibility with implementation plans and targets outlined in such authorisation including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;\"
3. Definitions.,\"'Extended Producer Responsibility Plan' means a plan submitted by a producer to Central Pollution Control Board, at the time of applying for Extended Producer Responsibility - Authorisation in which a producer shall provide details of e-waste channelisation system for targeted collection including detail of Producer Responsibility Organisation and e-waste exchange, if applicable;\"
3. Definitions.,\"'facility' means any location wherein the process incidental to the collection, reception, storage, segregation, refurbishing, dismantling, recycling, treatment and disposal of e-waste are carried out;\"
3. Definitions.,'Form' means a form appended to these rules;
3. Definitions.,\"'historical e-waste' means e-waste generated from electrical and electronic equipment as specified in Schedule I, which was available on the date from which these rules come into force;\"
3. Definitions.,\"'manufacturer' means a person or an entity or a company as defined in the Companies Act, 2013 (18 of 2013) or a factory as defined in the Factories Act, 1948 (63 of 1948) or Small and Medium Enterprises as defined in Micro, Small and Medium Enterprises Development Act, 2006 (27 of 2006), which has facilities for manufacture of electrical and electronic equipment;\"
3. Definitions.,\"'orphaned products' means non-branded or assembled electrical and electronic equipment as specified in Schedule I or those produced by a company, which has closed its operations;\"
3. Definitions.,\"'part' means an element of a sub-assembly or assembly not normally useful by itself, and not amenable to further disassembly for maintenance purposes. A part may be a component, spare or an accessory;\"
3. Definitions.,\"'producer' means any person who, irrespective of the selling technique used such as dealer, retailer, e-retailer, etc.;\"
3. Definitions.,\"offers to sell under its own brand, assembled electrical and electronic equipment and their components or consumables or parts or spares produced by other manufacturers or suppliers; or\"
3. Definitions.,offers to sell imported electrical and electronic equipment and their components or consumables or parts or spares;
3. Definitions.,\"'Producer Responsibility Organisation' means a professional organisation authorised or financed collectively or individually by producers, which can take the responsibility for collection and channelisation of e-waste generated from the 'end-of-life' of their products to ensure environmentally sound management of such e-waste;\"
3. Definitions.,'recycler' - means any person who is engaged in recycling and reprocessing of waste electrical and electronic equipment or assemblies or their components and having facilities as elaborated in the guidelines of Central Pollution Control Board;
3. Definitions.,'refurbishment' means repairing of used electrical and electronic equipment as listed in Schedule I for extending its working life for its originally intended use and selling the same in the market or returning to owner;
3. Definitions.,\"'refurbisher' for the purpose of these rules, means any company or undertaking registered under the Factories Act, 1948 or the Companies Act, 1956 or both or district industries centre engaged in refurbishment of used electrical and electronic equipment;\"
3. Definitions.,'Schedule' means the Schedule appended to these rules;
3. Definitions.,\"'State Government' in relation to an Union territory means, the Administrator thereof appointed under article 239 of the Constitution;\"
3. Definitions.,\"'State Pollution Control Board' means the concerned State Pollution Control Board or the Pollution Control Committee of the Union Territories constituted under sub-section (1) of section 4 of the Water (Prevention and Control of Pollution) Act, 1974 (6 of 1974);\"
3. Definitions.,'target' means the quantity of e-waste to be collected by the producer in fulfilment of Extended Producer Responsibility;
3. Definitions.,\"'transporter' means a person or company or entity engaged in the off-site transportation of e-waste by air, rail, road or water carrying a manifest system issued by the person or company or entity who has handed over the e-waste to the transporter, giving the origin, destination and quantity of the e-waste being transported; (2) Words and expressions used in these rules and not defined but defined in the Act shall have the meanings respectively assigned to them in the Act.\"
4. Responsibilities of the manufacturer.,\"collect e-waste generated during the manufacture of any electrical and electronic equipment and channelise it for recycling or disposal;, apply for an authorisation in Form 1 (a) in accordance with the procedure prescribed under sub-rule (2) of rule 13 from the concerned State Pollution Control Board, which shall give the authorisation in accordance with Form 1 (bb);, ensure that no damage is caused to the environment during storage and transportation of e-waste;, maintain records of the e-waste generated, handled and disposed in Form-2 and make such records available for scrutiny by the concerned State Pollution Control Board;, file annual returns in Form-3, to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates.\"
4. Responsibilities of the manufacturer.,collect e-waste generated during the manufacture of any electrical and electronic equipment and channelise it for recycling or disposal;
4. Responsibilities of the manufacturer.,\"apply for an authorisation in Form 1 (a) in accordance with the procedure prescribed under sub-rule (2) of rule 13 from the concerned State Pollution Control Board, which shall give the authorisation in accordance with Form 1 (bb);\"
4. Responsibilities of the manufacturer.,ensure that no damage is caused to the environment during storage and transportation of e-waste;
4. Responsibilities of the manufacturer.,\"maintain records of the e-waste generated, handled and disposed in Form-2 and make such records available for scrutiny by the concerned State Pollution Control Board;\"
4. Responsibilities of the manufacturer.,\"file annual returns in Form-3, to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates.\"
5. Responsibilities of the producer.,\"- The producer of electrical and electronic equipment listed in Schedule I shall be responsible for -, implementing the Extended Producers Responsibility with the following frameworks, namely:-, collection and channelisation of e-waste generated from the 'end-of-life' of their products or 'end-of-life' products with same electrical and electronic equipment code and historical waste available on the date from which these rules come into force as per Schedule I in line with the targets prescribed in Schedule III in Extended Producer Responsibility - Authorisation;, the mechanism used for channelisation of e-waste from 'end-of-life' products including those from their service centres to authorised dismantler or recycler shall be in accordance with the Extended Producer Responsibility - Authorisation. In cases of fluorescent and other mercury containing lamps, where recyclers are not available, channelisation may be from collection centre to Treatment, Storage and Disposal Facility;, for disposal in Treatment, Storage and Disposal Facility, a pre-treatment is necessary to immobilise the mercury and reduce the volume of waste to be disposed off;, Extended Producer Responsibility - Authorisation should comprise of general scheme for collection of waste Electrical and Electronic Equipment from the Electrical and Electronic Equipment placed on the market earlier, such as through dealer, collection centres, Producer Responsibility Organisation, through buy-back arrangement, exchange scheme, Deposit Refund System, etc. whether directly or through any authorised agency and channelising the items so collected to authorised recyclers;, providing contact details such as address, e-mail address, toll-free telephone numbers or helpline numbers to consumer(s) or bulk consumer(s) through their website and product user documentation so as to facilitate return of end-of-life electrical and electronic equipment;, creating awareness through media, publications, advertisements, posters, or by any other means of communication and product user documentation accompanying the equipment, with regard to -, information on address, e-mail address, toll-free telephone numbers or helpline numbers and web site;, information on hazardous constituents as specified in sub-rule 1 of rule 16 in electrical and electronic equipment;, information on hazards of improper handling, disposal, accidental breakage, damage or improper recycling of e-waste;, instructions for handling and disposal of the equipment after its use, along with the Do's and Don'ts;, affixing a visible, legible and indelible symbol given below on the products or product user documentation to prevent e-waste from being dropped in garbage bins containing waste destined for disposal;, means and mechanism available for their consumers to return e-waste for recycling including the details of Deposit Refund Scheme, if applicable;, the producer shall opt to implement Extended Producer Responsibility individually or collectively. In individual producer responsibility, producer may set up his own collection centre or implement take back system or both to meet Extended Producer Responsibility. In collective system, producers may tie-up as a member with a Producer Responsibility Organisation or with e-waste exchange or both. It shall be mandatory upon on the individual producer in every case to seek Extended Producer Responsibility - Authorisation from Central Pollution Control Board in accordance with the Form-1 and the procedure laid down in sub-rule (1) of rule 13;, to provide information on the implementation of Deposit Refund Scheme to ensure collection of end-of-life products and their channelisation to authorised dismantlers or recyclers, if such scheme is included in the Extended Producer Responsibility Plan., Provided that the producer shall refund the deposit amount that has been taken from the consumer or bulk consumer at the time of sale, along with interest at the prevalent rate for the period of the deposit at the time of take back of the end-of-life product;, the import of electrical and electronic equipment shall be allowed only to producers having Extended Producer Responsibility authorisation;, maintaining records in Form-2 of the e-waste handled and make such records available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;, filing annual returns in Form-3, to the Central Pollution Control Board on or before the 30th day of June following the financial year to which that return relates. In case of the Producer with multiple offices in a State, one annual return combining information from all the offices shall be filed;, the Producer shall apply to the Central Pollution Control Board for authorisation in Form 1, which shall thereafter grant the Extended Producer Responsibility - Authorisation in Form 1(aa)., Operation without Extended Producer Responsibility-Authorisation by any producer, as defined in this rule, shall be considered as causing damage to the environment.\"
5. Responsibilities of the producer.,\"implementing the Extended Producers Responsibility with the following frameworks, namely:-, collection and channelisation of e-waste generated from the 'end-of-life' of their products or 'end-of-life' products with same electrical and electronic equipment code and historical waste available on the date from which these rules come into force as per Schedule I in line with the targets prescribed in Schedule III in Extended Producer Responsibility - Authorisation;, the mechanism used for channelisation of e-waste from 'end-of-life' products including those from their service centres to authorised dismantler or recycler shall be in accordance with the Extended Producer Responsibility - Authorisation. In cases of fluorescent and other mercury containing lamps, where recyclers are not available, channelisation may be from collection centre to Treatment, Storage and Disposal Facility;, for disposal in Treatment, Storage and Disposal Facility, a pre-treatment is necessary to immobilise the mercury and reduce the volume of waste to be disposed off;, Extended Producer Responsibility - Authorisation should comprise of general scheme for collection of waste Electrical and Electronic Equipment from the Electrical and Electronic Equipment placed on the market earlier, such as through dealer, collection centres, Producer Responsibility Organisation, through buy-back arrangement, exchange scheme, Deposit Refund System, etc. whether directly or through any authorised agency and channelising the items so collected to authorised recyclers;, providing contact details such as address, e-mail address, toll-free telephone numbers or helpline numbers to consumer(s) or bulk consumer(s) through their website and product user documentation so as to facilitate return of end-of-life electrical and electronic equipment;, creating awareness through media, publications, advertisements, posters, or by any other means of communication and product user documentation accompanying the equipment, with regard to -, information on address, e-mail address, toll-free telephone numbers or helpline numbers and web site;, information on hazardous constituents as specified in sub-rule 1 of rule 16 in electrical and electronic equipment;, information on hazards of improper handling, disposal, accidental breakage, damage or improper recycling of e-waste;, instructions for handling and disposal of the equipment after its use, along with the Do's and Don'ts;, affixing a visible, legible and indelible symbol given below on the products or product user documentation to prevent e-waste from being dropped in garbage bins containing waste destined for disposal;, means and mechanism available for their consumers to return e-waste for recycling including the details of Deposit Refund Scheme, if applicable;, the producer shall opt to implement Extended Producer Responsibility individually or collectively. In individual producer responsibility, producer may set up his own collection centre or implement take back system or both to meet Extended Producer Responsibility. In collective system, producers may tie-up as a member with a Producer Responsibility Organisation or with e-waste exchange or both. It shall be mandatory upon on the individual producer in every case to seek Extended Producer Responsibility - Authorisation from Central Pollution Control Board in accordance with the Form-1 and the procedure laid down in sub-rule (1) of rule 13;\"
5. Responsibilities of the producer.,collection and channelisation of e-waste generated from the 'end-of-life' of their products or 'end-of-life' products with same electrical and electronic equipment code and historical waste available on the date from which these rules come into force as per Schedule I in line with the targets prescribed in Schedule III in Extended Producer Responsibility - Authorisation;
5. Responsibilities of the producer.,\"the mechanism used for channelisation of e-waste from 'end-of-life' products including those from their service centres to authorised dismantler or recycler shall be in accordance with the Extended Producer Responsibility - Authorisation. In cases of fluorescent and other mercury containing lamps, where recyclers are not available, channelisation may be from collection centre to Treatment, Storage and Disposal Facility;\"
5. Responsibilities of the producer.,\"for disposal in Treatment, Storage and Disposal Facility, a pre-treatment is necessary to immobilise the mercury and reduce the volume of waste to be disposed off;\"
5. Responsibilities of the producer.,\"Extended Producer Responsibility - Authorisation should comprise of general scheme for collection of waste Electrical and Electronic Equipment from the Electrical and Electronic Equipment placed on the market earlier, such as through dealer, collection centres, Producer Responsibility Organisation, through buy-back arrangement, exchange scheme, Deposit Refund System, etc. whether directly or through any authorised agency and channelising the items so collected to authorised recyclers;\"
5. Responsibilities of the producer.,\"providing contact details such as address, e-mail address, toll-free telephone numbers or helpline numbers to consumer(s) or bulk consumer(s) through their website and product user documentation so as to facilitate return of end-of-life electrical and electronic equipment;\"
5. Responsibilities of the producer.,\"creating awareness through media, publications, advertisements, posters, or by any other means of communication and product user documentation accompanying the equipment, with regard to -, information on address, e-mail address, toll-free telephone numbers or helpline numbers and web site;, information on hazardous constituents as specified in sub-rule 1 of rule 16 in electrical and electronic equipment;, information on hazards of improper handling, disposal, accidental breakage, damage or improper recycling of e-waste;, instructions for handling and disposal of the equipment after its use, along with the Do's and Don'ts;, affixing a visible, legible and indelible symbol given below on the products or product user documentation to prevent e-waste from being dropped in garbage bins containing waste destined for disposal;, means and mechanism available for their consumers to return e-waste for recycling including the details of Deposit Refund Scheme, if applicable;\"
5. Responsibilities of the producer.,\"the producer shall opt to implement Extended Producer Responsibility individually or collectively. In individual producer responsibility, producer may set up his own collection centre or implement take back system or both to meet Extended Producer Responsibility. In collective system, producers may tie-up as a member with a Producer Responsibility Organisation or with e-waste exchange or both. It shall be mandatory upon on the individual producer in every case to seek Extended Producer Responsibility - Authorisation from Central Pollution Control Board in accordance with the Form-1 and the procedure laid down in sub-rule (1) of rule 13;\"
5. Responsibilities of the producer.,\"to provide information on the implementation of Deposit Refund Scheme to ensure collection of end-of-life products and their channelisation to authorised dismantlers or recyclers, if such scheme is included in the Extended Producer Responsibility Plan., Provided that the producer shall refund the deposit amount that has been taken from the consumer or bulk consumer at the time of sale, along with interest at the prevalent rate for the period of the deposit at the time of take back of the end-of-life product;\"
5. Responsibilities of the producer.,the import of electrical and electronic equipment shall be allowed only to producers having Extended Producer Responsibility authorisation;
5. Responsibilities of the producer.,maintaining records in Form-2 of the e-waste handled and make such records available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;
5. Responsibilities of the producer.,\"filing annual returns in Form-3, to the Central Pollution Control Board on or before the 30th day of June following the financial year to which that return relates. In case of the Producer with multiple offices in a State, one annual return combining information from all the offices shall be filed;\"
5. Responsibilities of the producer.,\"the Producer shall apply to the Central Pollution Control Board for authorisation in Form 1, which shall thereafter grant the Extended Producer Responsibility - Authorisation in Form 1(aa).\"
5. Responsibilities of the producer.,\"Operation without Extended Producer Responsibility-Authorisation by any producer, as defined in this rule, shall be considered as causing damage to the environment.\"
6. Responsibilities of collection centres.,\"collect e-waste on behalf of producer or dismantler or recycler or refurbisher including those arising from orphaned products;, Provided the collection centres established by producer can also collect e-waste on behalf of dismantler, refurbisher and recycler including those arising from orphaned products, ensure that the facilities are in accordance with the standards or guidelines issued by Central Pollution Control Board from time to time;, ensure that the e-waste collected by them is stored in a secured manner till it is sent to authorised dismantler or recycler as the case may be;, ensure that no damage is caused to the environment during storage and transportation of e-waste;, maintain records in Form-2 of the e-waste handled as per the guidelines of Central Pollution Control Board and make such records available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board as and when asked for.\"
6. Responsibilities of collection centres.,\"collect e-waste on behalf of producer or dismantler or recycler or refurbisher including those arising from orphaned products;, Provided the collection centres established by producer can also collect e-waste on behalf of dismantler, refurbisher and recycler including those arising from orphaned products\"
6. Responsibilities of collection centres.,ensure that the facilities are in accordance with the standards or guidelines issued by Central Pollution Control Board from time to time;
6. Responsibilities of collection centres.,ensure that the e-waste collected by them is stored in a secured manner till it is sent to authorised dismantler or recycler as the case may be;
6. Responsibilities of collection centres.,ensure that no damage is caused to the environment during storage and transportation of e-waste;
6. Responsibilities of collection centres.,maintain records in Form-2 of the e-waste handled as per the guidelines of Central Pollution Control Board and make such records available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board as and when asked for.
7. Responsibilities of dealers.,\"in the case the dealer has been given the responsibility of collection on behalf of the producer, the dealer shall collect the e-waste by providing the consumer a box, bin or a demarcated area to deposit e-waste, or through take back system and send the e-waste so collected to collection centre or dismantler or recycler as designated by producer;, the dealer or retailer or e-retailer shall refund the amount as per take back system or Deposit Refund Scheme of the producer to the depositor of e-waste;, every dealer shall ensure that the e-waste thus generated is safely transported to authorised dismantlers or recyclers;, ensure that no damage is caused to the environment during storage and transportation of e-waste.\"
7. Responsibilities of dealers.,\"in the case the dealer has been given the responsibility of collection on behalf of the producer, the dealer shall collect the e-waste by providing the consumer a box, bin or a demarcated area to deposit e-waste, or through take back system and send the e-waste so collected to collection centre or dismantler or recycler as designated by producer;\"
7. Responsibilities of dealers.,the dealer or retailer or e-retailer shall refund the amount as per take back system or Deposit Refund Scheme of the producer to the depositor of e-waste;
7. Responsibilities of dealers.,every dealer shall ensure that the e-waste thus generated is safely transported to authorised dismantlers or recyclers;
7. Responsibilities of dealers.,ensure that no damage is caused to the environment during storage and transportation of e-waste.
8. Responsibilities of the refurbisher.,\"collect e-waste generated during the process of refurbishing and channelise the waste to authorised dismantler or recycler through its collection centre;, make an application in Form 1(a) in accordance with the procedure laid down in sub-rule (4) of rule 13 to the concerned State Pollution Control Board for grant of one time authorisation;, the concerned State Pollution Control Board shall authorise the Refurbisher on one time basis as per Form 1 (bb) and authorisation would be deemed as considered if not objected to within a period of thirty days;, the authorised Refurbisher shall be required to submit details of e-waste generated to the concerned State Pollution Control Board on yearly basis;, ensure that no damage is caused to the environment during storage and transportation of e-waste;, ensure that the refurbishing process do not have any adverse effect on the health and the environment;, ensure that the e-waste thus generated is safely transported to authorised collection centres or dismantlers or recyclers;, file annual returns in Form-3 to the concerned State Pollution Control Board, on or before the 30th day of June following the financial year to which that return relates;, maintain records of the e-waste handled in Form-2 and such records should be available for scrutiny by the appropriate authority.\"
8. Responsibilities of the refurbisher.,collect e-waste generated during the process of refurbishing and channelise the waste to authorised dismantler or recycler through its collection centre;
8. Responsibilities of the refurbisher.,\"make an application in Form 1(a) in accordance with the procedure laid down in sub-rule (4) of rule 13 to the concerned State Pollution Control Board for grant of one time authorisation;, the concerned State Pollution Control Board shall authorise the Refurbisher on one time basis as per Form 1 (bb) and authorisation would be deemed as considered if not objected to within a period of thirty days;, the authorised Refurbisher shall be required to submit details of e-waste generated to the concerned State Pollution Control Board on yearly basis;\"
8. Responsibilities of the refurbisher.,the concerned State Pollution Control Board shall authorise the Refurbisher on one time basis as per Form 1 (bb) and authorisation would be deemed as considered if not objected to within a period of thirty days;
8. Responsibilities of the refurbisher.,the authorised Refurbisher shall be required to submit details of e-waste generated to the concerned State Pollution Control Board on yearly basis;
8. Responsibilities of the refurbisher.,ensure that no damage is caused to the environment during storage and transportation of e-waste;
8. Responsibilities of the refurbisher.,ensure that the refurbishing process do not have any adverse effect on the health and the environment;
8. Responsibilities of the refurbisher.,ensure that the e-waste thus generated is safely transported to authorised collection centres or dismantlers or recyclers;
8. Responsibilities of the refurbisher.,\"file annual returns in Form-3 to the concerned State Pollution Control Board, on or before the 30th day of June following the financial year to which that return relates;\"
8. Responsibilities of the refurbisher.,maintain records of the e-waste handled in Form-2 and such records should be available for scrutiny by the appropriate authority.
9. Responsibilities of consumer or bulk consumer.,\"consumers or bulk consumers of electrical and electronic equipment listed in Schedule I shall ensure that e-waste generated by them is channelised through collection centre or dealer of authorised producer or dismantler or recycler or through the designated take back service provider of the producer to authorised dismantler or recycler;, bulk consumers of electrical and electronic equipment listed in Schedule I shall maintain records of e-waste generated by them in Form-2 and make such records available for scrutiny by the concerned State Pollution Control Board;, consumers or bulk consumers of electrical and electronic equipment listed in Schedule I shall ensure that such end-of-life electrical and electronic equipment are not admixed with e-waste containing radioactive material as covered under the provisions of the Atomic Energy Act, 1962 (33 of 1962) and rules made there under;, bulk consumers of electrical and electronic equipment listed in Schedule I shall file annual returns in Form-3, to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates. In case of the bulk consumer with multiple offices in a State, one annual return combining information from all the offices shall be filed to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates\"
9. Responsibilities of consumer or bulk consumer.,consumers or bulk consumers of electrical and electronic equipment listed in Schedule I shall ensure that e-waste generated by them is channelised through collection centre or dealer of authorised producer or dismantler or recycler or through the designated take back service provider of the producer to authorised dismantler or recycler;
9. Responsibilities of consumer or bulk consumer.,bulk consumers of electrical and electronic equipment listed in Schedule I shall maintain records of e-waste generated by them in Form-2 and make such records available for scrutiny by the concerned State Pollution Control Board;
9. Responsibilities of consumer or bulk consumer.,\"consumers or bulk consumers of electrical and electronic equipment listed in Schedule I shall ensure that such end-of-life electrical and electronic equipment are not admixed with e-waste containing radioactive material as covered under the provisions of the Atomic Energy Act, 1962 (33 of 1962) and rules made there under;\"
9. Responsibilities of consumer or bulk consumer.,\"bulk consumers of electrical and electronic equipment listed in Schedule I shall file annual returns in Form-3, to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates. In case of the bulk consumer with multiple offices in a State, one annual return combining information from all the offices shall be filed to the concerned State Pollution Control Board on or before the 30th day of June following the financial year to which that return relates\"
10. Responsibilities of the dismantler.,\"ensure that the facility and dismantling processes are in accordance with the standards or guidelines prescribed by Central Pollution Control Board from time to time;, obtain authorisation from the concerned State Pollution Control Board in accordance with the procedure under sub-rule (3) of rule 13;, ensure that no damage is caused to the environment during storage and transportation of e-waste;, ensure that the dismantling processes do not have any adverse effect on the health and the environment;, ensure that dismantled e-waste are segregated and sent to the authorised recycling facilities for recovery of materials;, ensure that non-recyclable or non-recoverable components are sent to authorised treatment storage and disposal facilities;, maintain record of e-waste collected, dismantled and sent to authorised recycler in Form-2 and make such record available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;, file a return in Form-3, to the concerned State Pollution Control Board as the case may be, on or before 30th day of June following the financial year to which that return relates;, not process any e-waste for recovery or refining of materials, unless he is authorised with concerned State Pollution Control Board as a recycler for refining and recovery of materials;, operation without Authorisation by any dismantler, as defined in this rule, shall be considered as causing damage to the environment.\"
10. Responsibilities of the dismantler.,ensure that the facility and dismantling processes are in accordance with the standards or guidelines prescribed by Central Pollution Control Board from time to time;
10. Responsibilities of the dismantler.,obtain authorisation from the concerned State Pollution Control Board in accordance with the procedure under sub-rule (3) of rule 13;
10. Responsibilities of the dismantler.,ensure that no damage is caused to the environment during storage and transportation of e-waste;
10. Responsibilities of the dismantler.,ensure that the dismantling processes do not have any adverse effect on the health and the environment;
10. Responsibilities of the dismantler.,ensure that dismantled e-waste are segregated and sent to the authorised recycling facilities for recovery of materials;
10. Responsibilities of the dismantler.,ensure that non-recyclable or non-recoverable components are sent to authorised treatment storage and disposal facilities;
10. Responsibilities of the dismantler.,\"maintain record of e-waste collected, dismantled and sent to authorised recycler in Form-2 and make such record available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;\"
10. Responsibilities of the dismantler.,\"file a return in Form-3, to the concerned State Pollution Control Board as the case may be, on or before 30th day of June following the financial year to which that return relates;\"
10. Responsibilities of the dismantler.,\"not process any e-waste for recovery or refining of materials, unless he is authorised with concerned State Pollution Control Board as a recycler for refining and recovery of materials;\"
10. Responsibilities of the dismantler.,\"operation without Authorisation by any dismantler, as defined in this rule, shall be considered as causing damage to the environment.\"
11. Responsibilities of the recycler.,\"shall ensure that the facility and recycling processes are in accordance with the standards or guidelines prescribed by the Central Pollution Control Board from time to time;, obtain authorisation from concerned State Pollution Control Board in accordance with the procedure under the sub-rule (3) of rule 13;, ensure that no damage is caused to the environment during storage and transportation of e-waste;, ensure that the recycling processes do not have any adverse effect on the health and the environment;, make available all records to the Central Pollution Control Board or the concerned State Pollution Control Board for inspection;, ensure that the fractions or material not recycled in its facility is sent to the respective authorised recyclers;, ensure that residue generated during recycling process is disposed of in an authorised treatment storage disposal facility;, maintain record of e-waste collected, dismantled, recycled and sent to authorised recycler in Form-2 and make such record available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;, file annual returns in Form-3, to the concerned State Pollution Control Board as the case may be, on or before 30th day of June following the financial year to which that return relates;, may accept waste electrical and electronic equipment or components not listed in Schedule I for recycling provided that they do not contain any radioactive material and same shall be indicated while taking the authorisation from concerned State Pollution Control Board;, operation without Authorisation by any recycler, as defined in this rule, shall be considered as causing damage to the environment.\"
11. Responsibilities of the recycler.,shall ensure that the facility and recycling processes are in accordance with the standards or guidelines prescribed by the Central Pollution Control Board from time to time;
11. Responsibilities of the recycler.,obtain authorisation from concerned State Pollution Control Board in accordance with the procedure under the sub-rule (3) of rule 13;
11. Responsibilities of the recycler.,ensure that no damage is caused to the environment during storage and transportation of e-waste;
11. Responsibilities of the recycler.,ensure that the recycling processes do not have any adverse effect on the health and the environment;
11. Responsibilities of the recycler.,make available all records to the Central Pollution Control Board or the concerned State Pollution Control Board for inspection;
11. Responsibilities of the recycler.,ensure that the fractions or material not recycled in its facility is sent to the respective authorised recyclers;
11. Responsibilities of the recycler.,ensure that residue generated during recycling process is disposed of in an authorised treatment storage disposal facility;
11. Responsibilities of the recycler.,\"maintain record of e-waste collected, dismantled, recycled and sent to authorised recycler in Form-2 and make such record available for scrutiny by the Central Pollution Control Board or the concerned State Pollution Control Board;\"
11. Responsibilities of the recycler.,\"file annual returns in Form-3, to the concerned State Pollution Control Board as the case may be, on or before 30th day of June following the financial year to which that return relates;\"
11. Responsibilities of the recycler.,may accept waste electrical and electronic equipment or components not listed in Schedule I for recycling provided that they do not contain any radioactive material and same shall be indicated while taking the authorisation from concerned State Pollution Control Board;
11. Responsibilities of the recycler.,\"operation without Authorisation by any recycler, as defined in this rule, shall be considered as causing damage to the environment.\"
12. Responsibilities of State Government for environmentally sound management of E-waste.,\"Department of Industry in State or any other government agency authorised in this regard by the State Government, to ensure earmarking or allocation of industrial space or shed for e-waste dismantling and recycling in the existing and upcoming industrial park, estate and industrial clusters;, Department of Labour in the State or any other government agency authorised in this regard by the State Government shall:, a. ensure recognition and registration of workers involved in dismantling and recycling;, b. assist formation of groups of such workers to facilitate setting up dismantling facilities;, c. undertake industrial skill development activities for the workers involved in dismantling and recycling;, d. undertake annual monitoring and to ensure safety & health of workers involved in dismantling and recycling;, State Government to prepare integrated plan for effective implementation of these provisions, and to submit annual report to Ministry of Environment, Forest and Climate Change.\"
12. Responsibilities of State Government for environmentally sound management of E-waste.,\"Department of Industry in State or any other government agency authorised in this regard by the State Government, to ensure earmarking or allocation of industrial space or shed for e-waste dismantling and recycling in the existing and upcoming industrial park, estate and industrial clusters;\"
12. Responsibilities of State Government for environmentally sound management of E-waste.,\"Department of Labour in the State or any other government agency authorised in this regard by the State Government shall:, a. ensure recognition and registration of workers involved in dismantling and recycling;, b. assist formation of groups of such workers to facilitate setting up dismantling facilities;, c. undertake industrial skill development activities for the workers involved in dismantling and recycling;, d. undertake annual monitoring and to ensure safety & health of workers involved in dismantling and recycling;\"
12. Responsibilities of State Government for environmentally sound management of E-waste.,\"State Government to prepare integrated plan for effective implementation of these provisions, and to submit annual report to Ministry of Environment, Forest and Climate Change.\"
13. Procedure for Seeking and Grant of Authorisation.,\"Extended Producer Responsibility - Authorisation of Producers. - [(i) Every producer of electrical and electronic equipment listed in Schedule I, shall make an application for Extended Producer Responsibility - Authorisation in Form-1 to Central Pollution Control Board. Targets as set by CPCB will be applicable from 1st October 2017] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).];, on receipt of the application complete in all respects, the Central Pollution Control Board will carry out evaluation of the Extended Producer Responsibility Plan and on being satisfied that the producer has detailed out an effective system to manage Extended Producer Responsibility in the country, shall grant Extended Producer Responsibility - Authorisation, in Form 1(aa) within a period of one hundred and twenty days. The Extended Producer Responsibility - Authorisation shall be valid for a period of five years;, This authorisation shall include among others the targeted quantity of e-waste, product code wise, to be collected during the year. The actual target for collection of e-waste for dismantling or recycling will be fixed on the basis of quantity of electrical and electronic equipment, product code wise, placed in the market in the previous years and taking into consideration the average life of the equipment. The estimated quantity of e-waste generated during the current year will be indicated by the producer and the quantity expected to be collected with the collection scheme proposed to be implemented by the producer will be indicated in the Extended Producer Responsibility plan. The Central Pollution Control Board shall fix the targets in accordance with Schedule III., the Central Pollution Control Board, after giving reasonable opportunity of being heard to the applicant shall refuse to grant Extended Producer Responsibility - Authorisation;, in the event of refusal of Extended Producer Responsibility - Authorisation by the Central Pollution Control Board, the producer will forfeit his right to put any Electrical and Electronic Equipment in the market till such time the Extended Producer Responsibility - Authorisation is granted;, the Central Pollution Control Board after grant of Extended Producer Responsibility - Authorisation shall forward the Extended Producer Responsibility Plan to respective State Pollution Control Board for monitoring;, an application for the renewal of Extended Producer Responsibility-Authorisation shall be made in Form-1 before one hundred and twenty days of its expiry to Central Pollution Control Board. The Central Pollution Control Board may renew the authorisation for a period of five years after receipt of compliance report from the concerned State Pollution Control Board which shall submit the compliance report to Central Pollution Control Board within sixty days from the date of the receipt of the application. In case of non receipt of the compliance report from the State Pollution Control Board within stipulated time period of sixty days, Central Pollution Control Board may renew the Extended Producer Responsibility-Authorisation after examining such case on merit basis, subject to no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the Extended Producer Responsibility - Authorisation;, every producer of Electrical and Electronic Equipment listed in Schedule I, shall take all steps, wherever required, to comply with the conditions specified in the Extended Producer Responsibility - Authorisation;, the concerned State Pollution Control Board shall monitor the compliance of Extended Producer Responsibility - Authorisation, take cognizance of any non-compliance and inform Central Pollution Control Board for taking action, as necessary;, Central Pollution Control Board shall conduct random check and if in its opinion, the holders of the Extended Producer Responsibility - Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the Extended Producer Responsibility - Authorisation issued under these rules for such period as it considers necessary in the public interest and inform the concerned State Pollution Control Board within ten days of cancellation., the Central Pollution Control Board shall maintain an on-line register of Extended Producer Responsibility - Authorisation granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country., The producer authorised under the provision of this rule shall maintain records in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the Central Pollution Control Board on or before 30th day of June of every year;, [ Every producer placing their product in market shall be liable to obtain EPR authorization from CPCB. In case the producer has started operations recently i.e. number of years of operation is less than average life of their products, the EPR target as per Schedule- III (B) shall be applicable. These targets shall be applicable from financial year 2018-19. When the products average life is achieved, e-waste already collected by producers in earlier years will be accounted for and suitable set offs shall be provided for the corresponding years at the time of fixing targets as per Schedule-III. [Inserted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).], In case of transfer/sale of assets by the producers the liability under EPR shall also be transferred to the buyer.], Authorisation of Manufacturer. - (i) the manufacturer generating e-waste shall obtain an authorisation from the concerned State Pollution Control Board;, the manufacturer shall make an application for authorisation, within a period of ninety days from the date of these rules coming into force in Form 1(a) to the concerned State Pollution Control Board for grant of authorisation;, on receipt of the application complete in all respects for the authorisation, the concerned State Pollution Control Board may, after such enquiry as it considers necessary and on being satisfied that the applicant possesses appropriate facilities, technical capabilities and equipment to handle e-waste safely, grant within a period of one hundred and twenty days an authorisation in Form 1(bb) to the applicant to carry out safe operations in the authorised place only, which shall be valid for a period of five years;, the concerned State Pollution Control Board after giving reasonable opportunity of being heard to the applicant may refuse to grant any authorisation;, every person authorised under these rules shall maintain the record of e-waste handled by them in Form-2 and prepare and submit to the concerned State Pollution Control Board, an annual return containing the details specified in Form-3 on or before the 30th day of June following the financial year to which that return relates;, an application for the renewal of an authorisation shall be made in Form-1(a) before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made thereunder or the conditions specified in the authorisation;, manufacturer shall take all steps to comply with the conditions specified in the authorisation;, the concerned State Pollution Control Board shall maintain an on-line register of authorisations granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country., Procedure for grant of authorisation to dismantler or recycler. - (i) every Dismantler or Recycler of e-waste shall make an application, within a period of one hundred and twenty days starting from the date of coming into force of these rules, in Form-4 in triplicate to the concerned State Pollution Control Board accompanied with a copy of the following documents for the grant or renewal of authorisation, namely:-, consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981(21 of 1981);, certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;, proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf;, in case of renewal, a certificate of compliance of effluent and emission standards, treatment and disposal of hazardous wastes as applicable from the concerned State Pollution Control Board or any other agency designated for this purpose:, Provided that any person authorised or registered under the provisions of the Hazardous Wastes (Management, Handling and Trans-boundary Movements) Rules, 2008, and the E-waste (Management & Handling) Rules, 2011 prior to the date of coming into force of these rules shall not be required to make an application for authorisation till the period of expiry of such authorisation or registration:, the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and that the applicant is utilising environmentally sound technologies and possess adequate technical capabilities, requisite facilities and equipment to dismantle or recycle and process e-waste in compliance to the guidelines specified by Central Pollution Control Board from time to time and through site inspection, may grant authorisation to such applicants stipulating therein necessary conditions as deemed necessary for carrying out safe operations in the authorised place only;, the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;, the authorisation granted under these rules shall be valid for a period of five years from the date of its issue and shall be accompanied with a copy of the field inspection report signed by that Board indicating the adequacy of facilities for dismantling or recycling of e-waste and compliance to the guidelines specified by Central Pollution Control Board from time to time;, the concerned State Pollution Control Board may refuse, cancel or suspend an authorisation granted under these rules, if it has reasons to believe that the authorised dismantler or recycler has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the dismantler or recycler to be heard and after recording the reasons thereof;, an application for the renewal of authorisation shall be made in Form - 4 before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the authorisation;, the Dismantler and Recycler shall maintain records of the e-waste purchased, processed in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year;, the Central Government and the Central Pollution Control Board may issue guidelines for standards of performance for dismantling and recycling processes from time to time., Procedure for grant of authorisation to refurbisher. - [(i) every refurbisher of e-waste shall make an application, with in a period of one hundred and twenty days starting from the date of coming into force of these rules, in Form 1 (a) in triplicate to the concerned State Pollution Control Board accompanied with a copy of the following documents for the grant of authorisation, namely] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]:-, consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981 (21 of 1981);, certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;, proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf., the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and complies with the guidelines prescribed by Central Pollution Control Board from time to time, may grant one time authorisation in Form 1 (bb) to such applicants stipulating therein necessary conditions as deemed necessary for carrying out refurbishing activities in the authorised place only;, the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;, the concerned State Pollution Control Board may refuse, cancel or suspend a authorisation granted under these rules, if it has reasons to believe that the authorised refurbisher has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the refurbisher to be heard and after recording the reasons thereof;, the Refurbisher shall maintain records of the e-waste purchased and refurbished in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year.\"
13. Procedure for Seeking and Grant of Authorisation.,\"Extended Producer Responsibility - Authorisation of Producers. - [(i) Every producer of electrical and electronic equipment listed in Schedule I, shall make an application for Extended Producer Responsibility - Authorisation in Form-1 to Central Pollution Control Board. Targets as set by CPCB will be applicable from 1st October 2017] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).];, on receipt of the application complete in all respects, the Central Pollution Control Board will carry out evaluation of the Extended Producer Responsibility Plan and on being satisfied that the producer has detailed out an effective system to manage Extended Producer Responsibility in the country, shall grant Extended Producer Responsibility - Authorisation, in Form 1(aa) within a period of one hundred and twenty days. The Extended Producer Responsibility - Authorisation shall be valid for a period of five years;, This authorisation shall include among others the targeted quantity of e-waste, product code wise, to be collected during the year. The actual target for collection of e-waste for dismantling or recycling will be fixed on the basis of quantity of electrical and electronic equipment, product code wise, placed in the market in the previous years and taking into consideration the average life of the equipment. The estimated quantity of e-waste generated during the current year will be indicated by the producer and the quantity expected to be collected with the collection scheme proposed to be implemented by the producer will be indicated in the Extended Producer Responsibility plan. The Central Pollution Control Board shall fix the targets in accordance with Schedule III., the Central Pollution Control Board, after giving reasonable opportunity of being heard to the applicant shall refuse to grant Extended Producer Responsibility - Authorisation;, in the event of refusal of Extended Producer Responsibility - Authorisation by the Central Pollution Control Board, the producer will forfeit his right to put any Electrical and Electronic Equipment in the market till such time the Extended Producer Responsibility - Authorisation is granted;, the Central Pollution Control Board after grant of Extended Producer Responsibility - Authorisation shall forward the Extended Producer Responsibility Plan to respective State Pollution Control Board for monitoring;, an application for the renewal of Extended Producer Responsibility-Authorisation shall be made in Form-1 before one hundred and twenty days of its expiry to Central Pollution Control Board. The Central Pollution Control Board may renew the authorisation for a period of five years after receipt of compliance report from the concerned State Pollution Control Board which shall submit the compliance report to Central Pollution Control Board within sixty days from the date of the receipt of the application. In case of non receipt of the compliance report from the State Pollution Control Board within stipulated time period of sixty days, Central Pollution Control Board may renew the Extended Producer Responsibility-Authorisation after examining such case on merit basis, subject to no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the Extended Producer Responsibility - Authorisation;, every producer of Electrical and Electronic Equipment listed in Schedule I, shall take all steps, wherever required, to comply with the conditions specified in the Extended Producer Responsibility - Authorisation;, the concerned State Pollution Control Board shall monitor the compliance of Extended Producer Responsibility - Authorisation, take cognizance of any non-compliance and inform Central Pollution Control Board for taking action, as necessary;, Central Pollution Control Board shall conduct random check and if in its opinion, the holders of the Extended Producer Responsibility - Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the Extended Producer Responsibility - Authorisation issued under these rules for such period as it considers necessary in the public interest and inform the concerned State Pollution Control Board within ten days of cancellation., the Central Pollution Control Board shall maintain an on-line register of Extended Producer Responsibility - Authorisation granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country., The producer authorised under the provision of this rule shall maintain records in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the Central Pollution Control Board on or before 30th day of June of every year;, [ Every producer placing their product in market shall be liable to obtain EPR authorization from CPCB. In case the producer has started operations recently i.e. number of years of operation is less than average life of their products, the EPR target as per Schedule- III (B) shall be applicable. These targets shall be applicable from financial year 2018-19. When the products average life is achieved, e-waste already collected by producers in earlier years will be accounted for and suitable set offs shall be provided for the corresponding years at the time of fixing targets as per Schedule-III. [Inserted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).], In case of transfer/sale of assets by the producers the liability under EPR shall also be transferred to the buyer.]\"
13. Procedure for Seeking and Grant of Authorisation.,\"on receipt of the application complete in all respects, the Central Pollution Control Board will carry out evaluation of the Extended Producer Responsibility Plan and on being satisfied that the producer has detailed out an effective system to manage Extended Producer Responsibility in the country, shall grant Extended Producer Responsibility - Authorisation, in Form 1(aa) within a period of one hundred and twenty days. The Extended Producer Responsibility - Authorisation shall be valid for a period of five years;\"
13. Procedure for Seeking and Grant of Authorisation.,\"the Central Pollution Control Board, after giving reasonable opportunity of being heard to the applicant shall refuse to grant Extended Producer Responsibility - Authorisation;\"
13. Procedure for Seeking and Grant of Authorisation.,\"in the event of refusal of Extended Producer Responsibility - Authorisation by the Central Pollution Control Board, the producer will forfeit his right to put any Electrical and Electronic Equipment in the market till such time the Extended Producer Responsibility - Authorisation is granted;\"
13. Procedure for Seeking and Grant of Authorisation.,the Central Pollution Control Board after grant of Extended Producer Responsibility - Authorisation shall forward the Extended Producer Responsibility Plan to respective State Pollution Control Board for monitoring;
13. Procedure for Seeking and Grant of Authorisation.,\"an application for the renewal of Extended Producer Responsibility-Authorisation shall be made in Form-1 before one hundred and twenty days of its expiry to Central Pollution Control Board. The Central Pollution Control Board may renew the authorisation for a period of five years after receipt of compliance report from the concerned State Pollution Control Board which shall submit the compliance report to Central Pollution Control Board within sixty days from the date of the receipt of the application. In case of non receipt of the compliance report from the State Pollution Control Board within stipulated time period of sixty days, Central Pollution Control Board may renew the Extended Producer Responsibility-Authorisation after examining such case on merit basis, subject to no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the Extended Producer Responsibility - Authorisation;\"
13. Procedure for Seeking and Grant of Authorisation.,\"every producer of Electrical and Electronic Equipment listed in Schedule I, shall take all steps, wherever required, to comply with the conditions specified in the Extended Producer Responsibility - Authorisation;\"
13. Procedure for Seeking and Grant of Authorisation.,\"the concerned State Pollution Control Board shall monitor the compliance of Extended Producer Responsibility - Authorisation, take cognizance of any non-compliance and inform Central Pollution Control Board for taking action, as necessary;\"
13. Procedure for Seeking and Grant of Authorisation.,\"Central Pollution Control Board shall conduct random check and if in its opinion, the holders of the Extended Producer Responsibility - Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the Extended Producer Responsibility - Authorisation issued under these rules for such period as it considers necessary in the public interest and inform the concerned State Pollution Control Board within ten days of cancellation.\"
13. Procedure for Seeking and Grant of Authorisation.,\"the Central Pollution Control Board shall maintain an on-line register of Extended Producer Responsibility - Authorisation granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country.\"
13. Procedure for Seeking and Grant of Authorisation.,The producer authorised under the provision of this rule shall maintain records in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the Central Pollution Control Board on or before 30th day of June of every year;
13. Procedure for Seeking and Grant of Authorisation.,\"[ Every producer placing their product in market shall be liable to obtain EPR authorization from CPCB. In case the producer has started operations recently i.e. number of years of operation is less than average life of their products, the EPR target as per Schedule- III (B) shall be applicable. These targets shall be applicable from financial year 2018-19. When the products average life is achieved, e-waste already collected by producers in earlier years will be accounted for and suitable set offs shall be provided for the corresponding years at the time of fixing targets as per Schedule-III. [Inserted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]\"
13. Procedure for Seeking and Grant of Authorisation.,In case of transfer/sale of assets by the producers the liability under EPR shall also be transferred to the buyer.]
13. Procedure for Seeking and Grant of Authorisation.,\"Authorisation of Manufacturer. - (i) the manufacturer generating e-waste shall obtain an authorisation from the concerned State Pollution Control Board;, the manufacturer shall make an application for authorisation, within a period of ninety days from the date of these rules coming into force in Form 1(a) to the concerned State Pollution Control Board for grant of authorisation;, on receipt of the application complete in all respects for the authorisation, the concerned State Pollution Control Board may, after such enquiry as it considers necessary and on being satisfied that the applicant possesses appropriate facilities, technical capabilities and equipment to handle e-waste safely, grant within a period of one hundred and twenty days an authorisation in Form 1(bb) to the applicant to carry out safe operations in the authorised place only, which shall be valid for a period of five years;, the concerned State Pollution Control Board after giving reasonable opportunity of being heard to the applicant may refuse to grant any authorisation;, every person authorised under these rules shall maintain the record of e-waste handled by them in Form-2 and prepare and submit to the concerned State Pollution Control Board, an annual return containing the details specified in Form-3 on or before the 30th day of June following the financial year to which that return relates;, an application for the renewal of an authorisation shall be made in Form-1(a) before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made thereunder or the conditions specified in the authorisation;, manufacturer shall take all steps to comply with the conditions specified in the authorisation;, the concerned State Pollution Control Board shall maintain an on-line register of authorisations granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country.\"
13. Procedure for Seeking and Grant of Authorisation.,\"the manufacturer shall make an application for authorisation, within a period of ninety days from the date of these rules coming into force in Form 1(a) to the concerned State Pollution Control Board for grant of authorisation;\"
13. Procedure for Seeking and Grant of Authorisation.,\"on receipt of the application complete in all respects for the authorisation, the concerned State Pollution Control Board may, after such enquiry as it considers necessary and on being satisfied that the applicant possesses appropriate facilities, technical capabilities and equipment to handle e-waste safely, grant within a period of one hundred and twenty days an authorisation in Form 1(bb) to the applicant to carry out safe operations in the authorised place only, which shall be valid for a period of five years;\"
13. Procedure for Seeking and Grant of Authorisation.,the concerned State Pollution Control Board after giving reasonable opportunity of being heard to the applicant may refuse to grant any authorisation;
13. Procedure for Seeking and Grant of Authorisation.,\"every person authorised under these rules shall maintain the record of e-waste handled by them in Form-2 and prepare and submit to the concerned State Pollution Control Board, an annual return containing the details specified in Form-3 on or before the 30th day of June following the financial year to which that return relates;\"
13. Procedure for Seeking and Grant of Authorisation.,an application for the renewal of an authorisation shall be made in Form-1(a) before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made thereunder or the conditions specified in the authorisation;
13. Procedure for Seeking and Grant of Authorisation.,manufacturer shall take all steps to comply with the conditions specified in the authorisation;
13. Procedure for Seeking and Grant of Authorisation.,\"the concerned State Pollution Control Board shall maintain an on-line register of authorisations granted with conditions imposed under these rules for environmentally sound management of e-waste, and which shall be accessible to any citizen of the country.\"
13. Procedure for Seeking and Grant of Authorisation.,\"Procedure for grant of authorisation to dismantler or recycler. - (i) every Dismantler or Recycler of e-waste shall make an application, within a period of one hundred and twenty days starting from the date of coming into force of these rules, in Form-4 in triplicate to the concerned State Pollution Control Board accompanied with a copy of the following documents for the grant or renewal of authorisation, namely:-, consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981(21 of 1981);, certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;, proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf;, in case of renewal, a certificate of compliance of effluent and emission standards, treatment and disposal of hazardous wastes as applicable from the concerned State Pollution Control Board or any other agency designated for this purpose:, Provided that any person authorised or registered under the provisions of the Hazardous Wastes (Management, Handling and Trans-boundary Movements) Rules, 2008, and the E-waste (Management & Handling) Rules, 2011 prior to the date of coming into force of these rules shall not be required to make an application for authorisation till the period of expiry of such authorisation or registration:, the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and that the applicant is utilising environmentally sound technologies and possess adequate technical capabilities, requisite facilities and equipment to dismantle or recycle and process e-waste in compliance to the guidelines specified by Central Pollution Control Board from time to time and through site inspection, may grant authorisation to such applicants stipulating therein necessary conditions as deemed necessary for carrying out safe operations in the authorised place only;, the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;, the authorisation granted under these rules shall be valid for a period of five years from the date of its issue and shall be accompanied with a copy of the field inspection report signed by that Board indicating the adequacy of facilities for dismantling or recycling of e-waste and compliance to the guidelines specified by Central Pollution Control Board from time to time;, the concerned State Pollution Control Board may refuse, cancel or suspend an authorisation granted under these rules, if it has reasons to believe that the authorised dismantler or recycler has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the dismantler or recycler to be heard and after recording the reasons thereof;, an application for the renewal of authorisation shall be made in Form - 4 before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the authorisation;, the Dismantler and Recycler shall maintain records of the e-waste purchased, processed in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year;, the Central Government and the Central Pollution Control Board may issue guidelines for standards of performance for dismantling and recycling processes from time to time.\"
13. Procedure for Seeking and Grant of Authorisation.,\"consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981(21 of 1981);\"
13. Procedure for Seeking and Grant of Authorisation.,certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;
13. Procedure for Seeking and Grant of Authorisation.,proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf;
13. Procedure for Seeking and Grant of Authorisation.,\"in case of renewal, a certificate of compliance of effluent and emission standards, treatment and disposal of hazardous wastes as applicable from the concerned State Pollution Control Board or any other agency designated for this purpose:\"
13. Procedure for Seeking and Grant of Authorisation.,\"the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and that the applicant is utilising environmentally sound technologies and possess adequate technical capabilities, requisite facilities and equipment to dismantle or recycle and process e-waste in compliance to the guidelines specified by Central Pollution Control Board from time to time and through site inspection, may grant authorisation to such applicants stipulating therein necessary conditions as deemed necessary for carrying out safe operations in the authorised place only;\"
13. Procedure for Seeking and Grant of Authorisation.,the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;
13. Procedure for Seeking and Grant of Authorisation.,the authorisation granted under these rules shall be valid for a period of five years from the date of its issue and shall be accompanied with a copy of the field inspection report signed by that Board indicating the adequacy of facilities for dismantling or recycling of e-waste and compliance to the guidelines specified by Central Pollution Control Board from time to time;
13. Procedure for Seeking and Grant of Authorisation.,\"the concerned State Pollution Control Board may refuse, cancel or suspend an authorisation granted under these rules, if it has reasons to believe that the authorised dismantler or recycler has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the dismantler or recycler to be heard and after recording the reasons thereof;\"
13. Procedure for Seeking and Grant of Authorisation.,an application for the renewal of authorisation shall be made in Form - 4 before one hundred and twenty days of its expiry and the concerned State Pollution Control Board may renew the authorisation for a period of five years after examining each case on merit and subject to the condition that there is no report of violation of the provisions of the Act or the rules made there under or the conditions specified in the authorisation;
13. Procedure for Seeking and Grant of Authorisation.,\"the Dismantler and Recycler shall maintain records of the e-waste purchased, processed in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year;\"
13. Procedure for Seeking and Grant of Authorisation.,the Central Government and the Central Pollution Control Board may issue guidelines for standards of performance for dismantling and recycling processes from time to time.
13. Procedure for Seeking and Grant of Authorisation.,\"Procedure for grant of authorisation to refurbisher. - [(i) every refurbisher of e-waste shall make an application, with in a period of one hundred and twenty days starting from the date of coming into force of these rules, in Form 1 (a) in triplicate to the concerned State Pollution Control Board accompanied with a copy of the following documents for the grant of authorisation, namely] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]:-, consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981 (21 of 1981);, certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;, proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf., the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and complies with the guidelines prescribed by Central Pollution Control Board from time to time, may grant one time authorisation in Form 1 (bb) to such applicants stipulating therein necessary conditions as deemed necessary for carrying out refurbishing activities in the authorised place only;, the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;, the concerned State Pollution Control Board may refuse, cancel or suspend a authorisation granted under these rules, if it has reasons to believe that the authorised refurbisher has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the refurbisher to be heard and after recording the reasons thereof;, the Refurbisher shall maintain records of the e-waste purchased and refurbished in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year.\"
13. Procedure for Seeking and Grant of Authorisation.,\"consent to establish granted by the concerned State Pollution Control Board under the Water (Prevention and Control of Pollution) Act, 1974, (25 of 1974) and the Air (Prevention and Control of Pollution) Act, 1981 (21 of 1981);\"
13. Procedure for Seeking and Grant of Authorisation.,certificate of registration issued by the District Industries Centre or any other government agency authorised in this regard;
13. Procedure for Seeking and Grant of Authorisation.,\"proof of installed capacity of plant and machinery issued by the District Industries Centre or any other government agency authorised in this behalf., the concerned State Pollution Control Board, on being satisfied that the application is complete in all respects and complies with the guidelines prescribed by Central Pollution Control Board from time to time, may grant one time authorisation in Form 1 (bb) to such applicants stipulating therein necessary conditions as deemed necessary for carrying out refurbishing activities in the authorised place only;, the concerned State Pollution Control Board shall dispose of the application for authorisation within a period of one hundred and twenty days from the date of the receipt of such application complete in all respects;, the concerned State Pollution Control Board may refuse, cancel or suspend a authorisation granted under these rules, if it has reasons to believe that the authorised refurbisher has failed to comply with any of the conditions of authorisation, or with any provisions of the Act or rules made thereunder, after giving an opportunity to the refurbisher to be heard and after recording the reasons thereof;, the Refurbisher shall maintain records of the e-waste purchased and refurbished in Form-2 and shall file annual returns of its activities of previous year in Form-3 to the concerned State Pollution Control Board on or before 30th day of June of every year.\"
14. Power to suspend or cancel an authorisation.,\"The State Pollution Control Board may, if in its opinion, the holder of Manufacturer or Dismantler or Recycler or Refurbisher Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the authorisation issued under these rules for such period as it considers necessary in the public interest and inform Central Pollution Control Board within ten days of cancellation;, The Central Pollution Control Board, if in its opinion, the holders of the Extended Producer Responsibility-Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the Extended Producer Responsibility Authorisation issued under these rules for such period as it considers necessary in the public interest and inform State Pollution Control Boards or Pollution Control Committees within ten days of cancellation;, Upon suspension or cancellation of the authorisation, the Central Pollution Control Board or State Pollution Control Board may give directions to the persons whose authorisation has been suspended or cancelled for the safe storage and management of the e-waste and such persons shall comply with such directions.\"
14. Power to suspend or cancel an authorisation.,\"The State Pollution Control Board may, if in its opinion, the holder of Manufacturer or Dismantler or Recycler or Refurbisher Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the authorisation issued under these rules for such period as it considers necessary in the public interest and inform Central Pollution Control Board within ten days of cancellation;\"
14. Power to suspend or cancel an authorisation.,\"The Central Pollution Control Board, if in its opinion, the holders of the Extended Producer Responsibility-Authorisation has failed to comply with any of the conditions of the authorisation or with any provisions of the Act or these rules and after giving a reasonable opportunity of being heard and after recording reasons thereof in writing cancel or suspend the Extended Producer Responsibility Authorisation issued under these rules for such period as it considers necessary in the public interest and inform State Pollution Control Boards or Pollution Control Committees within ten days of cancellation;\"
14. Power to suspend or cancel an authorisation.,\"Upon suspension or cancellation of the authorisation, the Central Pollution Control Board or State Pollution Control Board may give directions to the persons whose authorisation has been suspended or cancelled for the safe storage and management of the e-waste and such persons shall comply with such directions.\"
15. Procedure for storage of e-waste.,\"- Every manufacturer, producer, bulk consumer, collection centre, dealer, refurbisher, dismantler and recycler may store the e-waste for a period not exceeding one hundred and eighty days and shall maintain a record of collection, sale, transfer and storage of wastes and make these records available for inspection:, Provided that the concerned State Pollution Control Board may extend the said period up to three hundred and sixty five days in case the waste needs to be specifically stored for development of a process for its recycling or reuse.\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,\"Every producer of electrical and electronic equipment and their components or consumables or parts or spares listed in Schedule I shall ensure that, new Electrical and Electronic Equipment and their components or consumables or parts or spares do not contain Lead, Mercury, Cadmium, Hexavalent Chromium, polybrominated biphenyls and polybrominated diphenyl ethers beyond a maximum concentration value of 0.1% by weight in homogenous materials for lead, mercury, hexavalent chromium, polybrominated biphenyls and polybrominated diphenyl ethers and of 0.01% by weight in homogeneous materials for cadmium., Components or consumables or parts or spares required for the electrical and electronic equipment placed in the market prior to 1st May, 2014 may be exempted from the provisions of sub-rule (1) of rule 16 provided Reduction of Hazardous Substances compliant parts and spares are not available., The applications listed in Schedule II shall be exempted from provisions of sub-rule (1) of rule 16., Every producer of applications listed in Schedule II shall ensure that the limits of hazardous substances as given in Schedule II are to be complied., Every producer shall provide the detailed information on the constituents of the equipment and their components or consumables or parts or spares along with a declaration of conformance to the Reduction of Hazardous Substances provisions in the product user documentation., Imports or placement in the market for new electrical and electronic equipment shall be permitted only for those which are compliant to provisions of sub-rule (1) and sub rule (4) of rule 16., Manufacture and supply of electrical and electronic equipment used for defence and other similar strategic applications shall be excluded from provisions of sub-rule (1) of rule 16., Every producer while seeking Extended Producer Responsibility - Authorisation will provide information on the compliance of the provisions of sub-rule (1) of rule 16. This information shall be in terms of self-declaration., [ Central Pollution Control Board may conduct random sampling of electrical and electronic equipment placed on the market to monitor and verify the compliance of Reduction of Hazardous Substances provisions and the cost for sample and testing shall be borne by the government for conducting the RoHS test. The procedure of random sampling and tolerance level value of RoHS test shall be as per the guidelines of Central Pollution Control Board.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).], [If the product does not comply with Reduction of Hazardous Substances provisions, then the cost of the RoHS test will be borne by the Producers. In addition, the Producers shall take corrective measures to bring the product into compliance and withdraw or recall the product from the market, within a reasonable period as per the guidelines of the Central Pollution Control Board.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).], Central Pollution Control Board shall publish the methods for sampling and analysis of Hazardous Substances as listed in sub-rule(1) of rule 16 with respect to the items listed in Schedule I and II and also enlist the labs for this purpose.\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,\"Every producer of electrical and electronic equipment and their components or consumables or parts or spares listed in Schedule I shall ensure that, new Electrical and Electronic Equipment and their components or consumables or parts or spares do not contain Lead, Mercury, Cadmium, Hexavalent Chromium, polybrominated biphenyls and polybrominated diphenyl ethers beyond a maximum concentration value of 0.1% by weight in homogenous materials for lead, mercury, hexavalent chromium, polybrominated biphenyls and polybrominated diphenyl ethers and of 0.01% by weight in homogeneous materials for cadmium.\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,\"Components or consumables or parts or spares required for the electrical and electronic equipment placed in the market prior to 1st May, 2014 may be exempted from the provisions of sub-rule (1) of rule 16 provided Reduction of Hazardous Substances compliant parts and spares are not available.\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,The applications listed in Schedule II shall be exempted from provisions of sub-rule (1) of rule 16.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Every producer of applications listed in Schedule II shall ensure that the limits of hazardous substances as given in Schedule II are to be complied.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Every producer shall provide the detailed information on the constituents of the equipment and their components or consumables or parts or spares along with a declaration of conformance to the Reduction of Hazardous Substances provisions in the product user documentation.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Imports or placement in the market for new electrical and electronic equipment shall be permitted only for those which are compliant to provisions of sub-rule (1) and sub rule (4) of rule 16.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Manufacture and supply of electrical and electronic equipment used for defence and other similar strategic applications shall be excluded from provisions of sub-rule (1) of rule 16.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Every producer while seeking Extended Producer Responsibility - Authorisation will provide information on the compliance of the provisions of sub-rule (1) of rule 16. This information shall be in terms of self-declaration.
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,\"[ Central Pollution Control Board may conduct random sampling of electrical and electronic equipment placed on the market to monitor and verify the compliance of Reduction of Hazardous Substances provisions and the cost for sample and testing shall be borne by the government for conducting the RoHS test. The procedure of random sampling and tolerance level value of RoHS test shall be as per the guidelines of Central Pollution Control Board.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,\"[If the product does not comply with Reduction of Hazardous Substances provisions, then the cost of the RoHS test will be borne by the Producers. In addition, the Producers shall take corrective measures to bring the product into compliance and withdraw or recall the product from the market, within a reasonable period as per the guidelines of the Central Pollution Control Board.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]\"
16. Reduction in the use of hazardous substances in the manufacture of electrical and electronic equipment and their components or consumables or parts or spares.,Central Pollution Control Board shall publish the methods for sampling and analysis of Hazardous Substances as listed in sub-rule(1) of rule 16 with respect to the items listed in Schedule I and II and also enlist the labs for this purpose.
17. Duties of authorities.,\"- Subject to other provisions of these rules, the authorities shall perform duties as specified in Schedule IV.\"
18. Annual Report.,\"The concerned State Pollution Control Board shall prepare and submit to the Central Pollution Control Board an annual report with regard to the implementation of these rules by the 30th day of September every year in Form-5., The Central Pollution Control Board shall prepare the consolidated annual review report on management of e-waste and forward it to the Central Government along with its recommendations before the 30th day of December every year.\"
18. Annual Report.,The concerned State Pollution Control Board shall prepare and submit to the Central Pollution Control Board an annual report with regard to the implementation of these rules by the 30th day of September every year in Form-5.
18. Annual Report.,The Central Pollution Control Board shall prepare the consolidated annual review report on management of e-waste and forward it to the Central Government along with its recommendations before the 30th day of December every year.
19. Transportation of e-waste.,\"- The transportation of e-waste shall be carried out as per the manifest system whereby the transporter shall be required to carry a document (three copies) prepared by the sender, giving the details as per Form-6:, Provided that the transportation of waste generated from manufacturing or recycling destined for final disposal to a treatment, storage and disposal facility shall follow the provisions under Hazardous Wastes (Management, Handling and Transboundary Movement) Rules, 2008.\"
20. Accident reporting.,\"- Where an accident occurs at the facility processing e-waste or during transportation of e-waste, the producer, refurbisher, transporter, dismantler, or recycler, as the case may be, shall report immediately to the concerned State Pollution Control Board about the accident through telephone and e-mail.\"
\"21. Liability of manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler.\",\"The manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler shall be liable for all damages caused to the environment or third party due to improper handling and management of the e-waste;, [ The manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler shall be liable to pay financial penalties for any violation as per the provisions of Environment (Protection) Act, 1986 and Rules made there under. The default of the liable entities shall be determined in accordance with the procedures prescribed in the guidelines published by the Central Pollution Control Board from time to time.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]\"
\"21. Liability of manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler.\",\"The manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler shall be liable for all damages caused to the environment or third party due to improper handling and management of the e-waste;\"
\"21. Liability of manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler.\",\"[ The manufacturer, producer, importer, transporter, refurbisher, dismantler and recycler shall be liable to pay financial penalties for any violation as per the provisions of Environment (Protection) Act, 1986 and Rules made there under. The default of the liable entities shall be determined in accordance with the procedures prescribed in the guidelines published by the Central Pollution Control Board from time to time.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016).]\"
22. Appeal.,\"- [(1) Any person aggrieved by an order of suspension or cancellation or refusal of authorisation or its renewal passed by the Central Pollution Control Board or State Pollution Control Board may, within a period of thirty days from the date on which the order is communicated to him, prefer an appeal in Form 7 to the Appellate Authority i.e. the Secretary/ representative of Secretary, Ministry of Environment, Forest and Climate Change, Government of India, New Delhi or Environment Secretary of the State Government, respectively.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016)], The Appellate Authority may entertain the appeal after expiry of the said period of thirty days if it is satisfied that the appellant was prevented by sufficient cause from filing the appeal in time., Every appeal filed under this rule shall be disposed of within a period of sixty days from the date of its filing.\"
22. Appeal.,The Appellate Authority may entertain the appeal after expiry of the said period of thirty days if it is satisfied that the appellant was prevented by sufficient cause from filing the appeal in time.
22. Appeal.,Every appeal filed under this rule shall be disposed of within a period of sixty days from the date of its filing.
23.,\"[The collection, storage, transportation, segregation, refurbishment, dismantling, recycling and disposal of ewaste as well as overall implementation of these rules shall be in accordance with the procedures prescribed in the guidelines published by the Central Pollution Control Board from time to time.] [Substituted by Notification No. G.S.R. 1349(E), dated 30.10.2017 (w.e.f. 23.3.2016)]\"
24.,Urban Local Bodies (Municipal Committee or Council or Corporation) shall ensure that e-waste pertaining to orphan products is collected and channelised to authorised dismantler or recycler."},
{"Llama_Documentation_Prompting.ipynb": "{
 \"cells\": [
  {
   \"cell_type\": \"markdown\",
   \"metadata\": {},
   \"source\": [
    \"### Introduction\n\",
    \"The LegalRuleML Core specification is a vaste repository of normative and non-normative ontologies for the XML file format generation. This also contains examples that can be utilised to feed Llama along with a system prompt. The model used is Llama2-7b-chat.\n\",
    \"\n\",
    \"### ToC\n\",
    \"\n\",
    \"In [**Approach 1** click here](#Approach1), the few shot example given is a previously generated XML file.\n\",
    \"In [**Approach 2** click here](#Approach2), the examples given in Section 6 of the Core specification are fed to Llama2.\n\",
    \"\n\",
    \"### Results\n\",
    \"\n\",
    \"While in the first approach, the model ignored the fact that Constitutive Rules and associations may be present, the better quality of the prompts gave a significant improvement. However, the issue of rationalising the separately fed prompts across different sections of the statute will require perhaps a **larger context window** or **XML tweaking**\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 14,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import urllib.request\n\",
    \"import json\n\",
    \"import os\n\",
    \"import ssl\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def allowSelfSignedHttps(allowed):\n\",
    \"    # bypass the server certificate verification on client side\n\",
    \"    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):\n\",
    \"        ssl._create_default_https_context = ssl._create_unverified_context\n\",
    \"\n\",
    \"allowSelfSignedHttps(True) # this line is needed if you use self-signed certificate in your scoring service.\n\",
    \"\n\",
    \"# Request data goes here\n\",
    \"# The example below assumes JSON formatting which may be updated\n\",
    \"# depending on the format your endpoint expects.\n\",
    \"# More information can be found here:\n\",
    \"# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def send_request(section_for_conversion):\n\",
    \"\n\",
    \"    data = {\n\",
    \"      \\"messages\\": [\n\",
    \"        {\n\",
    \"          \\"role\\": \\"system\\",\n\",
    \"          \\"content\\": \\"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute to Legal Rule ML XML format: Punishment for piracy - Whoever commits any act of piracy shall be punished with imprisonment for life or with fine or with both; or with death if the act of piracy causes death.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
    \"      <lrml:PrescriptiveStatement id=\\"PunishmentForPiracy\\">\n\",
    \"        <lrml:Rule id=\\"RuleForPiracyPunishment\\">\n\",
    \"          <lrml:if>\n\",
    \"          <lrml:Fact>\n\",
    \"              <lrml:Rel iri=\\"#commitPiracy\\"/>\n\",
    \"            </lrml:Fact>\n\",
    \"          </lrml:if>\n\",
    \"          <lrml:then>\n\",
    \"            <lrml:Obligation>\n\",
    \"              <lrml:Sanction>\n\",
    \"                <lrml:Penalty>\n\",
    \"                  <lrml:Type iri=\\"#imprisonment\\"/>\n\",
    \"                  <lrml:Duration max=\\"life\\"/>\n\",
    \"                </lrml:Penalty>\n\",
    \"                <lrml:Condition>\n\",
    \"                  <lrml:CausesDeathOrAttempt/>\n\",
    \"                  <lrml:AdditionalSanctions>\n\",
    \"                    <lrml:Restitution/>\n\",
    \"                    <lrml:ForfeitureOfProperty/>\n\",
    \"                  </lrml:AdditionalSanctions>\n\",
    \"                </lrml:Condition>\n\",
    \"              </lrml:Sanction>\n\",
    \"            </lrml:Obligation>\n\",
    \"          </lrml:then>\n\",
    \"        </lrml:Rule>\n\",
    \"      </lrml:PrescriptiveStatement>\n\",
    \"    </LegalRuleML>\n\",
    \"    \\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": f\\"\\"\\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\\"\\"\\"\n\",
    \"        }\n\",
    \"      ],\n\",
    \"      \\"temperature\\": 0.25,\n\",
    \"      \\"max_tokens\\": 500\n\",
    \"    }\n\",
    \"\n\",
    \"    \n\",
    \"    body = str.encode(json.dumps(data))\n\",
    \"    \n\",
    \"    \n\",
    \"    url = ''\n\",
    \"    # Replace this with the primary/secondary key or AMLToken for the endpoint\n\",
    \"    api_key = ''\n\",
    \"    if not api_key:\n\",
    \"        raise Exception(\\"A key should be provided to invoke the endpoint\\")\n\",
    \"    \n\",
    \"    \n\",
    \"    headers = {'Content-Type':'application/json', 'Authorization':('Bearer '+ api_key)}\n\",
    \"    \n\",
    \"    req = urllib.request.Request(url, body, headers)\n\",
    \"    \n\",
    \"    try:\n\",
    \"        response = urllib.request.urlopen(req)\n\",
    \"    \n\",
    \"        result = response.read()\n\",
    \"        #print(result)\n\",
    \"\n\",
    \"        return result\n\",
    \"        \n\",
    \"    except urllib.error.HTTPError as error:\n\",
    \"        print(\\"The request failed with status code: \\" + str(error.code))\n\",
    \"\n\",
    \"        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure\n\",
    \"        print(error.info())\n\",
    \"        print(error.read().decode(\\"utf8\\", 'ignore'))\n\",
    \"\n\",
    \"\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 15,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import pandas as pd\n\",
    \"\n\",
    \"def csv_parser():\n\",
    \"\n\",
    \"    csv_filename = 'sections.csv' # file containing all the sections from the E-Waste Rules, generated via IK_interface function\n\",
    \"\n\",
    \"    df_condition = \\"1\\"\n\",
    \"    # Read the CSV file into a Pandas DataFrame\n\",
    \"    df = pd.read_csv(csv_filename)\n\",
    \"\n\",
    \"    if df_condition == \\"1\\":\n\",
    \"        df2 = df.head(10)\n\",
    \"    else:\n\",
    \"        df2=df.copy()\n\",
    \"\n\",
    \"    return df2\n\",
    \"\n\",
    \"    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 16,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"                              Section Title  \\\n\",
      \"0  1. Short title, extent and commencement.   \n\",
      \"1  1. Short title, extent and commencement.   \n\",
      \"2  1. Short title, extent and commencement.   \n\",
      \"3                           2. Definitions.   \n\",
      \"4                           2. Definitions.   \n\",
      \"5                           2. Definitions.   \n\",
      \"6                           2. Definitions.   \n\",
      \"7                           2. Definitions.   \n\",
      \"8                           2. Definitions.   \n\",
      \"9                           2. Definitions.   \n\",
      \"\n\",
      \"                                      Nested Content  \n\",
      \"0  This Act may be called the Surrogacy (Regulati...  \n\",
      \"1  This Act may be called the Surrogacy (Regulati...  \n\",
      \"2  It shall come into force on such date1 as the ...  \n\",
      \"3  In this Act, unless the context otherwise requ...  \n\",
      \"4  In this Act, unless the context otherwise requ...  \n\",
      \"5  âabandoned childâ means a child born out o...  \n\",
      \"6  âaltruistic surrogacyâ means the surrogacy...  \n\",
      \"7  âappropriate authorityâ means the appropri...  \n\",
      \"8  âAssisted Reproductive Technology Actâ mea...  \n\",
      \"9  âBoardâ means the National Assisted Reprod...  \n\"
     ]
    }
   ],
   \"source\": [
    \"print(csv_parser())\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 18,
   \"metadata\": {
    \"id\": \"Zs6yo1UWDRKi\"
   },
   \"outputs\": [],
   \"source\": [
    \"\n\",
    \"# Now, 'df' contains the data from the CSV file\n\",
    \"    # You can perform various operations on the DataFrame\n\",
    \"section_for_conversion = ''\n\",
    \"\n\",
    \"combined_response = ''\n\",
    \"\n\",
    \"df2 = csv_parser()\n\",
    \"# Iterate through rows and process the data\n\",
    \"for index, row in df2.iterrows():\n\",
    \"    section_title = row['Section Title']\n\",
    \"    nested_content = row['Nested Content']\n\",
    \"\n\",
    \"    # Process section_title and nested_content as needed\n\",
    \"    #print(f\\"Section Title: {section_title}\\")\n\",
    \"    #print(f\\"Nested Content: {nested_content}\\n\\")\n\",
    \"    section_for_conversion = f\\"{section_title}: {nested_content}\\n\\"\n\",
    \"\n\",
    \"    result=send_request(section_for_conversion)\n\",
    \"    \n\",
    \"    result_json = json.loads(result.decode('utf-8'))\n\",
    \"    \n\",
    \"    # Extract the value inside the \\"text\\" key\n\",
    \"    text_value = result_json['choices'][0]['message']['content']\n\",
    \"\n\",
    \"    combined_response += text_value\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 19,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Here is the LegalRuleML XML format for the extract of the statute you provided:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:LegalDocument id=\\"SurrogacyRegulationAct2021\\">\n\",
      \"    <lrml:ShortTitle>Surrogacy (Regulation) Act, 2021</lrml:ShortTitle>\n\",
      \"    <lrml:Extent>\n\",
      \"      <lrml:Date start=\\"2021-01-01\\" end=\\"2021-12-31\\"/>\n\",
      \"    </lrml:Extent>\n\",
      \"    <lrml:Citation>\n\",
      \"      <lrml:Reference iri=\\"http://www.legislation.gov.in/sites/default/files/Acts/A2021-15.pdf\\"/>\n\",
      \"    </lrml:Citation>\n\",
      \"    <lrml:Commencement>\n\",
      \"      <lrml:Date start=\\"2021-01-01\\" end=\\"2021-12-31\\"/>\n\",
      \"      <lrml:Condition>\n\",
      \"        <lrml:Notification iri=\\"http://www.egazette.nic.in/pdf/2021/Egazette-2021-1-15.pdf\\"/>\n\",
      \"      </lrml:Condition>\n\",
      \"    </lrml:Commencement>\n\",
      \"  </lrml:LegalDocument>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:LegalDocument` is the root element of the LegalRuleML document, which represents the statute.\n\",
      \"* `lrml:ShortTitle` contains the short title of the statute, which is \\"Surrogacy (Regulation) Act, 2021\\" in this case.\n\",
      \"* `lrml:Extent` represents the extent of the statute, which specifies the date when the statute comes into force and the date when it ceases to have effect. In this case, the statute comes into force on January 1, 2021, and ceases to have effect on December 31, 202Here is the LegalRuleML XML format for the extract of the statute you provided:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:LegalRuleDocument>\n\",
      \"    <lrml:shortTitle iri=\\"http://example.com/SurrogacyRegulationAct2021\\"/>\n\",
      \"    <lrml:extent>\n\",
      \"      <lrml:jurisdiction iri=\\"http://example.com/India\\"/>\n\",
      \"      <lrml:dates>\n\",
      \"        <lrml:startDate>2021-01-01</lrml:startDate>\n\",
      \"        <lrml:endDate>2021-12-31</lrml:endDate>\n\",
      \"      </lrml:dates>\n\",
      \"    </lrml:extent>\n\",
      \"    <lrml:commencement>\n\",
      \"      <lrml:date>2021-01-01</lrml:date>\n\",
      \"    </lrml:commencement>\n\",
      \"  </lrml:LegalRuleDocument>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:shortTitle` - The short title of the statute, which is a unique identifier for the statute. In this case, the short title is \\"Surrogacy (Regulation) Act, 2021\\".\n\",
      \"* `lrml:extent` - The extent of the statute, which includes the jurisdiction and the dates when the statute is in force. In this case, the statute is in force in India from 2021-01-01 to 2021-12-31.\n\",
      \"* `lrml:commencement` - The date when the statute comes into force. In this case, the statute comes into force on 2021-01-01.\n\",
      \"\n\",
      \"Note that the `lrml` prefix is used to indicate that the elements are defined in the LegalRuleML namespace.Here is the LegalRuleML XML format for the given statute extract:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:Statute>\n\",
      \"    <lrml:ShortTitle>1. Short title, extent and commencement</lrml:ShortTitle>\n\",
      \"    <lrml:Extent>\n\",
      \"      <lrml:Date>\n\",
      \"        <lrml:Value>such date1</lrml:Value>\n\",
      \"        <lrml:Format>YYYY-MM-DD</lrml:Format>\n\",
      \"      </lrml:Date>\n\",
      \"    </lrml:Extent>\n\",
      \"    <lrml:Citation>\n\",
      \"      <lrml:Reference>\n\",
      \"        <lrml:LegalCitation>\n\",
      \"          <lrml:Act>\n\",
      \"            <lrml:Name>The Central Government</lrml:Name>\n\",
      \"            <lrml:Abbreviation>Central Govt.</lrml:Abbreviation>\n\",
      \"          </lrml:Act>\n\",
      \"          <lrml:Section>\n\",
      \"            <lrml:Number>1</lrml:Number>\n\",
      \"            <lrml:SectionName>Short title, extent and commencement</lrml:SectionName>\n\",
      \"          </lrml:Section>\n\",
      \"        </lrml:LegalCitation>\n\",
      \"      </lrml:Reference>\n\",
      \"    </lrml:Citation>\n\",
      \"    <lrml:Commencement>\n\",
      \"      <lrml:Date>\n\",
      \"        <lrml:Value>such date1</lrml:Value>\n\",
      \"        <lrml:Format>YYYY-MM-DD</lrml:Format>\n\",
      \"      </lrml:Date>\n\",
      \"    </lrml:Commencement>\n\",
      \"  </lrml:Statute>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:ShortTitle` - The short title of the statute.\n\",
      \"* `lrml:Extent` - The extent of the statute, which in this case is a single date.\n\",
      \"* `lrml:Citation` - The citation of the statute, which includes the name of the act and the section number.\n\",
      \"* `lrml:ComHere is the LegalRuleML XML representation of the statutory provisions you provided:\n\",
      \"```xml\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<LegalRuleML xmlns=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:Model>\n\",
      \"    <lrml:Package>\n\",
      \"      <lrml:Name>Surrogacy Act</lrml:Name>\n\",
      \"      <lrml:Version>1.0</lrml:Version>\n\",
      \"    </lrml:Package>\n\",
      \"    <lrml:Definitions>\n\",
      \"      <lrml:Definition>\n\",
      \"        <lrml:Name>abandoned child</lrml:Name>\n\",
      \"        <lrml:Definition>\n\",
      \"          <lrml:Meaning>\n\",
      \"            <lrml:Text>a child born out of surrogacy procedure who has been deserted by his intending parents or guardians and declared as abandoned by the appropriate authority after due enquiry</lrml:Text>\n\",
      \"          </lrml:Meaning>\n\",
      \"        </lrml:Definition>\n\",
      \"      </lrml:Definition>\n\",
      \"      <lrml:Definition>\n\",
      \"        <lrml:Name>altruistic surrogacy</lrml:Name>\n\",
      \"        <lrml:Definition>\n\",
      \"          <lrml:Meaning>\n\",
      \"            <lrml:Text>the surrogacy in which no charges, expenses, fees, remuneration or monetary incentive of whatever nature, except the medical expenses and such other prescribed expenses incurred on surrogate mother and the insurance coverage for the surrogate mother, are given to the surrogate mother or her dependents or her representative</lrml:Text>\n\",
      \"          </lrml:Meaning>\n\",
      \"        </lrml:Definition>\n\",
      \"      </lrml:Definition>\n\",
      \"      <lrml:Definition>\n\",
      \"        <lrml:Name>appropriate authority</lrml:Name>\n\",
      \"        <lrml:Definition>\n\",
      \"          <lrml:Meaning>\n\",
      \"            <lrml:Text>the appropriate authority appointed under Section 35</lrml:Text>\n\",
      \"          </lrml:Meaning>\n\",
      \"        </lrml:DefinitionHere is the LegalRuleML XML representation of the statutory provisions you provided:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<LegalRuleML xmlns=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <PrescriptiveStatement id=\\"Definitions\\">\n\",
      \"    <Rule id=\\"DefinitionOfAbandonedChild\\">\n\",
      \"      <if>\n\",
      \"        <Fact>\n\",
      \"          <Rel irref=\\"http://www.legalruleml.org/v1.0/def/abandonedChild\\">abandoned child</Rel>\n\",
      \"        </Fact>\n\",
      \"      </if>\n\",
      \"      <then>\n\",
      \"        <Obligation>\n\",
      \"          <Sanction>\n\",
      \"            <Penalty>\n\",
      \"              <Type irref=\\"http://www.legalruleml.org/v1.0/def/imprisonment\\">imprisonment</Type>\n\",
      \"              <Duration max=\\"life\\"/>\n\",
      \"            </Penalty>\n\",
      \"            <Condition>\n\",
      \"              <CausesDeathOrAttempt>\n\",
      \"                <AdditionalSanctions>\n\",
      \"                  <Restitution/>\n\",
      \"                  <ForfeitureOfProperty/>\n\",
      \"                </AdditionalSanctions>\n\",
      \"              </CausesDeathOrAttempt>\n\",
      \"            </Condition>\n\",
      \"          </Sanction>\n\",
      \"        </Obligation>\n\",
      \"      </then>\n\",
      \"    </Rule>\n\",
      \"    <!-- ... -->\n\",
      \"  </PrescriptiveStatement>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Note that this is just one possible way to represent the statutory provisions in LegalRuleML format, and there may be other valid ways to represent the same information. The LegalRuleML syntax is quite flexible and allows for different representations of the same information.Here is the LegalRuleML XML format for the extract of the statute you provided:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:Definitions>\n\",
      \"    <lrml:Definition id=\\"AbandonedChildDefinition\\">\n\",
      \"      <lrml:DefinitionTerm>\n\",
      \"        <lrml:Term iri=\\"#abandonedChild\\"/>\n\",
      \"      </lrml:DefinitionTerm>\n\",
      \"      <lrml:DefinitionDescription>\n\",
      \"        <lrml:Text>A child born out of surrogacy procedure who has been deserted by his intending parents or guardians and declared as abandoned by the appropriate authority after due enquiry.</lrml:Text>\n\",
      \"      </lrml:DefinitionDescription>\n\",
      \"    </lrml:Definition>\n\",
      \"  </lrml:Definitions>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Definitions` is the root element of the LegalRuleML document, which contains all the definitions used in the rule.\n\",
      \"* `lrml:Definition` is the element used to define a term or concept in the rule.\n\",
      \"* `lrml:DefinitionTerm` is an element that contains the term or concept being defined, along with its identifier. In this case, the term is `#abandonedChild`.\n\",
      \"* `lrml:DefinitionDescription` is an element that contains a brief description of the term or concept being defined. In this case, the description is the text provided in the statute.\n\",
      \"\n\",
      \"Note that the `lrml:Definition` element can also include other elements, such as `lrml:DefinitionSource` (which provides the source of the definition) or `lrml:DefinitionStatus` (which indicates the status of the definition). However, these elements are not included in the example provided.Here is the LegalRuleML XML format for the given statute extract:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <PrescriptiveStatements>\n\",
      \"    <PrescriptiveStatement id=\\"Definitions\\">\n\",
      \"      <lrml:Definition id=\\"AltruisticSurrogacyDefinition\\">\n\",
      \"        <lrml:DefinitionTerm>altruistic surrogacy</lrml:DefinitionTerm>\n\",
      \"        <lrml:DefinitionDescription>\n\",
      \"          <lrml:Text>the surrogacy in which no charges, expenses, fees, remuneration or monetary incentive of whatever nature, except the medical expenses and such other prescribed expenses incurred on surrogate mother and the insurance coverage for the surrogate mother, are given to the surrogate mother or her dependents or her representative</lrml:Text>\n\",
      \"        </lrml:DefinitionDescription>\n\",
      \"      </lrml:Definition>\n\",
      \"    </PrescriptiveStatement>\n\",
      \"  </PrescriptiveStatements>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Definition` is the root element of the `Definition` category, which defines the meaning of a term used in the statute.\n\",
      \"* `lrml:DefinitionTerm` is a child element of `lrml:Definition` and represents the term being defined. In this case, it is \\"altruistic surrogacy\\".\n\",
      \"* `lrml:DefinitionDescription` is a child element of `lrml:Definition` and provides a brief description of the term being defined. In this case, it provides a paraphrased explanation of the term \\"altruistic surrogacy\\".\n\",
      \"* `lrml:Text` is a child element of `lrml:DefinitionDescription` and represents the text of the definition. It is the same as the original statute text provided.\n\",
      \"\n\",
      \"Note that LegalRuleML is a standard for representing legal rules and norms in a machine-readable format, and it provides a set of elements and attributes for defining and organizing legal rules. The `lrml:Definition` element is used to define a term or concept, and the `lrml:DefinitionTerm` element provides the nameHere is the LegalRuleML XML format for the extract of the statute you provided:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <PrescriptiveStatement>\n\",
      \"    <Definition id=\\"appropriateAuthority\\">\n\",
      \"      <DefinedTerm iri=\\"http://example.org/statute/appropriateAuthority\\">\n\",
      \"        <DefinitionTerm>\n\",
      \"          <Term iri=\\"Section 35\\"/>\n\",
      \"        </DefinitionTerm>\n\",
      \"      </DefinedTerm>\n\",
      \"    </Definition>\n\",
      \"  </PrescriptiveStatement>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `LegalRuleML` is the namespace prefix for the Legal Rule Markup Language.\n\",
      \"* `<PrescriptiveStatement>` is the root element of a LegalRuleML document, which represents a statement of law.\n\",
      \"* `<Definition>` is an element that defines a term used in the statute.\n\",
      \"* `id` is an attribute that assigns a unique identifier to the definition. In this case, the identifier is \\"appropriateAuthority\\".\n\",
      \"* `<DefinedTerm>` is an element that defines the term being defined. In this case, the term is \\"appropriate authority\\".\n\",
      \"* `iri` is an attribute that specifies the IRI (Uniform Resource Identifier) of the term being defined. In this case, the IRI is \\"http://example.org/statute/appropriateAuthority\\".\n\",
      \"* `<DefinitionTerm>` is an element that defines the term that is being defined. In this case, the term is \\"Section 35\\".\n\",
      \"\n\",
      \"Note that the `DefinedTerm` element can also include additional attributes, such as `label`, `description`, and `status`, which provide additional information about the term being defined.Sure! Here is the conversion of the extract of the statute to LegalRuleML XML format:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns:lrml=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <lrml:Definitions>\n\",
      \"    <lrml:Definition id=\\"AssistedReproductiveTechnologyAct\\">\n\",
      \"      <lrml:Term iri=\\"#AssistedReproductiveTechnologyAct\\"/>\n\",
      \"      <lrml:DefinitionReference>\n\",
      \"        <lrml:Term iri=\\"#AssistedReproductiveTechnology (Regulation) Act, 2021\\"/>\n\",
      \"      </lrml:DefinitionReference>\n\",
      \"    </lrml:Definition>\n\",
      \"  </lrml:Definitions>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Definitions` is the root element of the LegalRuleML document, which contains all the definitions used in the rule.\n\",
      \"* `lrml:Definition` is the element used to define a term or a concept. In this case, we are defining the term \\"Assisted Reproductive Technology Act\\".\n\",
      \"* `lrml:Term` is an element that contains the text of the term being defined. In this case, the term is \\"Assisted Reproductive Technology Act\\".\n\",
      \"* `lrml:DefinitionReference` is an element that references the definition of the term. In this case, we are referencing the \\"Assisted Reproductive Technology (Regulation) Act, 2021\\".\n\",
      \"* `lrml:DefinitionReference` uses the `lrml:Term` element to provide the text of the term being referenced.\n\",
      \"\n\",
      \"Note that the `lrml:DefinitionReference` element can also reference other definitions within the same rule, or it can reference a definition from another rule. This allows for a hierarchical structure of definitions, where a definition can reference another definition, and so on.Here is the LegalRuleML XML format for the given statute extract:\n\",
      \"```\n\",
      \"<LegalRuleML xmlns=\\"http://www.oasis-open.org/committees/legalruleml\\">\n\",
      \"  <Definitions>\n\",
      \"    <Definition id=\\"BoardDefinition\\">\n\",
      \"      <lrml:DefinitionTerm iri=\\"#NationalAssistedReproductiveTechnologyAndSurrogacyBoard\\"/>\n\",
      \"      <lrml:DefinitionText>National Assisted Reproductive Technology and Surrogacy Board</lrml:DefinitionText>\n\",
      \"    </Definition>\n\",
      \"  </Definitions>\n\",
      \"</LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `Definitions` is a child element of `LegalRuleML` and represents a collection of definitions.\n\",
      \"* `Definition` is an individual definition element within the `Definitions` collection.\n\",
      \"* `id` is an attribute of the `Definition` element that provides a unique identifier for the definition. In this case, the identifier is `#BoardDefinition`.\n\",
      \"* `lrml:DefinitionTerm` is an element that represents the term being defined. In this case, the term is `#NationalAssistedReproductiveTechnologyAndSurrogacyBoard`.\n\",
      \"* `lrml:DefinitionText` is an element that represents the text of the definition. In this case, the text is the name of the board being defined.\n\",
      \"\n\",
      \"Note that this is just one possible way to represent the given statute extract in LegalRuleML format. There are many other ways to structure and format the XML, depending on the specific requirements of the rule and the context in which it is being used.\n\"
     ]
    }
   ],
   \"source\": [
    \"print (combined_response)\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"metadata\": {},
   \"source\": [
    \"## Approach2\n\",
    \"\n\",
    \"Using the examples shown in the Documentation as few-shot examples\n\",
    \"\n\",
    \"In order to avoid oversight of the nuances of LegalRuleML representation which involves associations, defeasibility, and different kinds of normative rules, two examples from Section 6 in the documentation available [here](http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html) is attempted to be passed as a few-shot prompt here.\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 22,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import urllib.request\n\",
    \"import json\n\",
    \"import os\n\",
    \"import ssl\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def allowSelfSignedHttps(allowed):\n\",
    \"    # bypass the server certificate verification on client side\n\",
    \"    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):\n\",
    \"        ssl._create_default_https_context = ssl._create_unverified_context\n\",
    \"\n\",
    \"allowSelfSignedHttps(True) # this line is needed if you use self-signed certificate in your scoring service.\n\",
    \"\n\",
    \"# Request data goes here\n\",
    \"# The example below assumes JSON formatting which may be updated\n\",
    \"# depending on the format your endpoint expects.\n\",
    \"# More information can be found here:\n\",
    \"# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def send_request(section_for_conversion):\n\",
    \"\n\",
    \"    data = {\n\",
    \"      \\"messages\\": [\n\",
    \"        {\n\",
    \"          \\"role\\": \\"system\\",\n\",
    \"          \\"content\\": \\"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same with reference to the documentation available at http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format: The benefit referred to in comma 1 shall be paid in an amount equal 80 per cent of five-twelfths of the income earned and reported for tax purposes by the freelancer in the second year preceding the year of application.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"          <lrml:ConstitutiveStatement key=\\"tax2\\">\n\",
    \"\n\",
    \"          <ruleml:Rule closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:Paraphrase>If income is reported in some year, then it was earned in the previous year.\n\",
    \"\n\",
    \"        </lrml:Paraphrase>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Expr key=\\":year-1\\">\n\",
    \"\n\",
    \"              <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"              <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"              <ruleml:Data xsi:type=\\"xs:integer\\">1</ruleml:Data>\n\",
    \"\n\",
    \"            </ruleml:Expr>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:ConstitutiveStatement>\n\",
    \"    <lrml:PrescriptiveStatement key=\\"literal\\">\n\",
    \"\n\",
    \"    <ruleml:Rule closure=\\"universal\\" key=\\":literal-template\\">\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"            <ruleml:And>\n\",
    \"\n\",
    \"                <ruleml:Atom key=\\":atom-earned\\">\n\",
    \"\n\",
    \"                    <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                        <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                        <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                        <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"                 <ruleml:Atom key=\\":atom-reported\\">\n\",
    \"\n\",
    \"                     <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                    <ruleml:Expr>\n\",
    \"\n\",
    \"                         <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                         <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                         <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"            </ruleml:And>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"             <lrml:Obligation key=\\"obl-paybenefit\\">\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:Bearer/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Employer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:AuxiliaryParty/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Freelancer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:Atom>\n\",
    \"\n\",
    \"                      <ruleml:Rel iri=\\":paybenefit\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                          <ruleml:Fun iri=\\":80_percent_of_five-twelfths_of\\"/>\n\",
    \"\n\",
    \"                          <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                      </ruleml:Expr>\n\",
    \"\n\",
    \"                      <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:Atom>\n\",
    \"\n\",
    \"              </lrml:Obligation>\n\",
    \"\n\",
    \"          </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"</lrml:PrescriptiveStatement>\n\",
    \"    \\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format:A person must not engage in a credit activity if the person does not hold a licence authorising the person to engage in the credit activity. Civil penalty: 2,000 penalty units.  Criminal penalty: 200 penalty units, or 2 years imprisonment, or both.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"\n\",
    \"<lrml:LegalSources>\n\",
    \"\n\",
    \"   <lrml:LegalSource key=\\"ls1\\"             sameAs=\\"http://www.comlaw.gov.au/Details/C2009A00134/Html/Text#param43\\"/>\n\",
    \"\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"\n\",
    \"   <lrml:appliesAssociations>\n\",
    \"\n\",
    \"          <lrml:Associations>\n\",
    \"\n\",
    \"                <lrml:Association>\n\",
    \"\n\",
    \"                       <lrml:appliesSource keyref=\\"#ls1/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"                </lrml:Association>\n\",
    \"\n\",
    \"          </lrml:Associations>\n\",
    \"\n\",
    \"</lrml:appliesAssociations>\n\",
    \"\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"\n\",
    \"<lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
    \"\n\",
    \"  </lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"\n\",
    \"      <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:hasStrength>\n\",
    \"\n\",
    \"          <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
    \"\n\",
    \"        </lrml:hasStrength>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":person\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <lrml:SuborderList>\n\",
    \"\n\",
    \"            <lrml:Prohibition>\n\",
    \"\n\",
    \"              <ruleml:Atom>\n\",
    \"\n\",
    \"                <ruleml:Rel iri=\\":engageCreditActivity\\"/>\n\",
    \"\n\",
    \"                <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"              </ruleml:Atom>\n\",
    \"\n\",
    \"            </lrml:Prohibition>\n\",
    \"\n\",
    \"          </lrml:SuborderList>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:PrescriptiveStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:PenaltyStatement key=\\"pen2\\">\n\",
    \"\n\",
    \"      <lrml:SuborderList>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnits\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":imprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnitPlusImprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"      </lrml:SuborderList>\n\",
    \"\n\",
    \"    </lrml:PenaltyStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep1\\">\n\",
    \"\n\",
    \"      <lrml:Reparation key=\\"assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep2\\">\n\",
    \"\n\",
    \"      <lrml:Reparation keyref=\\"#assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"</lrml:Statements>\n\",
    \"\\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": f\\"\\"\\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\\"\\"\\"\n\",
    \"        }\n\",
    \"      ],\n\",
    \"      \\"temperature\\": 0.25,\n\",
    \"      \\"max_tokens\\": 500\n\",
    \"    }\n\",
    \"\n\",
    \"    \n\",
    \"    body = str.encode(json.dumps(data))\n\",
    \"    \n\",
    \"    \n\",
    \"    url = ''\n\",
    \"    # Replace this with the primary/secondary key or AMLToken for the endpoint\n\",
    \"    api_key = ''\n\",
    \"    if not api_key:\n\",
    \"        raise Exception(\\"A key should be provided to invoke the endpoint\\")\n\",
    \"    \n\",
    \"    \n\",
    \"    headers = {'Content-Type':'application/json', 'Authorization':('Bearer '+ api_key)}\n\",
    \"    \n\",
    \"    req = urllib.request.Request(url, body, headers)\n\",
    \"    \n\",
    \"    try:\n\",
    \"        response = urllib.request.urlopen(req)\n\",
    \"    \n\",
    \"        result = response.read()\n\",
    \"        #print(result)\n\",
    \"\n\",
    \"        return result\n\",
    \"        \n\",
    \"    except urllib.error.HTTPError as error:\n\",
    \"        print(\\"The request failed with status code: \\" + str(error.code))\n\",
    \"\n\",
    \"        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure\n\",
    \"        print(error.info())\n\",
    \"        print(error.read().decode(\\"utf8\\", 'ignore'))\n\",
    \"\n\",
    \"\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 25,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import pandas as pd\n\",
    \"\n\",
    \"def csv_parser():\n\",
    \"\n\",
    \"    csv_filename = 'sections.csv' # file containing all the sections from the E-Waste Rules, generated via IK_interface function\n\",
    \"\n\",
    \"    df_condition = \\"1\\"\n\",
    \"    # Read the CSV file into a Pandas DataFrame\n\",
    \"    df = pd.read_csv(csv_filename)\n\",
    \"\n\",
    \"    if df_condition == \\"1\\":\n\",
    \"        df2 = df.iloc[70:85]\n\",
    \"    else:\n\",
    \"        df2=df.copy()\n\",
    \"\n\",
    \"    return df2\n\",
    \"\n\",
    \"    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 27,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"                                      Section Title  \\\n\",
      \"70           11. Registration of surrogacy clinics.   \n\",
      \"71           11. Registration of surrogacy clinics.   \n\",
      \"72           11. Registration of surrogacy clinics.   \n\",
      \"73           11. Registration of surrogacy clinics.   \n\",
      \"74                 12. Certificate of registration.   \n\",
      \"75                 12. Certificate of registration.   \n\",
      \"76                 12. Certificate of registration.   \n\",
      \"77                 12. Certificate of registration.   \n\",
      \"78                 12. Certificate of registration.   \n\",
      \"79  13. Cancellation or suspension of registration.   \n\",
      \"80  13. Cancellation or suspension of registration.   \n\",
      \"81  13. Cancellation or suspension of registration.   \n\",
      \"82  13. Cancellation or suspension of registration.   \n\",
      \"83                                      14. Appeal.   \n\",
      \"84                                      14. Appeal.   \n\",
      \"\n\",
      \"                                       Nested Content  \n\",
      \"70  No person shall establish any surrogacy clinic...  \n\",
      \"71  Every application for registration under sub-s...  \n\",
      \"72  Every surrogacy clinic which is conducting sur...  \n\",
      \"73  No surrogacy clinic shall be registered under ...  \n\",
      \"74  The appropriate authority shall after holding ...  \n\",
      \"75  The appropriate authority shall after holding ...  \n\",
      \"76  Where, after the inquiry and after giving an o...  \n\",
      \"77  Every certificate of registration shall be val...  \n\",
      \"78  The certificate of registration shall be displ...  \n\",
      \"79  The appropriate authority may, suo motu or on ...  \n\",
      \"80  The appropriate authority may, suo motu or on ...  \n\",
      \"81  If after giving a reasonable opportunity of be...  \n\",
      \"82  Notwithstanding anything contained in sub-sect...  \n\",
      \"83  The surrogacy clinic or the intending couple o...  \n\",
      \"84  the State Government, where the appeal is agai...  \n\"
     ]
    }
   ],
   \"source\": [
    \"print(csv_parser())\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 28,
   \"metadata\": {
    \"id\": \"Zs6yo1UWDRKi\"
   },
   \"outputs\": [],
   \"source\": [
    \"\n\",
    \"# Now, 'df' contains the data from the CSV file\n\",
    \"    # You can perform various operations on the DataFrame\n\",
    \"section_for_conversion = ''\n\",
    \"\n\",
    \"combined_response = ''\n\",
    \"\n\",
    \"df2 = csv_parser()\n\",
    \"# Iterate through rows and process the data\n\",
    \"for index, row in df2.iterrows():\n\",
    \"    section_title = row['Section Title']\n\",
    \"    nested_content = row['Nested Content']\n\",
    \"\n\",
    \"    # Process section_title and nested_content as needed\n\",
    \"    #print(f\\"Section Title: {section_title}\\")\n\",
    \"    #print(f\\"Nested Content: {nested_content}\\n\\")\n\",
    \"    section_for_conversion = f\\"{section_title}: {nested_content}\\n\\"\n\",
    \"\n\",
    \"    result=send_request(section_for_conversion)\n\",
    \"    \n\",
    \"    result_json = json.loads(result.decode('utf-8'))\n\",
    \"    \n\",
    \"    # Extract the value inside the \\"text\\" key\n\",
    \"    text_value = result_json['choices'][0]['message']['content']\n\",
    \"\n\",
    \"    combined_response += text_value\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 29,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/surrogacy-act\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\">\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":establishSurrogacyClinic\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":establishSurrogacyClinic\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </ruleml:then>\n\",
      \"    </ruleml:Rule>\n\",
      \"  </lrml:PresHere is the statute extract in LegalRuleML XML format:\n\",
      \"\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.nic.in/the-national-surrogacy-board-act-2020/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\">\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":applicationForRegistration\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":makeApplication\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </ruleml:then>\n\",
      \"    </ruleml:Rule>\n\",
      \"  </lrml:PrescriptHere is the LegalRuleML XML format for the given statutory extract:\n\",
      \"```xml\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/latest/\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s1\\">\n\",
      \"      <lrml:shortName>Surrogacy Clinics</lrml:shortName>\n\",
      \"      <lrml:longName>The Surrogacy (Registration of Clinics) Act, 2019</lrml:longName>\n\",
      \"      <lrml:section>11</lrml:section>\n\",
      \"      <lrml:extract>Every surrogacy clinic which is conducting surrogacy or surrogacy procedures, partly or exclusively, referred to in clause (ii) of section 4 shall, within a period of sixty days from the date of appointment of appropriate authority, apply for registration:</lrml:extract>\n\",
      \"      <lrml:penalty>Provided that such clinic shall cease to conduct any such counselling or procedures on the expiry of six months from the date of commencement of this Act, unless such clinic has applied for registration and is so registered separately or till such application is disposed of, whichever is earlier.</lrml:penalty>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Statutes` is the root element of the LegalRuleML document, which contains the statutes in the format defined by the LegalRuleML standard.\n\",
      \"* `lrml:Statute` is an element that represents a single statute, with a unique key (`key`) that identifies the statute. In this case, the key is \\"s1\\".\n\",
      \"* `lrml:shortName` and `lrml:longName` are elements that provide a short and long name for the statute, respectively. These elements are optional, but they can be useful for displaying the statute in a user-friendly format.\n\",
      \"* `lrml:section` is an element that represents the section of the statute whereHere is the LegalRuleML XML format for the given statutory extract:\n\",
      \"\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/spec/1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s1\\">\n\",
      \"      <lrml:Title>Registration of surrogacy clinics</lrml:Title>\n\",
      \"      <lrml:Text>\n\",
      \"        <lrml:Paragraph>\n\",
      \"          <lrml:Rule key=\\"r1\\">\n\",
      \"            <lrml:Clause>\n\",
      \"              <lrml:Atom key=\\"a1\\">\n\",
      \"                <lrml:Rel iri=\\":satisfied\\"/>\n\",
      \"                <lrml:Var>appropriate authority</lrml:Var>\n\",
      \"              </lrml:Atom>\n\",
      \"              <lrml:Atom key=\\"a2\\">\n\",
      \"                <lrml:Rel iri=\\":facilities\\"/>\n\",
      \"                <lrml:Var>such facilities</lrml:Var>\n\",
      \"              </lrml:Atom>\n\",
      \"              <lrml:Atom key=\\"a3\\">\n\",
      \"                <lrml:Rel iri=\\":equipment\\"/>\n\",
      \"                <lrml:Var>such equipment</lrml:Var>\n\",
      \"              </lrml:Atom>\n\",
      \"              <lrml:Atom key=\\"a4\\">\n\",
      \"                <lrml:Rel iri=\\":standards\\"/>\n\",
      \"                <lrml:Var>such standards</lrml:Var>\n\",
      \"              </lrml:Atom>\n\",
      \"            </lrml:Clause>\n\",
      \"            <lrml:Clause>\n\",
      \"              <lrml:Atom key=\\"a5\\">\n\",
      \"                <lrml:Rel iri=\\":maintain\\"/>\n\",
      \"                <lrml:Var>such clinic</lrml:Var>\n\",
      \"              </lrml:Atom>\n\",
      \"            </lrml:Clause>\n\",
      \"          </lrml:Rule>\n\",
      \"        </lrml:Paragraph>\n\",
      \"      </lrml:Text>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* The statHere is the LegalRuleML XML format for the statutory extract provided:\n\",
      \"\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/spec/1.0\\">\n\",
      \"\n\",
      \"  <lrml:Statutes>\n\",
      \"\n\",
      \"    <lrml:Statute key=\\"s12\\">\n\",
      \"\n\",
      \"      <lrml:Title>Certificate of registration</lrml:Title>\n\",
      \"\n\",
      \"      <lrml:Text>\n\",
      \"\n\",
      \"        <lrml:Paragraph>\n\",
      \"\n\",
      \"          <lrml:Phrase>The appropriate authority</lrml:Phrase>\n\",
      \"\n\",
      \"          <lrml:Object>shall</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:Verb>after holding an enquiry</lrml:Verb>\n\",
      \"\n\",
      \"          <lrml:Object>and after satisfying itself</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:Verb>that the applicant</lrml:Verb>\n\",
      \"\n\",
      \"          <lrml:Object>has complied with all the requirements</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:Object>of this Act</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:Object>and the rules and regulations</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:Object>made thereunder</lrml:Object>,\n\",
      \"\n\",
      \"          <lrml:Ind>grant</lrml:Ind>\n\",
      \"\n\",
      \"          <lrml:Agency>a certificate of registration</lrml:Agency>\n\",
      \"\n\",
      \"          <lrml:Object>to the surrogacy clinic</lrml:Object>\n\",
      \"\n\",
      \"          <lrml:InDirect> within a period of</lrml:InDirect>\n\",
      \"\n\",
      \"          <lrml:Ind>ninety days</lrml:Ind>\n\",
      \"\n\",
      \"          <lrml:From>from the date of application</lrml:From>\n\",
      \"\n\",
      \"          <lrml:Received>by it</lrml:Received>\n\",
      \"\n\",
      \"          <lrml:On>in such form</lrml:On>\n\",
      \"\n\",
      \"          <lrml:On>on payment of such fees</lrml:On>\n\",
      \"\n\",
      \"          <lrml:As>as may be prescribed.</lrml:As>Here is the LegalRuleML XML format for the statutory extract provided:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns:lrml=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s12\\">\n\",
      \"      <lrml:Title>Certificate of registration</lrml:Title>\n\",
      \"      <lrml:Text>\n\",
      \"        <lrml:Paragraph>\n\",
      \"          <lrml:Phrase>The appropriate authority</lrml:Phrase>\n\",
      \"          <lrml:ObjectRef>\n\",
      \"            <lrml:ObjectRefType>organization</lrml:ObjectRefType>\n\",
      \"            <lrml:ObjectRefValue>Appropriate Authority</lrml:ObjectRefValue>\n\",
      \"          </lrml:ObjectRef>\n\",
      \"          <lrml:Shorthand>sh</lrml:Shorthand>\n\",
      \"          <lrml:Phrase>shall</lrml:Phrase>\n\",
      \"        </lrml:Paragraph>\n\",
      \"        <lrml:Paragraph>\n\",
      \"          <lrml:Phrase>after holding an enquiry</lrml:Phrase>\n\",
      \"          <lrml:Shorthand>enq</lrml:Shorthand>\n\",
      \"          <lrml:Phrase>and</lrml:Phrase>\n\",
      \"          <lrml:ObjectRef>\n\",
      \"            <lrml:ObjectRefType>person</lrml:ObjectRefType>\n\",
      \"            <lrml:ObjectRefValue>applicant</lrml:ObjectRefValue>\n\",
      \"          </lrml:ObjectRef>\n\",
      \"          <lrml:Shorthand>app</lrml:Shorthand>\n\",
      \"          <lrml:Phrase>and</lrml:Phrase>\n\",
      \"          <lrml:Shorthand>complied</lrml:Shorthand>\n\",
      \"          <lrml:Phrase>with</lrml:Phrase>\n\",
      \"          <lrml:ObjectRef>\n\",
      \"            <lrml:ObjectRefType>law</lrml:ObjectRefType>\n\",
      \"            <lrml:Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/Act\\">\n\",
      \"    <lrml:title>The Act</lrml:title>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\">\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defective-ontology.org/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <lrml:Rel iri=\\":certificateRegistration\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <lrml:Rel iri=\\":rejectApplication\\"/>\n\",
      \"              <lrml:Var>X</lrml:Here is the LegalRuleML XML format for the statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/act12\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":certificateOfRegistration\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":renewCertificateOfRegistration\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </ruleml:then>\n\",
      \"    </ruleml:Rule>\n\",
      \"  </lrml:PrescriptiveStatement>\n\",
      \"</lrml:Statements>Here is the LegalRuleML XML format for the statutory extract provided:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.statutes.gov.hk/eng/2011/12.htm#param43\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":certificateOfRegistration\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":displayCertificateOfRegistration\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </ruleml:then>\n\",
      \"    </ruleml:Rule>\n\",
      \"  </lrml:Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.surrogacymact.gov.in/\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":surrogacy-clinic\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":show-cause\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":suspend-registration\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"              <ruleml:IndHere is the LegalRuleML XML format for the statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/surrogacy-act.html\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\">\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:if>\n\",
      \"        <lrml:Atom>\n\",
      \"          <lrml:Rel iri=\\":surrogacyClinic\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </lrml:Atom>\n\",
      \"      </lrml:if>\n\",
      \"      <lrml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <lrml:Rel iri=\\":suspendRegistration\\"/>\n\",
      \"              <lrml:Var>X</lrml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <lrml:Rel iri=\\":cancelRegistration\\"/>\n\",
      \"              <lrml:Var>X</lrml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </lrml:then>\n\",
      \"    </Here is the LegalRuleML XML format for the given statutory extract:\n\",
      \"```xml\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns:lrml=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s13\\">\n\",
      \"      <lrml:Title>Cancellation or suspension of registration</lrml:Title>\n\",
      \"      <lrml:Text>\n\",
      \"        <lrml:Paragraph>\n\",
      \"          <lrml:Text>If after giving a reasonable opportunity of being heard to the surrogacy clinic, the appropriate authority is satisfied that there has been a breach of the provisions of the Act or the rules or regulations made thereunder, it may, without prejudice to any criminal action that it may take against such clinic, suspend its registration for such period as it may think fit or cancel its registration, as the case may be.</lrml:Text>\n\",
      \"        </lrml:Paragraph>\n\",
      \"      </lrml:Text>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"```\n\",
      \"Explanation of the XML code:\n\",
      \"\n\",
      \"* `lrml:LegalRuleML` is the root element of the LegalRuleML document.\n\",
      \"* `lrml:Statutes` is a child element of `lrml:LegalRuleML` that contains the statutory provisions.\n\",
      \"* `lrml:Statute` is an child element of `lrml:Statutes` that represents a single statutory provision.\n\",
      \"* `lrml:Title` is an attribute of `lrml:Statute` that provides the title of the statutory provision.\n\",
      \"* `lrml:Text` is a child element of `lrml:Statute` that contains the text of the statutory provision.\n\",
      \"* `lrml:Paragraph` is a child element of `lrml:Text` that represents a paragraph of the statutory provision.\n\",
      \"* `lrml:Text` is an attribute of `lrml:Paragraph` that provides the text of the paragraph.\n\",
      \"\n\",
      \"Note that this is just one possible way toHere is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s13\\">\n\",
      \"      <lrml:Rule>\n\",
      \"        <lrml:Title>Cancellation or suspension of registration</lrml:Title>\n\",
      \"        <lrml:Text>Notwithstanding anything contained in sub-sections (1) and (2), if the appropriate authority is of the opinion that it is necessary or expedient to do so in the public interest, it may, for reasons to be recorded in writing, suspend the registration of any surrogacy clinic without issuing any notice under sub-section (1).</lrml:Text>\n\",
      \"      </lrml:Rule>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"```\n\",
      \"Explanation of the XML code:\n\",
      \"\n\",
      \"* `lrml:LegalRuleML` is the root element of the LegalRuleML document.\n\",
      \"* `lrml:Statutes` is a child element of `lrml:LegalRuleML` that contains all the statutes in the document.\n\",
      \"* `lrml:Statute` is an individual statute element, keyed by a unique identifier (in this case, \\"s13\\").\n\",
      \"* `lrml:Rule` is a child element of `lrml:Statute` that contains the text of the statute.\n\",
      \"* `lrml:Title` is an attribute of `lrml:Rule` that provides the title of the statute.\n\",
      \"* `lrml:Text` is the child element of `lrml:Rule` that contains the text of the statute. In this case, the text is the actual text of the statute extract provided.\n\",
      \"\n\",
      \"Note that this is just one possible way to represent the statute extract in LegalRuleML format. There are many other ways to structure and format the XML, and the specific structure and formatting may depend on the requirements of the LegalRuleML application or system being used.Here is the statute extract in LegalRuleML XML format:\n\",
      \"\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.legislation.gov.in/sites/default/files/pdf_file/THE%20PROHIBITION%20OF%20CHILD%20MARRIAGE%20ACT%2C%201929.pdf\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.legislation.gov.in/def/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":appeal\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iHere is the LegalRuleML XML format for the given statute extract:\n\",
      \"```\n\",
      \"<lrml:Statements>\n\",
      \"  <lrml:Statement key=\\"appeal\\">\n\",
      \"    <lrml:hasQualification>\n\",
      \"      <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defective-ontology.org/2009/defeasible-strength\\"/>\n\",
      \"    </lrml:hasQualification>\n\",
      \"    <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"      <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"        <lrml:if>\n\",
      \"          <lrml:Atom>\n\",
      \"            <lrml:Rel iri=\\":appeal\\"/>\n\",
      \"            <lrml:Var>X</lrml:Var>\n\",
      \"          </lrml:Atom>\n\",
      \"        </lrml:if>\n\",
      \"        <lrml:then>\n\",
      \"          <lrml:SuborderList>\n\",
      \"            <lrml:Prohibition>\n\",
      \"              <ruleml:Atom>\n\",
      \"                <ruleml:Rel iri=\\":appealAgainstOrderAppropriateAuthorityState\\"/>\n\",
      \"                <ruleml:Var>X</ruleml:Var>\n\",
      \"              </ruleml:Atom>\n\",
      \"            </lrml:Prohibition>\n\",
      \"          </lrml:SuborderList>\n\",
      \"        </lrml:then>\n\",
      \"      </ruleml:Rule>\n\",
      \"    </lrml:PrescriptiveStatement>\n\",
      \"  </lrml:Statement>\n\",
      \"</lrml:Statements>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `<lrml:Statements>` is the root element of the LegalRuleML document, which contains all the prescriptive statements of the statute.\n\",
      \"* `<lrml:Statement>` is an element that represents a single prescriptive statement of the statute. In this case, there is only one statement, so we use this element once.\n\",
      \"* `<lrml:hasQualification>` is an element that indicates that the prescriptive statement has a qualification. In this case, the qualification is a defeasible strength, so we use the `DefeasibleStrength` element with the `iri` attribute set to `\\"http://defective-ontology\n\"
     ]
    }
   ],
   \"source\": [
    \"print (combined_response)\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"metadata\": {},
   \"source\": [
    \"# Additional Attempts\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 35,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import urllib.request\n\",
    \"import json\n\",
    \"import os\n\",
    \"import ssl\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def allowSelfSignedHttps(allowed):\n\",
    \"    # bypass the server certificate verification on client side\n\",
    \"    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):\n\",
    \"        ssl._create_default_https_context = ssl._create_unverified_context\n\",
    \"\n\",
    \"allowSelfSignedHttps(True) # this line is needed if you use self-signed certificate in your scoring service.\n\",
    \"\n\",
    \"# Request data goes here\n\",
    \"# The example below assumes JSON formatting which may be updated\n\",
    \"# depending on the format your endpoint expects.\n\",
    \"# More information can be found here:\n\",
    \"# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def send_request(section_for_conversion):\n\",
    \"\n\",
    \"    data = {\n\",
    \"      \\"messages\\": [\n\",
    \"        {\n\",
    \"          \\"role\\": \\"system\\",\n\",
    \"          \\"content\\": \\"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same with reference to the documentation available at http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format: The benefit referred to in comma 1 shall be paid in an amount equal 80 per cent of five-twelfths of the income earned and reported for tax purposes by the freelancer in the second year preceding the year of application.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"          <lrml:ConstitutiveStatement key=\\"tax2\\">\n\",
    \"\n\",
    \"          <ruleml:Rule closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:Paraphrase>If income is reported in some year, then it was earned in the previous year.\n\",
    \"\n\",
    \"        </lrml:Paraphrase>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Expr key=\\":year-1\\">\n\",
    \"\n\",
    \"              <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"              <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"              <ruleml:Data xsi:type=\\"xs:integer\\">1</ruleml:Data>\n\",
    \"\n\",
    \"            </ruleml:Expr>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:ConstitutiveStatement>\n\",
    \"    <lrml:PrescriptiveStatement key=\\"literal\\">\n\",
    \"\n\",
    \"    <ruleml:Rule closure=\\"universal\\" key=\\":literal-template\\">\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"            <ruleml:And>\n\",
    \"\n\",
    \"                <ruleml:Atom key=\\":atom-earned\\">\n\",
    \"\n\",
    \"                    <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                        <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                        <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                        <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"                 <ruleml:Atom key=\\":atom-reported\\">\n\",
    \"\n\",
    \"                     <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                    <ruleml:Expr>\n\",
    \"\n\",
    \"                         <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                         <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                         <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"            </ruleml:And>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"             <lrml:Obligation key=\\"obl-paybenefit\\">\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:Bearer/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Employer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:AuxiliaryParty/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Freelancer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:Atom>\n\",
    \"\n\",
    \"                      <ruleml:Rel iri=\\":paybenefit\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                          <ruleml:Fun iri=\\":80_percent_of_five-twelfths_of\\"/>\n\",
    \"\n\",
    \"                          <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                      </ruleml:Expr>\n\",
    \"\n\",
    \"                      <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:Atom>\n\",
    \"\n\",
    \"              </lrml:Obligation>\n\",
    \"\n\",
    \"          </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"</lrml:PrescriptiveStatement>\n\",
    \"    \\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format:A person must not engage in a credit activity if the person does not hold a licence authorising the person to engage in the credit activity. Civil penalty: 2,000 penalty units.  Criminal penalty: 200 penalty units, or 2 years imprisonment, or both.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"\n\",
    \"<lrml:LegalSources>\n\",
    \"\n\",
    \"   <lrml:LegalSource key=\\"ls1\\"             sameAs=\\"http://www.comlaw.gov.au/Details/C2009A00134/Html/Text#param43\\"/>\n\",
    \"\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"\n\",
    \"   <lrml:appliesAssociations>\n\",
    \"\n\",
    \"          <lrml:Associations>\n\",
    \"\n\",
    \"                <lrml:Association>\n\",
    \"\n\",
    \"                       <lrml:appliesSource keyref=\\"#ls1/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"                </lrml:Association>\n\",
    \"\n\",
    \"          </lrml:Associations>\n\",
    \"\n\",
    \"</lrml:appliesAssociations>\n\",
    \"\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"\n\",
    \"<lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
    \"\n\",
    \"  </lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"\n\",
    \"      <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:hasStrength>\n\",
    \"\n\",
    \"          <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
    \"\n\",
    \"        </lrml:hasStrength>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":person\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <lrml:SuborderList>\n\",
    \"\n\",
    \"            <lrml:Prohibition>\n\",
    \"\n\",
    \"              <ruleml:Atom>\n\",
    \"\n\",
    \"                <ruleml:Rel iri=\\":engageCreditActivity\\"/>\n\",
    \"\n\",
    \"                <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"              </ruleml:Atom>\n\",
    \"\n\",
    \"            </lrml:Prohibition>\n\",
    \"\n\",
    \"          </lrml:SuborderList>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:PrescriptiveStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:PenaltyStatement key=\\"pen2\\">\n\",
    \"\n\",
    \"      <lrml:SuborderList>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnits\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":imprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnitPlusImprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"      </lrml:SuborderList>\n\",
    \"\n\",
    \"    </lrml:PenaltyStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep1\\">\n\",
    \"\n\",
    \"      <lrml:Reparation key=\\"assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep2\\">\n\",
    \"\n\",
    \"      <lrml:Reparation keyref=\\"#assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"</lrml:Statements>\n\",
    \"\\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": f\\"\\"\\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\\"\\"\\"\n\",
    \"        }\n\",
    \"      ],\n\",
    \"      \\"temperature\\": 0.25,\n\",
    \"      \\"max_tokens\\": 500\n\",
    \"    }\n\",
    \"\n\",
    \"    \n\",
    \"    body = str.encode(json.dumps(data))\n\",
    \"    \n\",
    \"    \n\",
    \"    url = 'https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions'\n\",
    \"    # Replace this with the primary/secondary key or AMLToken for the endpoint\n\",
    \"    api_key = '4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj'\n\",
    \"    if not api_key:\n\",
    \"        raise Exception(\\"A key should be provided to invoke the endpoint\\")\n\",
    \"    \n\",
    \"    \n\",
    \"    headers = {'Content-Type':'application/json', 'Authorization':('Bearer '+ api_key)}\n\",
    \"    \n\",
    \"    req = urllib.request.Request(url, body, headers)\n\",
    \"    \n\",
    \"    try:\n\",
    \"        response = urllib.request.urlopen(req)\n\",
    \"    \n\",
    \"        result = response.read()\n\",
    \"        #print(result)\n\",
    \"\n\",
    \"        return result\n\",
    \"        \n\",
    \"    except urllib.error.HTTPError as error:\n\",
    \"        print(\\"The request failed with status code: \\" + str(error.code))\n\",
    \"\n\",
    \"        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure\n\",
    \"        print(error.info())\n\",
    \"        print(error.read().decode(\\"utf8\\", 'ignore'))\n\",
    \"\n\",
    \"\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 33,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import pandas as pd\n\",
    \"\n\",
    \"def csv_parser():\n\",
    \"\n\",
    \"    csv_filename = 'fullsections.csv' # file containing all the sections from the E-Waste Rules, generated via IK_interface function\n\",
    \"\n\",
    \"    df_condition = \\"1\\"\n\",
    \"    # Read the CSV file into a Pandas DataFrame\n\",
    \"    df = pd.read_csv(csv_filename)\n\",
    \"\n\",
    \"    if df_condition == \\"1\\":\n\",
    \"        df2 = df.iloc[51:70]\n\",
    \"    else:\n\",
    \"        df2=df.copy()\n\",
    \"\n\",
    \"    return df2\n\",
    \"\n\",
    \"    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 32,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"                                 Section Title  \\\n\",
      \"51    4. Responsibilities of the manufacturer.   \n\",
      \"52    4. Responsibilities of the manufacturer.   \n\",
      \"53    4. Responsibilities of the manufacturer.   \n\",
      \"54    4. Responsibilities of the manufacturer.   \n\",
      \"55        5. Responsibilities of the producer.   \n\",
      \"56        5. Responsibilities of the producer.   \n\",
      \"57        5. Responsibilities of the producer.   \n\",
      \"58        5. Responsibilities of the producer.   \n\",
      \"59        5. Responsibilities of the producer.   \n\",
      \"60        5. Responsibilities of the producer.   \n\",
      \"61        5. Responsibilities of the producer.   \n\",
      \"62        5. Responsibilities of the producer.   \n\",
      \"63        5. Responsibilities of the producer.   \n\",
      \"64        5. Responsibilities of the producer.   \n\",
      \"65        5. Responsibilities of the producer.   \n\",
      \"66        5. Responsibilities of the producer.   \n\",
      \"67        5. Responsibilities of the producer.   \n\",
      \"68        5. Responsibilities of the producer.   \n\",
      \"69        5. Responsibilities of the producer.   \n\",
      \"70  6. Responsibilities of collection centres.   \n\",
      \"\n\",
      \"                                       Nested Content  \n\",
      \"51  apply for an authorisation in Form 1 (a) in ac...  \n\",
      \"52  ensure that no damage is caused to the environ...  \n\",
      \"53  maintain records of the e-waste generated, han...  \n\",
      \"54  file annual returns in Form-3, to the concerne...  \n\",
      \"55  - The producer of electrical and electronic eq...  \n\",
      \"56  implementing the Extended Producers Responsibi...  \n\",
      \"57  collection and channelisation of e-waste gener...  \n\",
      \"58  the mechanism used for channelisation of e-was...  \n\",
      \"59  for disposal in Treatment, Storage and Disposa...  \n\",
      \"60  Extended Producer Responsibility - Authorisati...  \n\",
      \"61  providing contact details such as address, e-m...  \n\",
      \"62  creating awareness through media, publications...  \n\",
      \"63  the producer shall opt to implement Extended P...  \n\",
      \"64  to provide information on the implementation o...  \n\",
      \"65  the import of electrical and electronic equipm...  \n\",
      \"66  maintaining records in Form-2 of the e-waste h...  \n\",
      \"67  filing annual returns in Form-3, to the Centra...  \n\",
      \"68  the Producer shall apply to the Central Pollut...  \n\",
      \"69  Operation without Extended Producer Responsibi...  \n\",
      \"70  collect e-waste on behalf of producer or disma...  \n\"
     ]
    }
   ],
   \"source\": [
    \"print(csv_parser())\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 36,
   \"metadata\": {
    \"id\": \"Zs6yo1UWDRKi\"
   },
   \"outputs\": [],
   \"source\": [
    \"\n\",
    \"# Now, 'df' contains the data from the CSV file\n\",
    \"    # You can perform various operations on the DataFrame\n\",
    \"section_for_conversion = ''\n\",
    \"\n\",
    \"combined_response = ''\n\",
    \"\n\",
    \"df2 = csv_parser()\n\",
    \"# Iterate through rows and process the data\n\",
    \"for index, row in df2.iterrows():\n\",
    \"    section_title = row['Section Title']\n\",
    \"    nested_content = row['Nested Content']\n\",
    \"\n\",
    \"    # Process section_title and nested_content as needed\n\",
    \"    #print(f\\"Section Title: {section_title}\\")\n\",
    \"    #print(f\\"Nested Content: {nested_content}\\n\\")\n\",
    \"    section_for_conversion = f\\"{section_title}: {nested_content}\\n\\"\n\",
    \"\n\",
    \"    result=send_request(section_for_conversion)\n\",
    \"    \n\",
    \"    result_json = json.loads(result.decode('utf-8'))\n\",
    \"    \n\",
    \"    # Extract the value inside the \\"text\\" key\n\",
    \"    text_value = result_json['choices'][0]['message']['content']\n\",
    \"\n\",
    \"    combined_response += text_value\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 37,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Here is the LegalRuleML XML format for the statute extract provided:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/latest/\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s1\\">\n\",
      \"      <lrml:Name>The Water (Prevention and Control of Pollution) Rules, 1989</lrml:Name>\n\",
      \"      <lrml:Year>1989</lrml:Year>\n\",
      \"      <lrml:Section>4</lrml:Section>\n\",
      \"      <lrml:Paragraph>apply for an authorisation in Form 1 (a) in accordance with the procedure prescribed under sub-rule (2) of rule 13 from the concerned State Pollution Control Board, which shall give the authorisation in accordance with Form 1 (bb);</lrml:Paragraph>\n\",
      \"      <lrml:Rule>\n\",
      \"        <lrml:Name>Form 1 (a)</lrml:Name>\n\",
      \"        <lrml:RefersTo>#s1-1</lrml:RefersTo>\n\",
      \"        <lrml:Description>The form for applying for authorisation</lrml:Description>\n\",
      \"      </lrml:Rule>\n\",
      \"      <lrml:Rule>\n\",
      \"        <lrml:Name>Form 1 (bb)</lrml:Name>\n\",
      \"        <lrml:RefersTo>#s1-2</lrml:RefersTo>\n\",
      \"        <lrml:Description>The form for the authorisation given by the State Pollution Control Board</lrml:Description>\n\",
      \"      </lrml:Rule>\n\",
      \"      <lrml:Procedure>\n\",
      \"        <lrml:Step>\n\",
      \"          <lrml:Action>apply</lrml:Action>\n\",
      \"          <lrml:ObjectRef>#s1-3</lrml:ObjectRef>\n\",
      \"          <lrml:Description>The procedure for applying for authorisation</lrml:Description>\n\",
      \"        </lrml:Step>\n\",
      \"        <lrml:Step>\n\",
      \"          <lrml:Action>grant</lrml:Action>\n\",
      \"          <lrmlHere is the LegalRuleML XML format for the given statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.statutes.gov.hk/en/modules.jsp?consol_num=A00134\\">\n\",
      \"    <lrml:appliesAssociations>\n\",
      \"      <lrml:Associations>\n\",
      \"        <lrml:Association keyref=\\"#ps1\\"/>\n\",
      \"      </lrml:Associations>\n\",
      \"    </lrml:appliesAssociations>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"  <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"    <lrml:hasStrength>\n\",
      \"      <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.legalruleml.org/defeasible1\\"/>\n\",
      \"    </lrml:hasStrength>\n\",
      \"    <ruleml:if>\n\",
      \"      <ruleml:Atom>\n\",
      \"        <ruleml:Rel iri=\\":manufacturer\\"/>\n\",
      \"        <ruleml:Var>X</ruleml:Var>\n\",
      \"      </ruleml:Atom>\n\",
      \"    </ruleml:if>\n\",
      \"    <ruleml:then>\n\",
      \"      <lrml:Obligation>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":ensureNoDamageEnvironmentalStorageTransportationEWaste\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </lrml:Obligation>\n\",
      \"    </ruleml:then>\n\",
      \"  </ruleml:Rule>\n\",
      \"</lrml:PrescriptiveStatement>\n\",
      \"```\n\",
      \"Explanation:Here is the LegalRuleML XML format for the statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/e-waste-act.pdf\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.example.org/defeasible-ontology/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":manufacturer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":maintainRecords\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":form2\\"/>\n\",
      \"              <Here is the LegalRuleML XML format for the given statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/statute-4\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defns.org/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":manufacturer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":fileAnnualReturns\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"              <ruleml:Expr>\n\",
      \"                <ruleml:Fun iri=\\"http://defns.org/file-annual-returns\\"/>\n\",
      \"                <ruleml:Var>Form-3</ruleml:Var>\n\",
      \"                <ruleml:Ind>30</ruleml:Ind>Here is the LegalRuleML XML representation of the statutory extract:\n\",
      \"\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalSources xmlns=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:LegalSource key=\\"ls1\\">\n\",
      \"    <lrml:uri>http://www.indiaenvironment.org/legislation/MCD-2015.pdf</lrml:uri>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Statements xmlns=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <lrml:Rule key=\\":rule1\\">\n\",
      \"      <lrml:if>\n\",
      \"        <lrml:Atom key=\\":person\\">\n\",
      \"          <lrml:Rel iri=\\"http://www.w3.org/1999/02/22-ocr-vocab#Person\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </lrml:Atom>\n\",
      \"      </lrml:if>\n\",
      \"      <lrml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Obligation key=\\"assoc1\\">\n\",
      \"            <lrml:appliesPenalty keyref=\\"#pen1\\"/>\n\",
      \"            <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
      \"          </lrml:Obligation>\n\",
      \"          <lrml:Obligation key=\\"assoc2\\">\n\",
      \"            <lrml:appliesPenalty keyref=\\"#pen2\\"/>\n\",
      \"            <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
      \"          </lrml:Obligation>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </lrml:then>\n\",
      \"    </lrml:Rule>\n\",
      \"  </lrml:PrescriptiveStatement>\n\",
      \"  <lrml:PenaltyStatement key=\\"rep1\\">\n\",
      \"    <lrml:Reparation key=\\"assoc1\\">\n\",
      \"      <lrml:mechanism>channelisation of e-waste</lrml:meHere is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalSources xmlns=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:LegalSource key=\\"ls1\\">\n\",
      \"    <lrml:uri>http://www.indiaenvironment.org/legislation/e-waste-management-rules-2016/</lrml:uri>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Association>\n\",
      \"      <lrml:relURI=\\"http://www.legalruleml.org/v1.0/core#person\\"/>\n\",
      \"      <lrml:varName>X</lrml:varName>\n\",
      \"    </lrml:Association>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:defiURI=\\"http://www.legalruleml.org/v1.0/core#defeasible-ontology\\"/>\n\",
      \"    <lrml:ind>200</lrml:ind>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:hasStrength>\n\",
      \"    <lrml:defiURI=\\"http://www.legalruleml.org/v1.0/core#strength-ontology\\"/>\n\",
      \"    <lrml:ind>2 years</lrml:ind>\n\",
      \"  </lrml:hasStrength>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:relURI=\\"http://www.legalruleml.org/v1.0/core#ExtendedProducersResponsibility\\"/>\n\",
      \"    <lrml:varName>X</lrml:varName>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:SuborderList>\n\",
      \"    <lrml:Obligation key=\\"assoc1\\">\n\",
      \"      <lrml:appliesPHere is the statute extract in LegalRuleML XML format:\n\",
      \"\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.ecfr.gov/cgi-bin/text-idx?SID=7356996a94c2&amp;mc=true&amp;node=se21.1.101_102&amp;rgn=div8\\">\n\",
      \"    <lrml:appliesAssociations>\n\",
      \"      <lrml:Associations>\n\",
      \"        <lrml:Association>\n\",
      \"          <lrml:appliesSource keyref=\\"#ls1\\"/>\n\",
      \"          <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"        </lrml:Association>\n\",
      \"      </lrml:Associations>\n\",
      \"    </lrml:appliesAssociations>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association>\n\",
      \"        <lrml:appliesSource keyref=\\"#ls1\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"  <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"    <lrml:hasStrength>\n\",
      \"      <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defectiveontology.org/defective1\\"/>\n\",
      \"    </lrml:hasStrength>\n\",
      \"    <ruleml:if>\n\",
      \"      <ruleml:Atom>\n\",
      \"        <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"        <ruleml:Var>X</ruleml:Var>\n\",
      \"      </ruleml:Atom>\n\",
      \"    </ruleml:if>\n\",
      \"    <ruleml:then>\n\",
      \"      <lrml:SuborderList>\n\",
      \"        <lrml:ProhibitionHere is the statutory extract converted to LegalRuleML XML format:\n\",
      \"\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.ec.europa.eu/environment/waste/docs/ewaste_directive_en.pdf\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":channeliseEwaste\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/act5\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.example.org/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <lrml:Rel iri=\\":disposal\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <lrml:Rel iri=\\":treatmentStorageAndDisposalFacility\\"/>\n\",
      \"              <lrml:Var>X</lrml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Atom>\n\",
      \"            <lrml:Rel iri=\\":preTreatment\\"/>\n\",
      \"            <lrml:Var>X</lrml:Var>\n\",
      \"          </lrml:Here is the LegalRuleML XML format for the statutory extract given:\n\",
      \"\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/spec/1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"5\\">\n\",
      \"      <lrml:Title>Responsibilities of the producer</lrml:Title>\n\",
      \"      <lrml:Text>\n\",
      \"        <lrml:Paragraph>\n\",
      \"          <lrml:Text>Extended Producer Responsibility - Authorisation should comprise of a general scheme for the collection of waste Electrical and Electronic Equipment from the Electrical and Electronic Equipment placed on the market earlier, such as through dealers, collection centers, Producer Responsibility Organizations, through buy-back arrangements, exchange schemes, Deposit Refund Systems, etc. whether directly or through any authorized agency and channelizing the items so collected to authorized recyclers;</lrml:Text>\n\",
      \"        </lrml:Paragraph>\n\",
      \"      </lrml:Text>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* The XML document starts with the `<lrml:LegalRuleML>` namespace prefix, which is the default namespace for the LegalRuleML language.\n\",
      \"* The `<lrml:Statutes>` element is a child element of the `<lrml:LegalRuleML>` element, and it contains a list of statutes.\n\",
      \"* The `<lrml:Statute>` element is a child element of the `<lrml:Statutes>` element, and it represents a single statute.\n\",
      \"* The `<lrml:Title>` element is a child element of the `<lrml:Statute>` element, and it contains the title of the statute.\n\",
      \"* The `<lrml:Text>` element is a child element of the `<lrml:Statute>` element, and it contains the text of the statute.\n\",
      \"* The `<lrml:Paragraph>` element is a child element of the `<lrml:Text>` element, and it contains a paragraph ofHere is the LegalRuleML XML format for the statutory extract provided:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/electrical-electronic-equipment-end-of-life-management-act-2019\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.legalruleml.org/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":provideContactDetails\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"        </lrml:SuborderList>\n\",
      \"      </ruleml:then>\n\",
      \"    </ruleml:Rule>Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\">\n\",
      \"    <lrml:uri>http://www.example.com/statutes/e-waste.html</lrml:uri>\n\",
      \"  </lrml:LegalSource>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\">\n\",
      \"        <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
      \"        <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
      \"      </lrml:Association>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defective-ontology.org/defective1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:if>\n\",
      \"        <lrml:Atom>\n\",
      \"          <lrml:Rel iri=\\":producer\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </lrml:Atom>\n\",
      \"      </lrml:if>\n\",
      \"      <lrml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <lrml:Atom>\n\",
      \"              <lrml:Rel iri=\\":createAwareness\\"/>\n\",
      \"              <lrml:Var>X</lrml:Var>\n\",
      \"            </lrml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <lrmlHere is the statute extract converted to LegalRuleML XML format:\n\",
      \"\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/latest/\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"5\\">\n\",
      \"      <lrml:Rule>\n\",
      \"        <lrml:Title>Responsibilities of the producer</lrml:Title>\n\",
      \"        <lrml:Body>\n\",
      \"          <lrml:Paragraph>\n\",
      \"            <lrml:Text>The producer shall opt to implement Extended Producer Responsibility individually or collectively.</lrml:Text>\n\",
      \"          </lrml:Paragraph>\n\",
      \"          <lrml:Option>\n\",
      \"            <lrml:Opt>\n\",
      \"              <lrml:Text>individual producer responsibility</lrml:Text>\n\",
      \"              <lrml:Description>In this case, the producer may set up his own collection centre or implement take back system or both to meet Extended Producer Responsibility.</lrml:Description>\n\",
      \"            </lrml:Opt>\n\",
      \"            <lrml:Opt>\n\",
      \"              <lrml:Text>collective system</lrml:Text>\n\",
      \"              <lrml:Description>In this case, producers may tie-up as a member with a Producer Responsibility Organisation or with e-waste exchange or both.</lrml:Description>\n\",
      \"            </lrml:Opt>\n\",
      \"          </lrml:Option>\n\",
      \"          <lrml:Mandatory>\n\",
      \"            <lrml:Text>It shall be mandatory upon on the individual producer in every case to seek Extended Producer Responsibility - Authorisation from Central Pollution Control Board in accordance with the Form-1 and the procedure laid down in sub-rule (1) of rule 13;</lrml:Text>\n\",
      \"          </lrml:Mandatory>\n\",
      \"        </lrml:Body>\n\",
      \"      </lrml:Rule>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"\n\",
      \"Note: This is just one possible way to represent the statute extract in LegalRuleML format. There are many possibleHere is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/deposit-refund-scheme.html\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":provideInformationImplementationDepositRefundScheme\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrmlHere is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/statutes/electrical-electronic-equipment-act.html\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defect-ontology.org/defect#defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":importElectricalElectronicEquipment\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":extHere is the LegalRuleML XML format for the statutory extract:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.ec.europa.eu/environment/waste/legislation/ewaste.htm\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"      <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
      \"      <lrml:hasStrength>\n\",
      \"        <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"http://defs.legislation.gov.uk/ontology/defeasible1\\"/>\n\",
      \"      </lrml:hasStrength>\n\",
      \"      <ruleml:if>\n\",
      \"        <ruleml:Atom>\n\",
      \"          <ruleml:Rel iri=\\":producer\\"/>\n\",
      \"          <ruleml:Var>X</ruleml:Var>\n\",
      \"        </ruleml:Atom>\n\",
      \"      </ruleml:if>\n\",
      \"      <ruleml:then>\n\",
      \"        <lrml:SuborderList>\n\",
      \"          <lrml:Prohibition>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":maintainRecords\\"/>\n\",
      \"              <ruleml:Var>X</ruleml:Var>\n\",
      \"            </ruleml:Atom>\n\",
      \"          </lrml:Prohibition>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <ruleml:Atom>\n\",
      \"              <ruleml:Rel iri=\\":Form-2Here is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/v1.0\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s1\\">\n\",
      \"      <lrml:Rule>\n\",
      \"        <lrml:Title>Responsibilities of the producer</lrml:Title>\n\",
      \"        <lrml:Body>\n\",
      \"          <lrml:Paragraph>\n\",
      \"            <lrml:Text>filing annual returns in Form-3, to the Central Pollution Control Board on or before the 30th day of June following the financial year to which that return relates.</lrml:Text>\n\",
      \"          </lrml:Paragraph>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <lrml:Agent>\n\",
      \"              <lrml:Person>\n\",
      \"                <lrml:Name>Producer</lrml:Name>\n\",
      \"              </lrml:Person>\n\",
      \"            </lrml:Agent>\n\",
      \"            <lrml:Action>\n\",
      \"              <lrml:PerformAction>file</lrml:PerformAction>\n\",
      \"              <lrml:On>\n\",
      \"                <lrml:Date>30</lrml:Date>\n\",
      \"                <lrml:Month>June</lrml:Month>\n\",
      \"                <lrml:Year>following</lrml:Year>\n\",
      \"              </lrml:On>\n\",
      \"            </lrml:Action>\n\",
      \"            <lrml:Target>\n\",
      \"              <lrml:Thing>\n\",
      \"                <lrml:Name>Central Pollution Control Board</lrml:Name>\n\",
      \"              </lrml:Thing>\n\",
      \"            </lrml:Target>\n\",
      \"          </lrml:Obligation>\n\",
      \"        </lrml:Body>\n\",
      \"      </lrml:Rule>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Statutes` is the root element of the LegalRuleML document, which contains the statutes.\n\",
      \"* `lrml:Statute`Here is the LegalRuleML XML format for the statutory extract:\n\",
      \"```\n\",
      \"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\n\",
      \"<lrml:LegalRuleML xmlns=\\"http://www.legalruleml.org/latest/\\">\n\",
      \"  <lrml:Statutes>\n\",
      \"    <lrml:Statute key=\\"s1\\">\n\",
      \"      <lrml:shortName>Responsibilities of the producer</lrml:shortName>\n\",
      \"      <lrml:longName>5. Responsibilities of the producer.</lrml:longName>\n\",
      \"      <lrml:rule>\n\",
      \"        <lrml:ruleType>must</lrml:ruleType>\n\",
      \"        <lrml:applies>\n\",
      \"          <lrml:appliesAssociations>\n\",
      \"            <lrml:Association keyref=\\"#p1\\"/>\n\",
      \"          </lrml:appliesAssociations>\n\",
      \"        </lrml:applies>\n\",
      \"        <lrml:if>\n\",
      \"          <lrml:Atom>\n\",
      \"            <lrml:Rel iri=\\":applyAuthorisation\\"/>\n\",
      \"            <lrml:Var>X</lrml:Var>\n\",
      \"            <lrml:Expr>\n\",
      \"              <lrml:Fun iri=\\":Form1\\"/>\n\",
      \"            </lrml:Expr>\n\",
      \"          </lrml:Atom>\n\",
      \"        </lrml:if>\n\",
      \"        <lrml:then>\n\",
      \"          <lrml:Obligation>\n\",
      \"            <lrml:Var>X</lrml:Var>\n\",
      \"            <lrml:Atom>\n\",
      \"              <lrml:Rel iri=\\":grantAuthorisation\\"/>\n\",
      \"              <lrml:Var>X</lrml:Var>\n\",
      \"              <lrml:Expr>\n\",
      \"                <lrml:Fun iri=\\":Form1(aa)\\"/>\n\",
      \"              </lrml:Expr>\n\",
      \"            </lrml:Atom>\n\",
      \"          </lrml:Obligation>\n\",
      \"        </lrml:then>\n\",
      \"      </lrml:rule>\n\",
      \"    </lrml:Statute>\n\",
      \"  </lrml:Statutes>\n\",
      \"</lrml:LegalRuleML>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `lrml:Statute` is the root element of the LegalRuleHere is the statute extract in LegalRuleML XML format:\n\",
      \"```\n\",
      \"<lrml:LegalSources>\n\",
      \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\n\",
      \"</lrml:LegalSources>\n\",
      \"\n\",
      \"<lrml:Context key=\\"psInfo1\\">\n\",
      \"  <lrml:appliesAssociations>\n\",
      \"    <lrml:Associations>\n\",
      \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
      \"    </lrml:Associations>\n\",
      \"  </lrml:appliesAssociations>\n\",
      \"</lrml:Context>\n\",
      \"\n\",
      \"<lrml:Statements key=\\"textblock1\\">\n\",
      \"  <lrml:hasQualification>\n\",
      \"    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\n\",
      \"  </lrml:hasQualification>\n\",
      \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
      \"    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\n\",
      \"      <lrml:if>\n\",
      \"        <lrml:Atom>\n\",
      \"          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\n\",
      \"          <lrml:Var>X</lrml:Var>\n\",
      \"        </lrml:Atom>\n\",
      \"      </lrml:if>\n\",
      \"      <lrml:then>\n\",
      \"        <lrml:Obligation>\n\",
      \"          <ruleml:Atom>\n\",
      \"            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\n\",
      \"            <lrml:Var>X</lrml:Var>\n\",
      \"          </ruleml:Atom>\n\",
      \"        </lrml:Obligation>\n\",
      \"      </lrml:then>\n\",
      \"    </ruleml:Rule>\n\",
      \"  </lrml:PrescriptiveStatement>\n\",
      \"</lrml:Statements>\n\",
      \"```\n\",
      \"Explanation:\n\",
      \"\n\",
      \"* `<lrml:LegalSources>` is a container for the legal source of the statute, which in this case is a URL.\n\",
      \"* `<lrml:Context>` is a container for the context of the statute, which includes the applies associations and the applies penalties.\n\",
      \"* `<lrml:Statements>` is a container for\n\"
     ]
    }
   ],
   \"source\": [
    \"print (combined_response)\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 38,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import urllib.request\n\",
    \"import json\n\",
    \"import os\n\",
    \"import ssl\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def allowSelfSignedHttps(allowed):\n\",
    \"    # bypass the server certificate verification on client side\n\",
    \"    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):\n\",
    \"        ssl._create_default_https_context = ssl._create_unverified_context\n\",
    \"\n\",
    \"allowSelfSignedHttps(True) # this line is needed if you use self-signed certificate in your scoring service.\n\",
    \"\n\",
    \"# Request data goes here\n\",
    \"# The example below assumes JSON formatting which may be updated\n\",
    \"# depending on the format your endpoint expects.\n\",
    \"# More information can be found here:\n\",
    \"# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"def send_request(section_for_conversion):\n\",
    \"\n\",
    \"    data = {\n\",
    \"      \\"messages\\": [\n\",
    \"        {\n\",
    \"          \\"role\\": \\"system\\",\n\",
    \"          \\"content\\": \\"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same with reference to the documentation available at http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format: The benefit referred to in comma 1 shall be paid in an amount equal 80 per cent of five-twelfths of the income earned and reported for tax purposes by the freelancer in the second year preceding the year of application.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"          <lrml:ConstitutiveStatement key=\\"tax2\\">\n\",
    \"\n\",
    \"          <ruleml:Rule closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:Paraphrase>If income is reported in some year, then it was earned in the previous year.\n\",
    \"\n\",
    \"        </lrml:Paraphrase>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Expr key=\\":year-1\\">\n\",
    \"\n\",
    \"              <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"              <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"              <ruleml:Data xsi:type=\\"xs:integer\\">1</ruleml:Data>\n\",
    \"\n\",
    \"            </ruleml:Expr>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:ConstitutiveStatement>\n\",
    \"    <lrml:PrescriptiveStatement key=\\"literal\\">\n\",
    \"\n\",
    \"    <ruleml:Rule closure=\\"universal\\" key=\\":literal-template\\">\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"            <ruleml:And>\n\",
    \"\n\",
    \"                <ruleml:Atom key=\\":atom-earned\\">\n\",
    \"\n\",
    \"                    <ruleml:Rel iri=\\":earned\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                        <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                        <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                        <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"                 <ruleml:Atom key=\\":atom-reported\\">\n\",
    \"\n\",
    \"                     <ruleml:Rel iri=\\":reported\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                    <ruleml:Expr>\n\",
    \"\n\",
    \"                         <ruleml:Fun iri=\\":subtract\\"/>\n\",
    \"\n\",
    \"                         <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                         <ruleml:Data xsi:type=\\"xs:integer\\">2</ruleml:Data>\n\",
    \"\n\",
    \"                     </ruleml:Expr>\n\",
    \"\n\",
    \"                 </ruleml:Atom>\n\",
    \"\n\",
    \"            </ruleml:And>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"             <lrml:Obligation key=\\"obl-paybenefit\\">\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:Bearer/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Employer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:slot>\n\",
    \"\n\",
    \"                      <lrml:AuxiliaryParty/>\n\",
    \"\n\",
    \"                      <ruleml:Var>Freelancer</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:slot>\n\",
    \"\n\",
    \"                  <ruleml:Atom>\n\",
    \"\n\",
    \"                      <ruleml:Rel iri=\\":paybenefit\\"/>\n\",
    \"\n\",
    \"                     <ruleml:Expr>\n\",
    \"\n\",
    \"                          <ruleml:Fun iri=\\":80_percent_of_five-twelfths_of\\"/>\n\",
    \"\n\",
    \"                          <ruleml:Var>income</ruleml:Var>\n\",
    \"\n\",
    \"                      </ruleml:Expr>\n\",
    \"\n\",
    \"                      <ruleml:Var>year</ruleml:Var>\n\",
    \"\n\",
    \"                  </ruleml:Atom>\n\",
    \"\n\",
    \"              </lrml:Obligation>\n\",
    \"\n\",
    \"          </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"</lrml:PrescriptiveStatement>\n\",
    \"    \\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": \\"Convert this statute extract to Legal Rule ML XML format:A person must not engage in a credit activity if the person does not hold a licence authorising the person to engage in the credit activity. Civil penalty: 2,000 penalty units.  Criminal penalty: 200 penalty units, or 2 years imprisonment, or both.\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"assistant\\",\n\",
    \"          \\"content\\": \\"\\"\\"\n\",
    \"\n\",
    \"<lrml:LegalSources>\n\",
    \"\n\",
    \"   <lrml:LegalSource key=\\"ls1\\"             sameAs=\\"http://www.comlaw.gov.au/Details/C2009A00134/Html/Text#param43\\"/>\n\",
    \"\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"\n\",
    \"   <lrml:appliesAssociations>\n\",
    \"\n\",
    \"          <lrml:Associations>\n\",
    \"\n\",
    \"                <lrml:Association>\n\",
    \"\n\",
    \"                       <lrml:appliesSource keyref=\\"#ls1/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#ps2\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"                       <lrml:toTarget keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"                </lrml:Association>\n\",
    \"\n\",
    \"          </lrml:Associations>\n\",
    \"\n\",
    \"</lrml:appliesAssociations>\n\",
    \"\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"\n\",
    \"<lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:Override over=\\"#ps2\\" under=\\"#ps1\\"/>\n\",
    \"\n\",
    \"  </lrml:hasQualification>\n\",
    \"\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"\n\",
    \"      <ruleml:Rule key=\\":rule1\\" closure=\\"universal\\">\n\",
    \"\n\",
    \"        <lrml:hasStrength>\n\",
    \"\n\",
    \"          <lrml:DefeasibleStrength key=\\"str1\\" iri=\\"&defeasible-ontology;#defeasible1\\"/>\n\",
    \"\n\",
    \"        </lrml:hasStrength>\n\",
    \"\n\",
    \"        <ruleml:if>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":person\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </ruleml:if>\n\",
    \"\n\",
    \"        <ruleml:then>\n\",
    \"\n\",
    \"          <lrml:SuborderList>\n\",
    \"\n\",
    \"            <lrml:Prohibition>\n\",
    \"\n\",
    \"              <ruleml:Atom>\n\",
    \"\n\",
    \"                <ruleml:Rel iri=\\":engageCreditActivity\\"/>\n\",
    \"\n\",
    \"                <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"              </ruleml:Atom>\n\",
    \"\n\",
    \"            </lrml:Prohibition>\n\",
    \"\n\",
    \"          </lrml:SuborderList>\n\",
    \"\n\",
    \"        </ruleml:then>\n\",
    \"\n\",
    \"      </ruleml:Rule>\n\",
    \"\n\",
    \"    </lrml:PrescriptiveStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:PenaltyStatement key=\\"pen2\\">\n\",
    \"\n\",
    \"      <lrml:SuborderList>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnits\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":imprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"        <lrml:Obligation>\n\",
    \"\n\",
    \"          <ruleml:Atom>\n\",
    \"\n\",
    \"            <ruleml:Rel iri=\\":payPenalUnitPlusImprisonment\\"/>\n\",
    \"\n\",
    \"            <ruleml:Var>X</ruleml:Var>\n\",
    \"\n\",
    \"            <ruleml:Ind>200</ruleml:Ind>\n\",
    \"\n\",
    \"            <ruleml:Ind>2 years</ruleml:Ind>\n\",
    \"\n\",
    \"          </ruleml:Atom>\n\",
    \"\n\",
    \"        </lrml:Obligation>\n\",
    \"\n\",
    \"      </lrml:SuborderList>\n\",
    \"\n\",
    \"    </lrml:PenaltyStatement>\n\",
    \"\n\",
    \" \n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep1\\">\n\",
    \"\n\",
    \"      <lrml:Reparation key=\\"assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen1\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"    <lrml:ReparationStatement key=\\"rep2\\">\n\",
    \"\n\",
    \"      <lrml:Reparation keyref=\\"#assoc1\\">\n\",
    \"\n\",
    \"        <lrml:appliesPenalty keyref=\\"#pen2\\"/>\n\",
    \"\n\",
    \"        <lrml:toPrescriptiveStatement keyref=\\"#ps1\\"/>\n\",
    \"\n\",
    \"      </lrml:Reparation>\n\",
    \"\n\",
    \"    </lrml:ReparationStatement>\n\",
    \"\n\",
    \"</lrml:Statements>\n\",
    \"\\"\\"\\"\n\",
    \"        },\n\",
    \"        {\n\",
    \"          \\"role\\": \\"user\\",\n\",
    \"          \\"content\\": f\\"\\"\\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\\"\\"\\"\n\",
    \"        }\n\",
    \"      ],\n\",
    \"      \\"temperature\\": 0.25,\n\",
    \"      \\"max_tokens\\": 1500\n\",
    \"    }\n\",
    \"\n\",
    \"    \n\",
    \"    body = str.encode(json.dumps(data))\n\",
    \"    \n\",
    \"    \n\",
    \"    url = 'https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions'\n\",
    \"    # Replace this with the primary/secondary key or AMLToken for the endpoint\n\",
    \"    api_key = '4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj'\n\",
    \"    if not api_key:\n\",
    \"        raise Exception(\\"A key should be provided to invoke the endpoint\\")\n\",
    \"    \n\",
    \"    \n\",
    \"    headers = {'Content-Type':'application/json', 'Authorization':('Bearer '+ api_key)}\n\",
    \"    \n\",
    \"    req = urllib.request.Request(url, body, headers)\n\",
    \"    \n\",
    \"    try:\n\",
    \"        response = urllib.request.urlopen(req)\n\",
    \"    \n\",
    \"        result = response.read()\n\",
    \"        #print(result)\n\",
    \"\n\",
    \"        return result\n\",
    \"        \n\",
    \"    except urllib.error.HTTPError as error:\n\",
    \"        print(\\"The request failed with status code: \\" + str(error.code))\n\",
    \"\n\",
    \"        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure\n\",
    \"        print(error.info())\n\",
    \"        print(error.read().decode(\\"utf8\\", 'ignore'))\n\",
    \"\n\",
    \"\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 39,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"import pandas as pd\n\",
    \"\n\",
    \"def csv_parser():\n\",
    \"\n\",
    \"    csv_filename = 'fullsections.csv' # file containing all the sections from the E-Waste Rules, generated via IK_interface function\n\",
    \"\n\",
    \"    df_condition = \\"1\\"\n\",
    \"    # Read the CSV file into a Pandas DataFrame\n\",
    \"    df = pd.read_csv(csv_filename)\n\",
    \"\n\",
    \"    if df_condition == \\"1\\":\n\",
    \"        df2 = df.iloc[51:55]\n\",
    \"    else:\n\",
    \"        df2=df.copy()\n\",
    \"\n\",
    \"    return df2\n\",
    \"\n\",
    \"    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 40,
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"                               Section Title  \\\n\",
      \"51  4. Responsibilities of the manufacturer.   \n\",
      \"52  4. Responsibilities of the manufacturer.   \n\",
      \"53  4. Responsibilities of the manufacturer.   \n\",
      \"54  4. Responsibilities of the manufacturer.   \n\",
      \"\n\",
      \"                                       Nested Content  \n\",
      \"51  apply for an authorisation in Form 1 (a) in ac...  \n\",
      \"52  ensure that no damage is caused to the environ...  \n\",
      \"53  maintain records of the e-waste generated, han...  \n\",
      \"54  file annual returns in Form-3, to the concerne...  \n\"
     ]
    }
   ],
   \"source\": [
    \"print(csv_parser())\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 42,
   \"metadata\": {},
   \"outputs\": [
    {
     \"ename\": \"ImportError\",
     \"evalue\": \"Could not import langchainhub, please install with `pip install langchainhub`.\",
     \"output_type\": \"error\",
     \"traceback\": [
      \"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\",
      \"\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\",
      \"File \u001b[0;32m~/Complianalyse/Schematise/lib/python3.10/site-packages/langchain/hub.py:15\u001b[0m, in \u001b[0;36m_get_client\u001b[0;34m(api_url, api_key)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m---> 15\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mlangchainhub\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Client\n\u001b[1;32m     16\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mImportError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\",
      \"\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'langchainhub'\",
      \"\nThe above exception was the direct cause of the following exception:\n\",
      \"\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)\",
      \"Cell \u001b[0;32mIn[42], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mlangchain\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m hub\n\u001b[0;32m----> 3\u001b[0m prompt \u001b[38;5;241m=\u001b[39m \u001b[43mhub\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpull\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[38;5;124;43mrlm/rag-prompt\u001b[39;49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      5\u001b[0m example_messages \u001b[38;5;241m=\u001b[39m prompt\u001b[38;5;241m.\u001b[39minvoke(\n\u001b[1;32m      6\u001b[0m     {\u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mcontext\u001b[39m\u001b[38;5;124m\\"\u001b[39m: \u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mfiller context\u001b[39m\u001b[38;5;124m\\"\u001b[39m, \u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mquestion\u001b[39m\u001b[38;5;124m\\"\u001b[39m: \u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mfiller question\u001b[39m\u001b[38;5;124m\\"\u001b[39m}\n\u001b[1;32m      7\u001b[0m )\u001b[38;5;241m.\u001b[39mto_messages()\n\u001b[1;32m      8\u001b[0m example_messages\n\",
      \"File \u001b[0;32m~/Complianalyse/Schematise/lib/python3.10/site-packages/langchain/hub.py:79\u001b[0m, in \u001b[0;36mpull\u001b[0;34m(owner_repo_commit, api_url, api_key)\u001b[0m\n\u001b[1;32m     64\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mpull\u001b[39m(\n\u001b[1;32m     65\u001b[0m     owner_repo_commit: \u001b[38;5;28mstr\u001b[39m,\n\u001b[1;32m     66\u001b[0m     \u001b[38;5;241m*\u001b[39m,\n\u001b[1;32m     67\u001b[0m     api_url: Optional[\u001b[38;5;28mstr\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     68\u001b[0m     api_key: Optional[\u001b[38;5;28mstr\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     69\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Any:\n\u001b[1;32m     70\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\\"\\"\\"\u001b[39;00m\n\u001b[1;32m     71\u001b[0m \u001b[38;5;124;03m    Pulls an object from the hub and returns it as a LangChain object.\u001b[39;00m\n\u001b[1;32m     72\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     77\u001b[0m \u001b[38;5;124;03m    :param api_key: The API key to use to authenticate with the LangChain Hub API.\u001b[39;00m\n\u001b[1;32m     78\u001b[0m \u001b[38;5;124;03m    \\"\\"\\"\u001b[39;00m\n\u001b[0;32m---> 79\u001b[0m     client \u001b[38;5;241m=\u001b[39m \u001b[43m_get_client\u001b[49m\u001b[43m(\u001b[49m\u001b[43mapi_url\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mapi_url\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mapi_key\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mapi_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     80\u001b[0m     resp: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m client\u001b[38;5;241m.\u001b[39mpull(owner_repo_commit)\n\u001b[1;32m     81\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m loads(resp)\n\",
      \"File \u001b[0;32m~/Complianalyse/Schematise/lib/python3.10/site-packages/langchain/hub.py:17\u001b[0m, in \u001b[0;36m_get_client\u001b[0;34m(api_url, api_key)\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mlangchainhub\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Client\n\u001b[1;32m     16\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mImportError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m---> 17\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mImportError\u001b[39;00m(\n\u001b[1;32m     18\u001b[0m         \u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mCould not import langchainhub, please install with `pip install \u001b[39m\u001b[38;5;124m\\"\u001b[39m\n\u001b[1;32m     19\u001b[0m         \u001b[38;5;124m\\"\u001b[39m\u001b[38;5;124mlangchainhub`.\u001b[39m\u001b[38;5;124m\\"\u001b[39m\n\u001b[1;32m     20\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01me\u001b[39;00m\n\u001b[1;32m     22\u001b[0m \u001b[38;5;66;03m# Client logic will also attempt to load URL/key from environment variables\u001b[39;00m\n\u001b[1;32m     23\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m Client(api_url, api_key\u001b[38;5;241m=\u001b[39mapi_key)\n\",
      \"\u001b[0;31mImportError\u001b[0m: Could not import langchainhub, please install with `pip install langchainhub`.\"
     ]
    }
   ],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 41,
   \"metadata\": {
    \"id\": \"Zs6yo1UWDRKi\"
   },
   \"outputs\": [],
   \"source\": [
    \"\n\",
    \"# Now, 'df' contains the data from the CSV file\n\",
    \"    # You can perform various operations on the DataFrame\n\",
    \"section_for_conversion = ''\n\",
    \"\n\",
    \"combined_response = ''\n\",
    \"\n\",
    \"df2 = csv_parser()\n\",
    \"# Iterate through rows and process the data\n\",
    \"for index, row in df2.iterrows():\n\",
    \"    section_title = row['Section Title']\n\",
    \"    nested_content = row['Nested Content']\n\",
    \"\n\",
    \"    # Process section_title and nested_content as needed\n\",
    \"    #print(f\\"Section Title: {section_title}\\")\n\",
    \"    #print(f\\"Nested Content: {nested_content}\\n\\")\n\",
    \"    section_for_conversion = f\\"{section_title}: {nested_content}\\n\\"\n\",
    \"\n\",
    \"    result=send_request(section_for_conversion)\n\",
    \"    \n\",
    \"    result_json = json.loads(result.decode('utf-8'))\n\",
    \"    \n\",
    \"    # Extract the value inside the \\"text\\" key\n\",
    \"    text_value = result_json['choices'][0]['message']['content']\n\",
    \"\n\",
    \"    combined_response += text_value\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  }
 ],
 \"metadata\": {
  \"colab\": {
   \"provenance\": []
  },
  \"kernelspec\": {
   \"display_name\": \"Python 3 (ipykernel)\",
   \"language\": \"python\",
   \"name\": \"python3\"
  },
  \"language_info\": {
   \"codemirror_mode\": {
    \"name\": \"ipython\",
    \"version\": 3
   },
   \"file_extension\": \".py\",
   \"mimetype\": \"text/x-python\",
   \"name\": \"python\",
   \"nbconvert_exporter\": \"python\",
   \"pygments_lexer\": \"ipython3\",
   \"version\": \"3.10.12\"
  }
 },
 \"nbformat\": 4,
 \"nbformat_minor\": 4
}"},
{"main.py": "import sys
import os
import pandas as pd
import utils
import seconddraftCombinedProcess

def main(XML_arg):
    directory = \"./_cache\"

    # Create the directory if it doesn't exist
    if not os.path.exists(directory):
        os.makedirs(directory)
    df2 = utils.csv_parser()
    XML_responses = seconddraftCombinedProcess.responseGetter(df2, XML_arg)

    with open(\"FinalXML.txt\", \"w\") as filename:
        filename.write(XML_responses)


if __name__ == \"__main__\":
    XML_arg = sys.argv[0]
    print(\"XML_arg: \", XML_arg)
    main(XML_arg)"},
{"metamodelAndRAG.py": "import langchain
from langchain_core.retrievers import BaseRetriever
from langchain_core.callbacks import CallbackManagerForRetrieverRun
from langchain_core.documents import Document
from typing import List
import model
global_metamodels_to_process = [1, 2, 3, 4, 5, 6, 7]

metamodel_filename_dict = {
    \"1\": \"context\",
    \"2\": \"defeasible\",
    \"3\": \"deontic\",
    \"4\": \"legaltemporal\",
    \"5\": \"metadata-actor\",
    \"6\": \"metadata-jurisdiction-authority\",
    \"7\": \"statement\"
}

'''
class CustomRetriever(BaseRetriever):
    def __init__(self, metamodel_XML, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.metamodel_XML = metamodel_XML

    def _get_relevant_documents(
            self, query: str = None, *, run_manager: CallbackManagerForRetrieverRun
    ) -> List[Document]:
        if query is None:
            query = self.metamodel_XML

        page_content = query
        return [Document(page_content=page_content)]
'''


class CustomRetriever(BaseRetriever):
    with open (\"\")
    def _get_relevant_documents(
            self, query: str, *, run_manager: CallbackManagerForRetrieverRun
    ) -> List[Document]:



    return [Document(page_content=page_content)]
def getRAG_metamodels(text_value, metamodel_number):
    metamodel_definitionfilename = str(\"Docs/\" + metamodel_filename_dict[metamodel_number] + \".txt\")
    metamodel_XMLfilename = str(\"Docs/\" + metamodel_filename_dict[metamodel_number] + \".rdf\")
    with open(metamodel_definitionfilename, 'r') as metamodel_definition_file:
        metamodel_definition = metamodel_definition_file.read()
    with open(metamodel_XMLfilename, 'r') as metamodel_XML_file:
        metamodel_XML = metamodel_XML_file.read()
    #retrieverObj = CustomRetriever(metamodel_XML)
    metamodel_text_value = model.RAGPrompt(metamodel_XML, text_value, metamodel_definition)

    return metamodel_text_value
def similarity_tweaking(text_value, metamodels_to_process=global_metamodels_to_process):
    for metamodel_number in metamodels_to_process:
        metamodel_number = metamodel_number.strip()
        if metamodel_number != '':
            metamodel_text_value = getRAG_metamodels(text_value, metamodel_number)
            text_value = metamodel_text_value

    new_text_value = text_value


    return new_text_value



if __name__ == \"__main__\":
    text_value = \"Test\"
    metamodels_to_process = [\"1\", \"\n\"]"},
{"Metamodel-RAG.ipynb": "{
 \"cells\": [
  {
   \"cell_type\": \"markdown\",
   \"id\": \"f3522614-0b04-4e7b-a502-79c21dbf0124\",
   \"metadata\": {},
   \"source\": [
    \"## Introduction\n\",
    \"\n\",
    \"So far, it has been observed that prompt engineering using few shot examples from the LegalRuleML core specification (v1.0) can generate an XML that is satisfactory at least as a starting point. However, one of the problems faced in this process is that of non-observance of some of the rules of the schema. Using the metamodel provided by the LegalRuleML provides a hint as to what an ideal representation should be.\n\",
    \"\n\",
    \"## Table of Contents\n\",
    \"[Approach 1](#Approach-1) - Using a Basic RAG approach on the MetaModel\n\",
    \"\n\",
    \"[Approach 2](#Approach-2) - Adapting the prompt with an explanation on the metamodel topic.\n\",
    \"\n\",
    \"## Results/Conclusion\n\",
    \"It is observed that providing the model a bigger token size, as well as information about the metamodel gives a better output. This means incorporating the instances of code which have XML similarity (automated selection) as well as user-specified tweaking will be the ideal integration. \"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"f4ef8dcb-ddd0-4893-8075-fc05a59c2c12\",
   \"metadata\": {},
   \"source\": [
    \"# Setup\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 4,
   \"id\": \"f4bfd9cf-e732-4cc8-9171-3469d39e23d0\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"from langchain.schema import HumanMessage\n\",
    \"from langchain_community.llms.azureml_endpoint import AzureMLEndpointApiType\n\",
    \"from langchain_community.chat_models.azureml_endpoint import AzureMLChatOnlineEndpoint\n\",
    \"from langchain_community.chat_models.azureml_endpoint import LlamaChatContentFormatter\n\",
    \"\n\",
    \"from langchain.chains import LLMChain\n\",
    \"from langchain.prompts import ChatPromptTemplate\n\",
    \"from langchain.prompts.few_shot import FewShotChatMessagePromptTemplate\n\",
    \"from langchain.prompts.prompt import PromptTemplate\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 6,
   \"id\": \"5e2326d5-9824-4123-bfe2-69a13b98d5ba\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"BaseMessage(content='The Collatz Conjecture is a longstanding open problem in mathematics, and it is difficult to predict with certainty whether it will be solved in the future. However, the conjecture has been extensively studied and many attempts have been made to prove it, but so far, no one has been able to find a rigorous proof.\\n\\nThe Collatz Conjecture is a simple-sounding problem: given a positive integer, repeatedly apply the simple transformation: if the number is even, divide it by 2, and if it is odd, multiply it by 3 and add 1. The conjecture states that no matter what positive integer you start with, this process will always converge to the number 1.\\n\\nDespite the simplicity of the conjecture, it has proven to be extraordinarily difficult to prove or disprove. Many mathematicians have attempted to solve it, but so far, no one has been able to find a rigorous proof or counterexample. In fact, the Collatz Conjecture is one of the most famous unsolved problems in mathematics, and it has been called the \\"most interesting unsolved problem in number theory.\\"\\n\\nThere are several reasons why the Collatz Conjecture is so difficult to solve:\\n\\n1. Complexity of the problem: The Collatz Conjecture is a very simple-sounding problem, but it is actually incredibly complex. The number of possible starting values is infinite, and the number of possible sequences of steps is also infinite. This makes it difficult to keep track of all the possible outcomes and to prove that the conjecture is true for all of them.\\n2. Lack of a general proof: Despite much effort, no one has been able to find a general proof of the Collatz Conjecture. Many special cases have been proven, but a general proof has yet to be found.\\n3. Computational difficulties: Computing the outcome of the Collatz sequence for very large starting values is difficult, even with modern computational power. This makes it difficult to verify the conjecture for all possible starting values.\\n4. Deep mathematical questions: The Collatz Conjecture is closely related to many deep mathematical questions, such as the distribution of prime numbers, the properties of the golden ratio, and the structure of the integers. These questions are still not fully understood, and understanding them could help solve the Collatz Conjecture.\\n\\nIn summary, while it is difficult to predict whether the Collatz Conjecture will be solved in the future, it is clear that it is a fundamental and important problem in mathematics that has many deep connections to other areas of mathematics. Despite much effort, no one has been able to find a rigorous proof or counterexample, and the conjecture remains one of the most famous unsolved problems in mathematics.', type='assistant')\"
      ]
     },
     \"execution_count\": 6,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"llm = AzureMLChatOnlineEndpoint(\n\",
    \"    endpoint_url=\\"\\",\n\",
    \"    endpoint_api_type=AzureMLEndpointApiType.serverless,\n\",
    \"    endpoint_api_key=\\"\\",\n\",
    \"    content_formatter=LlamaChatContentFormatter(),\n\",
    \"    model_kwargs={\\"temperature\\": 0.4, \\"max_tokens\\": 1000}\n\",
    \")\n\",
    \"response = llm.invoke(\n\",
    \"    [HumanMessage(content=\\"Will the Collatz conjecture ever be solved?\\")]\n\",
    \")\n\",
    \"response\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 26,
   \"id\": \"c0425d2d-426e-482d-babb-b4ab4334a11b\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"[Document(page_content='\\n\\n        <rdf:RDF xml:base=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/metamodel\\">\\n<!--\\n<owl:Ontology rdf:about=\\"&lrmlmm;/modules/defeasible.rdfs\\" dc:title=\\"The LegalRuleML MetaModel Defeasible Rules vocabulary\\"/>\\n-->\\n<rdfs:Class rdf:about=\\"#DefeasibleStrength\\">\\n<rdfs:label>defeasible strength</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the conclusion of the Legal Rule holds.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Defeater\\">\\n<rdfs:label>defeater</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the opposite of the conclusion of the Legal Rule does not hold.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Override\\">\\n<rdfs:label>override</rdfs:label>\\n<rdfs:comment>\\nan indication that a Legal Rule takes precedence over another Legal Rule. The ordered pair of Legal Rules is an instance in a defeasible priority relation.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\"/>\\n</rdfs:Class>\\n<!-- Import from RuleML for diagramming purposes -->\\n<rdfs:Class rdf:about=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\">\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Strength\\">\\n<rdfs:label>strength</rdfs:label>\\n<rdfs:comment>\\nthe quality of a Legal Rule to resist or not to resist a rebuttal.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Associable\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#StrictStrength\\">\\n<rdfs:label>strict strength</rdfs:label>\\n<rdfs:comment>\\nan indication that where the antecedent of a Legal Rule is indisputable, the conclusion of the Legal Rule is indisputable.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdf:Property rdf:about=\\"#appliesStrength\\">\\n<rdfs:label>applies strength</rdfs:label>\\n<rdfs:comment>a Strength applied by the Context or Association.</rdfs:comment>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n<rdfs:subPropertyOf rdf:resource=\\"#applies\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasQualification\\">\\n<rdfs:label>has qualifications</rdfs:label>\\n<rdfs:comment>\\na qualification (e.g. an Override) of the Statements.\\n</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statements\\"/>\\n<rdfs:range rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasStrength\\">\\n<rdfs:label>hasStrength</rdfs:label>\\n<rdfs:comment>the Strength of the Legal Rule.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statement\\"/>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#over\\">\\n<rdfs:label>over</rdfs:label>\\n<rdfs:comment>the Legal Rule with higher priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#under\\">\\n<rdfs:label>under</rdfs:label>\\n<rdfs:comment>the Legal Rule with lower priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<!--\\nDuplicate from context.rdfs for diagramming purposes \\n-->\\n<rdf:Property rdf:about=\\"#applies\\">\\n<rdfs:domain rdf:resource=\\"#Associator\\"/>\\n<rdfs:range rdf:resource=\\"#Associable\\"/>\\n</rdf:Property>\\n</rdf:RDF>\\n')]\n\"
     ]
    }
   ],
   \"source\": [
    \"from langchain_core.retrievers import BaseRetriever\n\",
    \"from langchain_core.callbacks import CallbackManagerForRetrieverRun\n\",
    \"from langchain_core.documents import Document\n\",
    \"from typing import List\n\",
    \"\n\",
    \"\n\",
    \"class CustomRetriever(BaseRetriever):\n\",
    \"    \n\",
    \"    def _get_relevant_documents(\n\",
    \"        self, query: str, *, run_manager: CallbackManagerForRetrieverRun\n\",
    \"    ) -> List[Document]:\n\",
    \"        page_content = \\"\\"\\"\n\",
    \"\n\",
    \"        <rdf:RDF xml:base=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/metamodel\\">\n\",
    \"<!--\n\",
    \"<owl:Ontology rdf:about=\\"&lrmlmm;/modules/defeasible.rdfs\\" dc:title=\\"The LegalRuleML MetaModel Defeasible Rules vocabulary\\"/>\n\",
    \"-->\n\",
    \"<rdfs:Class rdf:about=\\"#DefeasibleStrength\\">\n\",
    \"<rdfs:label>defeasible strength</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"an indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the conclusion of the Legal Rule holds.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<rdfs:Class rdf:about=\\"#Defeater\\">\n\",
    \"<rdfs:label>defeater</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"an indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the opposite of the conclusion of the Legal Rule does not hold.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<rdfs:Class rdf:about=\\"#Override\\">\n\",
    \"<rdfs:label>override</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"an indication that a Legal Rule takes precedence over another Legal Rule. The ordered pair of Legal Rules is an instance in a defeasible priority relation.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<!-- Import from RuleML for diagramming purposes -->\n\",
    \"<rdfs:Class rdf:about=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\">\n\",
    \"<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<rdfs:Class rdf:about=\\"#Strength\\">\n\",
    \"<rdfs:label>strength</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"the quality of a Legal Rule to resist or not to resist a rebuttal.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:subClassOf rdf:resource=\\"#Associable\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<rdfs:Class rdf:about=\\"#StrictStrength\\">\n\",
    \"<rdfs:label>strict strength</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"an indication that where the antecedent of a Legal Rule is indisputable, the conclusion of the Legal Rule is indisputable.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\n\",
    \"</rdfs:Class>\n\",
    \"<rdf:Property rdf:about=\\"#appliesStrength\\">\n\",
    \"<rdfs:label>applies strength</rdfs:label>\n\",
    \"<rdfs:comment>a Strength applied by the Context or Association.</rdfs:comment>\n\",
    \"<rdfs:range rdf:resource=\\"#Strength\\"/>\n\",
    \"<rdfs:subPropertyOf rdf:resource=\\"#applies\\"/>\n\",
    \"</rdf:Property>\n\",
    \"<rdf:Property rdf:about=\\"#hasQualification\\">\n\",
    \"<rdfs:label>has qualifications</rdfs:label>\n\",
    \"<rdfs:comment>\n\",
    \"a qualification (e.g. an Override) of the Statements.\n\",
    \"</rdfs:comment>\n\",
    \"<rdfs:domain rdf:resource=\\"#Statements\\"/>\n\",
    \"<rdfs:range rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\n\",
    \"</rdf:Property>\n\",
    \"<rdf:Property rdf:about=\\"#hasStrength\\">\n\",
    \"<rdfs:label>hasStrength</rdfs:label>\n\",
    \"<rdfs:comment>the Strength of the Legal Rule.</rdfs:comment>\n\",
    \"<rdfs:domain rdf:resource=\\"#Statement\\"/>\n\",
    \"<rdfs:range rdf:resource=\\"#Strength\\"/>\n\",
    \"</rdf:Property>\n\",
    \"<rdf:Property rdf:about=\\"#over\\">\n\",
    \"<rdfs:label>over</rdfs:label>\n\",
    \"<rdfs:comment>the Legal Rule with higher priority.</rdfs:comment>\n\",
    \"<rdfs:domain rdf:resource=\\"#Override\\"/>\n\",
    \"<rdfs:range rdf:resource=\\"#Statement\\"/>\n\",
    \"</rdf:Property>\n\",
    \"<rdf:Property rdf:about=\\"#under\\">\n\",
    \"<rdfs:label>under</rdfs:label>\n\",
    \"<rdfs:comment>the Legal Rule with lower priority.</rdfs:comment>\n\",
    \"<rdfs:domain rdf:resource=\\"#Override\\"/>\n\",
    \"<rdfs:range rdf:resource=\\"#Statement\\"/>\n\",
    \"</rdf:Property>\n\",
    \"<!--\n\",
    \"Duplicate from context.rdfs for diagramming purposes \n\",
    \"-->\n\",
    \"<rdf:Property rdf:about=\\"#applies\\">\n\",
    \"<rdfs:domain rdf:resource=\\"#Associator\\"/>\n\",
    \"<rdfs:range rdf:resource=\\"#Associable\\"/>\n\",
    \"</rdf:Property>\n\",
    \"</rdf:RDF>\n\",
    \"\\"\\"\\"\n\",
    \"        \n\",
    \"        return [Document(page_content=page_content)]\n\",
    \"\n\",
    \"retrieverObj = CustomRetriever()\n\",
    \"\n\",
    \"retriever = retrieverObj.get_relevant_documents(\\"query\\")\n\",
    \"\n\",
    \"print(retriever)\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 15,
   \"id\": \"1051a7cc-1ff8-40c8-a1a3-3f40fc14900c\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"question = \\"\\"\\"Align this code with the metamodel provided to you in rsfd format\n\",
    \"<lrml:LegalSources>\n\",
    \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"  <lrml:appliesAssociations>\n\",
    \"    <lrml:Associations>\n\",
    \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
    \"    </lrml:Associations>\n\",
    \"  </lrml:appliesAssociations>\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"  <lrml:hasQualification>\n\",
    \"    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\n\",
    \"  </lrml:hasQualification>\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\n\",
    \"      <lrml:if>\n\",
    \"        <lrml:Atom>\n\",
    \"          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\n\",
    \"          <lrml:Var>X</lrml:Var>\n\",
    \"        </lrml:Atom>\n\",
    \"      </lrml:if>\n\",
    \"      <lrml:then>\n\",
    \"        <lrml:Obligation>\n\",
    \"          <ruleml:Atom>\n\",
    \"            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\n\",
    \"            <lrml:Var>X</lrml:Var>\n\",
    \"          </ruleml:Atom>\n\",
    \"        </lrml:Obligation>\n\",
    \"      </lrml:then>\n\",
    \"    </ruleml:Rule>\n\",
    \"  </lrml:PrescriptiveStatement>\n\",
    \"</lrml:Statements>\n\",
    \"\\"\\"\\"\n\",
    \"\n\",
    \"context = \\"\\"\n\",
    \"\n\",
    \"prompt_content = f\\"\\"\\"You are an assistant for question-answering tasks. Use the following pieces of retrieved context to answer the question. If you don't know the answer, just say that you don't know. Use three sentences maximum and keep the answer concise.\n\",
    \"Question: {question}\n\",
    \"Context: {context}\n\",
    \"Answer:\\"\\"\\"\n\",
    \"\n\",
    \"# Note: Replace {context_placeholder} with the actual context from the RAG pipeline when executing the prompt.\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 18,
   \"id\": \"c4991fe1-e7ae-477f-bf25-8b10de866624\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"ename\": \"TypeError\",
     \"evalue\": \"unsupported operand type(s) for |: 'dict' and 'str'\",
     \"output_type\": \"error\",
     \"traceback\": [
      \"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\",
      \"\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)\",
      \"Cell \u001b[0;32mIn[18], line 10\u001b[0m\n\u001b[1;32m      5\u001b[0m retriever \u001b[38;5;241m=\u001b[39m CustomRetriever()\n\u001b[1;32m      7\u001b[0m prompt_content \n\u001b[1;32m      9\u001b[0m rag_chain \u001b[38;5;241m=\u001b[39m (\n\u001b[0;32m---> 10\u001b[0m     \u001b[43m{\u001b[49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[38;5;124;43mcontext\u001b[39;49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mcontext\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[38;5;124;43mquestion\u001b[39;49m\u001b[38;5;124;43m\\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mRunnablePassthrough\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m}\u001b[49m\u001b[43m \u001b[49m\n\u001b[1;32m     11\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;241;43m|\u001b[39;49m\u001b[43m \u001b[49m\u001b[43mprompt_content\u001b[49m\n\u001b[1;32m     12\u001b[0m     \u001b[38;5;241m|\u001b[39m llm\n\u001b[1;32m     13\u001b[0m     \u001b[38;5;241m|\u001b[39m StrOutputParser()\n\u001b[1;32m     14\u001b[0m )\n\",
      \"\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for |: 'dict' and 'str'\"
     ]
    }
   ],
   \"source\": [
    \"from langchain_core.output_parsers import StrOutputParser\n\",
    \"from langchain_core.runnables import RunnablePassthrough\n\",
    \"\n\",
    \"\n\",
    \"# Assuming retriever is an object of CustomRetriever class\n\",
    \"retriever = CustomRetriever()\n\",
    \"\n\",
    \"prompt_content\n\",
    \"\n\",
    \"rag_chain = (\n\",
    \"    {\\"context\\": retriever, \\"question\\": RunnablePassthrough()}\n\",
    \"    | prompt_content\n\",
    \"    | llm\n\",
    \"    | StrOutputParser()\n\",
    \")\n\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"53816db6-bd32-4a26-8538-a9eaaaa6a827\",
   \"metadata\": {},
   \"source\": [
    \"## Approach-1\n\",
    \"Using a Basic RAG approach on the MetaModel\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 29,
   \"id\": \"d8787053-7545-4ef0-9e78-50fc2e1ff6dd\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"from langchain.chains import LLMChain\n\",
    \"from langchain.prompts import PromptTemplate\n\",
    \"from langchain_core.prompts import ChatPromptTemplate\n\",
    \"from langchain_core.runnables import RunnablePassthrough\n\",
    \"\n\",
    \"prompt_template= \\"\\"\\"\n\",
    \"### [INST] \n\",
    \"You are an assistant for making the XML generated in accordance with the rdfs metamodel provided to you below as context. \n\",
    \"Use the following context to ensure that the XML generated is in terms of the metamodel specification.\n\",
    \"\n\",
    \"\n\",
    \"\n\",
    \"{context}\n\",
    \"\n\",
    \"### QUESTION:\n\",
    \"{question} \n\",
    \"\n\",
    \"[/INST]\n\",
    \"\\"\\"\\"\n\",
    \" \n\",
    \"# Abstraction of Prompt\n\",
    \"prompt = ChatPromptTemplate.from_template(prompt_template)\n\",
    \"output_parser = StrOutputParser()\n\",
    \"\n\",
    \"# Creating an LLM Chain \n\",
    \"llm_chain = LLMChain(llm=llm, prompt=prompt)\n\",
    \"\n\",
    \"# RAG Chain\n\",
    \"rag_chain = ( \n\",
    \" {\\"context\\": retrieverObj, \\"question\\": RunnablePassthrough()}\n\",
    \"    | llm_chain\n\",
    \")\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 30,
   \"id\": \"c2063a23-fb90-454d-a40b-234e547fed14\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'context': [Document(page_content='\\n\\n        <rdf:RDF xml:base=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/metamodel\\">\\n<!--\\n<owl:Ontology rdf:about=\\"&lrmlmm;/modules/defeasible.rdfs\\" dc:title=\\"The LegalRuleML MetaModel Defeasible Rules vocabulary\\"/>\\n-->\\n<rdfs:Class rdf:about=\\"#DefeasibleStrength\\">\\n<rdfs:label>defeasible strength</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the conclusion of the Legal Rule holds.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Defeater\\">\\n<rdfs:label>defeater</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the opposite of the conclusion of the Legal Rule does not hold.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Override\\">\\n<rdfs:label>override</rdfs:label>\\n<rdfs:comment>\\nan indication that a Legal Rule takes precedence over another Legal Rule. The ordered pair of Legal Rules is an instance in a defeasible priority relation.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\"/>\\n</rdfs:Class>\\n<!-- Import from RuleML for diagramming purposes -->\\n<rdfs:Class rdf:about=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\">\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Strength\\">\\n<rdfs:label>strength</rdfs:label>\\n<rdfs:comment>\\nthe quality of a Legal Rule to resist or not to resist a rebuttal.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Associable\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#StrictStrength\\">\\n<rdfs:label>strict strength</rdfs:label>\\n<rdfs:comment>\\nan indication that where the antecedent of a Legal Rule is indisputable, the conclusion of the Legal Rule is indisputable.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdf:Property rdf:about=\\"#appliesStrength\\">\\n<rdfs:label>applies strength</rdfs:label>\\n<rdfs:comment>a Strength applied by the Context or Association.</rdfs:comment>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n<rdfs:subPropertyOf rdf:resource=\\"#applies\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasQualification\\">\\n<rdfs:label>has qualifications</rdfs:label>\\n<rdfs:comment>\\na qualification (e.g. an Override) of the Statements.\\n</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statements\\"/>\\n<rdfs:range rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasStrength\\">\\n<rdfs:label>hasStrength</rdfs:label>\\n<rdfs:comment>the Strength of the Legal Rule.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statement\\"/>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#over\\">\\n<rdfs:label>over</rdfs:label>\\n<rdfs:comment>the Legal Rule with higher priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#under\\">\\n<rdfs:label>under</rdfs:label>\\n<rdfs:comment>the Legal Rule with lower priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<!--\\nDuplicate from context.rdfs for diagramming purposes \\n-->\\n<rdf:Property rdf:about=\\"#applies\\">\\n<rdfs:domain rdf:resource=\\"#Associator\\"/>\\n<rdfs:range rdf:resource=\\"#Associable\\"/>\\n</rdf:Property>\\n</rdf:RDF>\\n')],\n\",
       \" 'question': '\\n<lrml:LegalSources>\\n  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\\n</lrml:LegalSources>\\n\\n<lrml:Context key=\\"psInfo1\\">\\n  <lrml:appliesAssociations>\\n    <lrml:Associations>\\n      <lrml:Association keyref=\\"#ls1\\"/>\\n    </lrml:Associations>\\n  </lrml:appliesAssociations>\\n</lrml:Context>\\n\\n<lrml:Statements key=\\"textblock1\\">\\n  <lrml:hasQualification>\\n    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\\n  </lrml:hasQualification>\\n  <lrml:PrescriptiveStatement key=\\"ps1\\">\\n    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\\n      <lrml:if>\\n        <lrml:Atom>\\n          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\\n          <lrml:Var>X</lrml:Var>\\n        </lrml:Atom>\\n      </lrml:if>\\n      <lrml:then>\\n        <lrml:Obligation>\\n          <ruleml:Atom>\\n            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\\n            <lrml:Var>X</lrml:Var>\\n          </ruleml:Atom>\\n        </lrml:Obligation>\\n      </lrml:then>\\n    </ruleml:Rule>\\n  </lrml:PrescriptiveStatement>\\n</lrml:Statements>',\n\",
       \" 'text': 'The provided XML document appears to be a Legal Rule Markup Language (LRML) document that defines a legal rule and its associated statements. Here\\'s a breakdown of the document:\\n\\n1. `rdf:RDF`: This is the root element of the RDF document.\\n2. `xml:base`: This attribute specifies the base URL of the XML document, which is used to resolve relative URIs.\\n3. `lrml:LegalSources`: This element contains a list of legal sources, which are used to define the context of the legal rule.\\n4. `lrml:Context`: This element defines the context of the legal rule, including the legal sources and the statements associated with it.\\n5. `lrml:Statements`: This element contains a list of statements associated with the legal rule.\\n6. `lrml:PrescriptiveStatement`: This element defines a prescriptive statement, which is a statement that defines an obligation or prohibition.\\n7. `lrml:If`: This element defines an if statement, which specifies a condition that must be met for the statement to be applicable.\\n8. `lrml:Then`: This element defines a then statement, which specifies the action that must be taken if the condition in the if statement is met.\\n9. `ruleml:Atom`: This element defines an atom, which is a statement that represents a fact or a rule.\\n10. `lrml:Rel`: This element defines a relation, which is used to connect two or more atoms.\\n11. `lrml:Var`: This element defines a variable, which is used to represent a value that can be used in a statement.\\n12. `lrml:Obligation`: This element defines an obligation, which is a statement that defines an action that must be taken.\\n\\nBased on the provided XML document, it appears that the following RDF classes and properties are defined:\\n\\n* `DefeasibleStrength`: This class represents the concept of defeasible strength, which is a quality of a legal rule that indicates its ability to resist or not resist a rebuttal.\\n* `Override`: This class represents the concept of override, which is a relationship between two legal rules where one rule takes precedence over the other.\\n* `Strength`: This class represents the concept of strength, which is a quality of a legal rule that indicates its ability to resist a rebuttal.\\n* `Associable`: This class represents the concept of associability, which is a relationship between two legal rules where one rule can be applied by the other.\\n* `StrictStrength`: This class represents the concept of strict strength, which is a quality of a legal rule that indicates its ability to resist a rebuttal in the absence of information to the contrary.\\n* `appliesStrength`: This property represents the concept of applies strength, which is a relationship between a legal rule and a strength.\\n* `hasQualification`: This property represents the concept of has qualification, which is a relationship between a legal rule and a qualification (e.g. an override).\\n* `hasStrength`: This property represents the concept of has strength, which is a relationship between a legal rule and a strength.\\n* `over`: This property represents the concept of over, which is a relationship between two legal rules where one rule takes precedence over the other.\\n* `under`: This property represents the concept of under, which is a relationship between two legal rules where one rule takes precedence over the other.\\n\\nBased on the provided XML document, it appears that the following RDF statements are defined:\\n\\n* A statement that defines a legal rule with key \\"rule5\\" and a description of \\"The LegalRuleML MetaModel Defeasible Rules vocabulary\\".\\n* A statement that defines an association between the legal rule with key \\"rule5\\" and a legal source with key \\"http://www.example.com/rules/rule5\\".\\n* A statement that defines a context with key \\"psInfo1\\" and applies an association to the legal rule with key \\"rule5\\".\\n* A statement that defines a prescriptive statement with key \\"ps1\\" and a description of \\"cause environmental damage\\".\\n* A statement that defines an obligation with key \\"obligation1\\" and a description of \\"cause environmental damage\\".\\n\\nPlease note that this is just a preliminary analysis, and there may be additional RDF classes and properties defined in the XML document that are not mentioned here.'}\"
      ]
     },
     \"execution_count\": 30,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"rag_chain.invoke(\\"\\"\\"\n\",
    \"<lrml:LegalSources>\n\",
    \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"  <lrml:appliesAssociations>\n\",
    \"    <lrml:Associations>\n\",
    \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
    \"    </lrml:Associations>\n\",
    \"  </lrml:appliesAssociations>\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"  <lrml:hasQualification>\n\",
    \"    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\n\",
    \"  </lrml:hasQualification>\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\n\",
    \"      <lrml:if>\n\",
    \"        <lrml:Atom>\n\",
    \"          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\n\",
    \"          <lrml:Var>X</lrml:Var>\n\",
    \"        </lrml:Atom>\n\",
    \"      </lrml:if>\n\",
    \"      <lrml:then>\n\",
    \"        <lrml:Obligation>\n\",
    \"          <ruleml:Atom>\n\",
    \"            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\n\",
    \"            <lrml:Var>X</lrml:Var>\n\",
    \"          </ruleml:Atom>\n\",
    \"        </lrml:Obligation>\n\",
    \"      </lrml:then>\n\",
    \"    </ruleml:Rule>\n\",
    \"  </lrml:PrescriptiveStatement>\n\",
    \"</lrml:Statements>\\"\\"\\")\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"35f494f0-7414-4c5d-aa86-702a45a89ff0\",
   \"metadata\": {},
   \"source\": [
    \"# Approach-2 \n\",
    \"Adapting the prompt with an explanation on the metamodel topic.\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 33,
   \"id\": \"79c1a60e-eda9-4842-9e06-8c29290307ce\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"from langchain.chains import LLMChain\n\",
    \"from langchain.prompts import PromptTemplate\n\",
    \"from langchain_core.prompts import ChatPromptTemplate\n\",
    \"from langchain_core.runnables import RunnablePassthrough\n\",
    \"\n\",
    \"prompt_template= \\"\\"\\"\n\",
    \"### [INST] \n\",
    \"<<SYS>> You are an assistant that takes the XML generated and tweaks it in accordance with the rdfs metamodel provided to you below as context. \n\",
    \"The XML is in compliance with the LegalRuleML core specification, whereas the metamodel provides an overview of what the XML should be for a particular category of XML elements.\n\",
    \"The category being implemented is \\"defeasibility\\" which is defined as follows:\n\",
    \"\n\",
    \"'Defeasibility is the property that a conclusion is open in principle to revision in case more evidence to the contrary is provided. Defeasible reasoning is in contrast to monotonic reasoning of propositional logic, where no revision is possible. In addition, defeasible reasoning allows reasoning in the face of contradictions, which gives rise to ex false quodlibet in propositional logic. One application of defeasible reasoning is the ability to model exceptions in a simple and natural way.'\n\",
    \"<</SYS>>\n\",
    \"Use the following metamodel to ensure that the XML generated is in terms of the definition of defeasibility provided in the LegalRuleML specification.\n\",
    \"\n\",
    \"{context}\n\",
    \"\n\",
    \"### QUESTION:\n\",
    \"{question} \n\",
    \"\n\",
    \"[/INST]\n\",
    \"\\"\\"\\"\n\",
    \" \n\",
    \"# Abstraction of Prompt\n\",
    \"prompt = ChatPromptTemplate.from_template(prompt_template)\n\",
    \"output_parser = StrOutputParser()\n\",
    \"\n\",
    \"# Creating an LLM Chain \n\",
    \"llm_chain = LLMChain(llm=llm, prompt=prompt)\n\",
    \"\n\",
    \"# RAG Chain\n\",
    \"rag_chain = ( \n\",
    \" {\\"context\\": retrieverObj, \\"question\\": RunnablePassthrough()}\n\",
    \"    | llm_chain\n\",
    \")\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 34,
   \"id\": \"2310b0dd-4587-40fc-a627-4139cf024f76\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'context': [Document(page_content='\\n\\n        <rdf:RDF xml:base=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/metamodel\\">\\n<!--\\n<owl:Ontology rdf:about=\\"&lrmlmm;/modules/defeasible.rdfs\\" dc:title=\\"The LegalRuleML MetaModel Defeasible Rules vocabulary\\"/>\\n-->\\n<rdfs:Class rdf:about=\\"#DefeasibleStrength\\">\\n<rdfs:label>defeasible strength</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the conclusion of the Legal Rule holds.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Defeater\\">\\n<rdfs:label>defeater</rdfs:label>\\n<rdfs:comment>\\nan indication that, in the absence of information to the contrary and where the antecedent of a Legal Rule holds, the opposite of the conclusion of the Legal Rule does not hold.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Override\\">\\n<rdfs:label>override</rdfs:label>\\n<rdfs:comment>\\nan indication that a Legal Rule takes precedence over another Legal Rule. The ordered pair of Legal Rules is an instance in a defeasible priority relation.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\"/>\\n</rdfs:Class>\\n<!-- Import from RuleML for diagramming purposes -->\\n<rdfs:Class rdf:about=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Atom\\">\\n<rdfs:subClassOf rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#Strength\\">\\n<rdfs:label>strength</rdfs:label>\\n<rdfs:comment>\\nthe quality of a Legal Rule to resist or not to resist a rebuttal.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Associable\\"/>\\n</rdfs:Class>\\n<rdfs:Class rdf:about=\\"#StrictStrength\\">\\n<rdfs:label>strict strength</rdfs:label>\\n<rdfs:comment>\\nan indication that where the antecedent of a Legal Rule is indisputable, the conclusion of the Legal Rule is indisputable.\\n</rdfs:comment>\\n<rdfs:subClassOf rdf:resource=\\"#Strength\\"/>\\n</rdfs:Class>\\n<rdf:Property rdf:about=\\"#appliesStrength\\">\\n<rdfs:label>applies strength</rdfs:label>\\n<rdfs:comment>a Strength applied by the Context or Association.</rdfs:comment>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n<rdfs:subPropertyOf rdf:resource=\\"#applies\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasQualification\\">\\n<rdfs:label>has qualifications</rdfs:label>\\n<rdfs:comment>\\na qualification (e.g. an Override) of the Statements.\\n</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statements\\"/>\\n<rdfs:range rdf:resource=\\"http://docs.oasis-open.org/legalruleml/ns/v1.0/rule-metamodel#Formula\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#hasStrength\\">\\n<rdfs:label>hasStrength</rdfs:label>\\n<rdfs:comment>the Strength of the Legal Rule.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Statement\\"/>\\n<rdfs:range rdf:resource=\\"#Strength\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#over\\">\\n<rdfs:label>over</rdfs:label>\\n<rdfs:comment>the Legal Rule with higher priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<rdf:Property rdf:about=\\"#under\\">\\n<rdfs:label>under</rdfs:label>\\n<rdfs:comment>the Legal Rule with lower priority.</rdfs:comment>\\n<rdfs:domain rdf:resource=\\"#Override\\"/>\\n<rdfs:range rdf:resource=\\"#Statement\\"/>\\n</rdf:Property>\\n<!--\\nDuplicate from context.rdfs for diagramming purposes \\n-->\\n<rdf:Property rdf:about=\\"#applies\\">\\n<rdfs:domain rdf:resource=\\"#Associator\\"/>\\n<rdfs:range rdf:resource=\\"#Associable\\"/>\\n</rdf:Property>\\n</rdf:RDF>\\n')],\n\",
       \" 'question': '\\n<lrml:LegalSources>\\n  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\\n</lrml:LegalSources>\\n\\n<lrml:Context key=\\"psInfo1\\">\\n  <lrml:appliesAssociations>\\n    <lrml:Associations>\\n      <lrml:Association keyref=\\"#ls1\\"/>\\n    </lrml:Associations>\\n  </lrml:appliesAssociations>\\n</lrml:Context>\\n\\n<lrml:Statements key=\\"textblock1\\">\\n  <lrml:hasQualification>\\n    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\\n  </lrml:hasQualification>\\n  <lrml:PrescriptiveStatement key=\\"ps1\\">\\n    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\\n      <lrml:if>\\n        <lrml:Atom>\\n          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\\n          <lrml:Var>X</lrml:Var>\\n        </lrml:Atom>\\n      </lrml:if>\\n      <lrml:then>\\n        <lrml:Obligation>\\n          <ruleml:Atom>\\n            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\\n            <lrml:Var>X</lrml:Var>\\n          </ruleml:Atom>\\n        </lrml:Obligation>\\n      </lrml:then>\\n    </ruleml:Rule>\\n  </lrml:PrescriptiveStatement>\\n</lrml:Statements>',\n\",
       \" 'text': 'Based on the provided XML and the LegalRuleML metamodel provided, I have tweaked the XML to align with the definition of defeasibility provided in the LegalRuleML specification. Here is the modified XML:\\n```xml\\n<lrml:Statements key=\\"textblock1\\">\\n  <lrml:hasQualification>\\n    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\\n  </lrml:hasQualification>\\n  <lrml:PrescriptiveStatement key=\\"ps1\\">\\n    <ruleml:Rule key=\\"rule5\\" closure=\\"universal\\">\\n      <lrml:if>\\n        <lrml:Atom>\\n          <lrml:Rel iri=\\"operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\\n          <lrml:Var>X</lrml:Var>\\n        </lrml:Atom>\\n      </lrml:if>\\n      <lrml:then>\\n        <lrml:Obligation>\\n          <ruleml:Atom>\\n            <lrml:Rel iri=\\"causeEnvironmentalDamage\\"/>\\n            <lrml:Var>X</lrml:Var>\\n          </ruleml:Atom>\\n        </lrml:Obligation>\\n      </lrml:then>\\n    </ruleml:Rule>\\n  </lrml:PrescriptiveStatement>\\n</lrml:Statements>\\n```\\nHere are the changes made to the XML:\\n\\n1. In the `lrml:hasQualification` element, I added the `over` and `under` attributes to specify the Legal Rules that the qualification applies to. In this case, the qualification applies to the `psInfo1` context and the `psInfo2` context.\\n2. In the `lrml:PrescriptiveStatement` element, I updated the `lrml:if` element to include the `lrml:Override` element, which indicates that the statement is defeasible.\\n3. In the `lrml:then` element of the `lrml:if` element, I updated the `lrml:Obligation` element to include the `lrml:Override` element, which indicates that the obligation is defeasible.\\n4. I added the `lrml:DefeasibleStrength` element to the `lrml:Obligation` element to indicate that the obligation is defeasible.\\n\\nBy making these changes, the XML now aligns with the definition of defeasibility provided in the LegalRuleML metamodel.'}\"
      ]
     },
     \"execution_count\": 34,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"rag_chain.invoke(\\"\\"\\"\n\",
    \"<lrml:LegalSources>\n\",
    \"  <lrml:LegalSource key=\\"ls1\\" sameAs=\\"http://www.example.com/rules/rule5\\"/>\n\",
    \"</lrml:LegalSources>\n\",
    \"\n\",
    \"<lrml:Context key=\\"psInfo1\\">\n\",
    \"  <lrml:appliesAssociations>\n\",
    \"    <lrml:Associations>\n\",
    \"      <lrml:Association keyref=\\"#ls1\\"/>\n\",
    \"    </lrml:Associations>\n\",
    \"  </lrml:appliesAssociations>\n\",
    \"</lrml:Context>\n\",
    \"\n\",
    \"<lrml:Statements key=\\"textblock1\\">\n\",
    \"  <lrml:hasQualification>\n\",
    \"    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\n\",
    \"  </lrml:hasQualification>\n\",
    \"  <lrml:PrescriptiveStatement key=\\"ps1\\">\n\",
    \"    <ruleml:Rule key=\\":rule5\\" closure=\\"universal\\">\n\",
    \"      <lrml:if>\n\",
    \"        <lrml:Atom>\n\",
    \"          <lrml:Rel iri=\\":operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\n\",
    \"          <lrml:Var>X</lrml:Var>\n\",
    \"        </lrml:Atom>\n\",
    \"      </lrml:if>\n\",
    \"      <lrml:then>\n\",
    \"        <lrml:Obligation>\n\",
    \"          <ruleml:Atom>\n\",
    \"            <lrml:Rel iri=\\":causeEnvironmentalDamage\\"/>\n\",
    \"            <lrml:Var>X</lrml:Var>\n\",
    \"          </ruleml:Atom>\n\",
    \"        </lrml:Obligation>\n\",
    \"      </lrml:then>\n\",
    \"    </ruleml:Rule>\n\",
    \"  </lrml:PrescriptiveStatement>\n\",
    \"</lrml:Statements>\\"\\"\\")\"
   ]
  },
  {
   \"cell_type\": \"raw\",
   \"id\": \"aaa2af93-9a90-48a0-bd52-ec73b284c6d7\",
   \"metadata\": {},
   \"source\": [
    \"<lrml:Statements key=\\"textblock1\\">\\n  <lrml:hasQualification>\\n    <lrml:Override over=\\"#psInfo1\\" under=\\"#psInfo2\\"/>\\n  </lrml:hasQualification>\\n  <lrml:PrescriptiveStatement key=\\"ps1\\">\\n    <ruleml:Rule key=\\"rule5\\" closure=\\"universal\\">\\n      <lrml:if>\\n        <lrml:Atom>\\n          <lrml:Rel iri=\\"operationWithoutExtendedProducerResponsibilityAuthorization\\"/>\\n          <lrml:Var>X</lrml:Var>\\n        </lrml:Atom>\\n      </lrml:if>\\n      <lrml:then>\\n        <lrml:Obligation>\\n          <ruleml:Atom>\\n            <lrml:Rel iri=\\"causeEnvironmentalDamage\\"/>\\n            <lrml:Var>X</lrml:Var>\\n          </ruleml:Atom>\\n        </lrml:Obligation>\\n      </lrml:then>\\n    </ruleml:Rule>\\n  </lrml:PrescriptiveStatement>\\n</lrml:Statements>\\n```\\nHere are the changes made to the XML:\\n\\n1. In the `lrml:hasQualification` element, I added the `over` and `under` attributes to specify the Legal Rules that the qualification applies to. In this case, the qualification applies to the `psInfo1` context and the `psInfo2` context.\\n2. In the `lrml:PrescriptiveStatement` element, I updated the `lrml:if` element to include the `lrml:Override` element, which indicates that the statement is defeasible.\\n3. In the `lrml:then` element of the `lrml:if` element, I updated the `lrml:Obligation` element to include the `lrml:Override` element, which indicates that the obligation is defeasible.\\n4. I added the `lrml:DefeasibleStrength` element to the `lrml:Obligation` element to indicate that the obligation is defeasible.\\n\\nBy making these changes, the XML now aligns with the definition of defeasibility provided in the LegalRuleML metamodel.'\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"id\": \"9ea52906-e253-44f9-9d3e-d10465f697da\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  }
 ],
 \"metadata\": {
  \"kernelspec\": {
   \"display_name\": \"Schematise\",
   \"language\": \"python\",
   \"name\": \"schematise\"
  },
  \"language_info\": {
   \"codemirror_mode\": {
    \"name\": \"ipython\",
    \"version\": 3
   },
   \"file_extension\": \".py\",
   \"mimetype\": \"text/x-python\",
   \"name\": \"python\",
   \"nbconvert_exporter\": \"python\",
   \"pygments_lexer\": \"ipython3\",
   \"version\": \"3.10.12\"
  }
 },
 \"nbformat\": 4,
 \"nbformat_minor\": 5
}"},
{"model.py": "import requests
import os
import urllib.request
import ssl
import json

from langchain.schema import HumanMessage
from langchain_community.llms.azureml_endpoint import AzureMLEndpointApiType
from langchain_community.chat_models.azureml_endpoint import AzureMLChatOnlineEndpoint
from langchain_community.chat_models.azureml_endpoint import LlamaChatContentFormatter

from langchain.chains import LLMChain
from langchain.prompts import ChatPromptTemplate
from langchain.prompts.few_shot import FewShotChatMessagePromptTemplate
from langchain.prompts.prompt import PromptTemplate
from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.runnables import RunnablePassthrough

import metamodelAndRAG


def send_request(section_for_conversion):
    data = {
        \"messages\": [
            {
                \"role\": \"system\",
                \"content\": \"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same with reference to the documentation available at http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html\"
            },
            {
                \"role\": \"user\",
                \"content\": \"Convert this statute extract to Legal Rule ML XML format: The benefit referred to in comma 1 shall be paid in an amount equal 80 per cent of five-twelfths of the income earned and reported for tax purposes by the freelancer in the second year preceding the year of application.\"
            },
            {
                \"role\": \"assistant\",
                \"content\": \"\"\"
          <lrml:ConstitutiveStatement key=\"tax2\">

          <ruleml:Rule closure=\"universal\">

        <lrml:Paraphrase>If income is reported in some year, then it was earned in the previous year.

        </lrml:Paraphrase>

        <ruleml:if>

          <ruleml:Atom>

            <ruleml:Rel iri=\":reported\"/>

            <ruleml:Var>income</ruleml:Var>

            <ruleml:Var>year</ruleml:Var>

          </ruleml:Atom>

        </ruleml:if>

        <ruleml:then>

          <ruleml:Atom>

            <ruleml:Rel iri=\":earned\"/>

            <ruleml:Var>income</ruleml:Var>

            <ruleml:Expr key=\":year-1\">

              <ruleml:Fun iri=\":subtract\"/>

              <ruleml:Var>year</ruleml:Var>

              <ruleml:Data xsi:type=\"xs:integer\">1</ruleml:Data>

            </ruleml:Expr>

          </ruleml:Atom>

        </ruleml:then>

      </ruleml:Rule>

    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key=\"literal\">

    <ruleml:Rule closure=\"universal\" key=\":literal-template\">

        <ruleml:if>

            <ruleml:And>

                <ruleml:Atom key=\":atom-earned\">

                    <ruleml:Rel iri=\":earned\"/>

                     <ruleml:Var>income</ruleml:Var>

                     <ruleml:Expr>

                        <ruleml:Fun iri=\":subtract\"/>

                        <ruleml:Var>year</ruleml:Var>

                        <ruleml:Data xsi:type=\"xs:integer\">2</ruleml:Data>

                     </ruleml:Expr>

                 </ruleml:Atom>

                 <ruleml:Atom key=\":atom-reported\">

                     <ruleml:Rel iri=\":reported\"/>

                     <ruleml:Var>income</ruleml:Var>

                    <ruleml:Expr>

                         <ruleml:Fun iri=\":subtract\"/>

                         <ruleml:Var>year</ruleml:Var>

                         <ruleml:Data xsi:type=\"xs:integer\">2</ruleml:Data>

                     </ruleml:Expr>

                 </ruleml:Atom>

            </ruleml:And>

        </ruleml:if>

        <ruleml:then>

             <lrml:Obligation key=\"obl-paybenefit\">

                  <ruleml:slot>

                      <lrml:Bearer/>

                      <ruleml:Var>Employer</ruleml:Var>

                  </ruleml:slot>

                  <ruleml:slot>

                      <lrml:AuxiliaryParty/>

                      <ruleml:Var>Freelancer</ruleml:Var>

                  </ruleml:slot>

                  <ruleml:Atom>

                      <ruleml:Rel iri=\":paybenefit\"/>

                     <ruleml:Expr>

                          <ruleml:Fun iri=\":80_percent_of_five-twelfths_of\"/>

                          <ruleml:Var>income</ruleml:Var>

                      </ruleml:Expr>

                      <ruleml:Var>year</ruleml:Var>

                  </ruleml:Atom>

              </lrml:Obligation>

          </ruleml:then>

      </ruleml:Rule>

</lrml:PrescriptiveStatement>
    \"\"\"
            },
            {
                \"role\": \"user\",
                \"content\": \"Convert this statute extract to Legal Rule ML XML format:A person must not engage in a credit activity if the person does not hold a licence authorising the person to engage in the credit activity. Civil penalty: 2,000 penalty units.  Criminal penalty: 200 penalty units, or 2 years imprisonment, or both.\"
            },
            {
                \"role\": \"assistant\",
                \"content\": \"\"\"

<lrml:LegalSources>

   <lrml:LegalSource key=\"ls1\"             sameAs=\"http://www.comlaw.gov.au/Details/C2009A00134/Html/Text#param43\"/>

</lrml:LegalSources>


<lrml:Context key=\"psInfo1\">

   <lrml:appliesAssociations>

          <lrml:Associations>

                <lrml:Association>

                       <lrml:appliesSource keyref=\"#ls1/>

                       <lrml:toTarget keyref=\"#ps1\"/>

                       <lrml:toTarget keyref=\"#ps2\"/>

                       <lrml:toTarget keyref=\"#pen1\"/>

                       <lrml:toTarget keyref=\"#pen2\"/>

                </lrml:Association>

          </lrml:Associations>

</lrml:appliesAssociations>

</lrml:Context>


<lrml:Statements key=\"textblock1\">

<lrml:hasQualification>

  <lrml:Override over=\"#ps2\" under=\"#ps1\"/>

  </lrml:hasQualification>

  <lrml:PrescriptiveStatement key=\"ps1\">

      <ruleml:Rule key=\":rule1\" closure=\"universal\">

        <lrml:hasStrength>

          <lrml:DefeasibleStrength key=\"str1\" iri=\"&defeasible-ontology;#defeasible1\"/>

        </lrml:hasStrength>

        <ruleml:if>

          <ruleml:Atom>

            <ruleml:Rel iri=\":person\"/>

            <ruleml:Var>X</ruleml:Var>

          </ruleml:Atom>

        </ruleml:if>

        <ruleml:then>

          <lrml:SuborderList>

            <lrml:Prohibition>

              <ruleml:Atom>

                <ruleml:Rel iri=\":engageCreditActivity\"/>

                <ruleml:Var>X</ruleml:Var>

              </ruleml:Atom>

            </lrml:Prohibition>

          </lrml:SuborderList>

        </ruleml:then>

      </ruleml:Rule>

    </lrml:PrescriptiveStatement>



    <lrml:PenaltyStatement key=\"pen2\">

      <lrml:SuborderList>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":payPenalUnits\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>200</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":imprisonment\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>2 years</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":payPenalUnitPlusImprisonment\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>200</ruleml:Ind>

            <ruleml:Ind>2 years</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

      </lrml:SuborderList>

    </lrml:PenaltyStatement>



    <lrml:ReparationStatement key=\"rep1\">

      <lrml:Reparation key=\"assoc1\">

        <lrml:appliesPenalty keyref=\"#pen1\"/>

        <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>

      </lrml:Reparation>

    </lrml:ReparationStatement>

    <lrml:ReparationStatement key=\"rep2\">

      <lrml:Reparation keyref=\"#assoc1\">

        <lrml:appliesPenalty keyref=\"#pen2\"/>

        <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>

      </lrml:Reparation>

    </lrml:ReparationStatement>

</lrml:Statements>
\"\"\"
            },
            {
                \"role\": \"user\",
                \"content\": f\"\"\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\"\"\"
            }
        ],
        \"temperature\": 0.25,
        \"max_tokens\": 3000
    }

    body = str.encode(json.dumps(data))

    url = 'https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions'
    # Replace this with the primary/secondary key or AMLToken for the endpoint
    api_key = '4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj'
    if not api_key:
        raise Exception(\"A key should be provided to invoke the endpoint\")

    headers = {'Content-Type': 'application/json', 'Authorization': ('Bearer ' + api_key)}

    req = urllib.request.Request(url, body, headers)

    try:
        response = urllib.request.urlopen(req)

        result = response.read()
        # print(result)

        return result

    except urllib.error.HTTPError as error:
        print(\"The request failed with status code: \" + str(error.code))

        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure
        print(error.info())
        print(error.read().decode(\"utf8\", 'ignore'))

def allowSelfSignedHttps(allowed):
    # bypass the server certificate verification on client side
    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):
        ssl._create_default_https_context = ssl._create_unverified_context


allowSelfSignedHttps(True)  # this line is needed if you use self-signed certificate in your scoring service.



# Request data goes here
# The example below assumes JSON formatting which may be updated
# depending on the format your endpoint expects.
# More information can be found here:
# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script
def RAGPrompt(metamodel_XML, text_value, metamodel_definition_filename):

    llm = AzureMLChatOnlineEndpoint(
        endpoint_url=\"https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions\",
        endpoint_api_type=AzureMLEndpointApiType.serverless,
        endpoint_api_key=\"4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj\",
        content_formatter=LlamaChatContentFormatter(),
        model_kwargs={\"temperature\": 0.4, \"max_tokens\": 1000}
    )


    prompt_template = \"\"\"
    ### [INST] 
    <<SYS>> You are an assistant that takes the XML generated and tweaks it in accordance with the rdfs metamodel provided to you below as context. 
    The XML is in compliance with the LegalRuleML core specification, whereas the metamodel provides an overview of what the XML should be for a particular category of XML elements.
    The category being implemented is {metamodel_definition_filename} which is defined as follows:

    '{metamodel_definition}'
    <</SYS>>
    Use the following metamodel to ensure that the XML generated is in terms of the definition of {metamodel_definition_filename} provided in the LegalRuleML specification.

    {metamodel_XML}

    ### QUESTION:
    {question} 

    [/INST]
    \"\"\"

    # Abstraction of Prompt
    prompt = ChatPromptTemplate.from_template(prompt_template)
    output_parser = StrOutputParser()

    # Creating an LLM Chain
    llm_chain = LLMChain(llm=llm, prompt=prompt)
    # RAG Chain
    rag_chain = (
            {\"metamodel_XML\": retrieverObj, \"question\": RunnablePassthrough(), \"metamodel_definition_filename\": metamodel_definition_filename}
            | llm_chain
    )

    new_text_value = rag_chain.invoke(text_value)

    return new_text_value"},
{"seconddraftCombinedProcess.py": "import model
import metamodelAndRAG
import utils

import json


def metamodel_options():

    metamodels_to_process = []
    print(
        \"The following metamodels can be used to align the new XML generation: (Input anything other than integers 1-7 to continue\")

    print(
        \"1. Context \n 2. Defeasible \n 3. Deontic \n 4. Legal Temporal \n 5. Metadata-actor \n 6. Metadata jurisdiction authority \n 7. Statement\")

    while True:
        metamodel_selected = input(
            'Enter the number of the metamodel to process (or press enter to continue with all/selected): ')

        # Break the loop if the input is not an integer between 1 and 7 or if it's an empty string
        if not metamodel_selected.isdigit() or int(metamodel_selected) not in range(1, 8):
            if metamodel_selected == \"\":
                break  # Exit the loop if the user just presses enter
            print(\"Invalid input. Please enter a number between 1 and 7, or press enter to finish.\")
            continue  # Prompt the user again for a valid input

        # If the input is valid, add it to the list of metamodels to process
        metamodels_to_process.append(metamodel_selected)

    return metamodels_to_process

def similarityProcess(XML_responses, text_value, similarities_dict_below_threshold):
    print(
        \"These are the list of similarities between the newest XML generation and the previously generated XML with their index numbers: \n\")
    i = 0
    for XML_values, similarity in similarities_dict_below_threshold.items():
        i += 1
        print(i, \".: Similarity between the two XML elements or attributes here\", XML_values, \"is equal to\", similarity)

    input_for_revision_opt = input(
        'Do you want to upload an entire new revised XML in place of the newest XML generation? Enter \"Yes\" or input any other key to continue')

    if input_for_revision_opt == \"Yes\":
        new_text_value_fn = input('Enter the filename')

        with open(new_text_value_fn, \"r\") as new_text_file:
            new_text_value = new_text_file.read()
        return new_text_value

    else:
        input_for_metamodel = input('Do you want to align with the metadata model? Enter \"Yes\" or enter any other key to continue without doing so')

        if input_for_metamodel == \"Yes\":
            metamodels_to_process=metamodel_options()
            new_text_value = metamodelAndRAG.similarity_tweaking(text_value, metamodels_to_process)
            return new_text_value
        else:
            return text_value

def responseGetter(df2, XML_arg):


    XML_responses = []

    i = 0
    for index, row in df2.iterrows():
        section_title = row['Section Title']
        nested_content = row['Nested Content']

        i+=1

        # Process section_title and nested_content as needed
        # print(f\"Section Title: {section_title}\")
        # print(f\"Nested Content: {nested_content}\n\")
        section_for_conversion = f\"{section_title}: {nested_content}\n\"

        result = model.send_request(section_for_conversion)

        result_json = json.loads(result.decode('utf-8'))

        # Extract the codeblock
        text_value_old = result_json['choices'][0]['message']['content']
        text_value = utils.strip_code_block(text_value_old)
        filename_debug_old = \"./_cache/old_text_value.txt\" + str(i)
        filename_debug_stripped = \"./_cache/text_value_stripped.txt\" + str(i)
        with open(filename_debug_old, \"w\") as fn:
            fn.write(text_value_old)
        with open(filename_debug_stripped , \"w\") as fn:
            fn.write(text_value)

        string_namespace = '<LegalRuleML xmlns:lrml=\"http://www.oasis-open.org/committees/legalruleml\">'
        if len(XML_responses) == 0:
            new_text_value = string_namespace + text_value
        else:
            metamodels_to_process = metamodel_options()
            new_text_value = metamodelAndRAG.similarity_tweaking(text_value, metamodels_to_process)

        XML_responses.append(new_text_value)

    return XML_responses"},
{"secondmodel.py": "import requests
import os
import urllib.request
import ssl
import json

from langchain_core.output_parsers import StrOutputParser

from langchain.schema import HumanMessage
from langchain_community.llms.azureml_endpoint import AzureMLEndpointApiType
from langchain_community.chat_models.azureml_endpoint import AzureMLChatOnlineEndpoint
from langchain_community.chat_models.azureml_endpoint import LlamaChatContentFormatter

from langchain.chains import LLMChain
from langchain.prompts import ChatPromptTemplate
from langchain.prompts.few_shot import FewShotChatMessagePromptTemplate
from langchain.prompts.prompt import PromptTemplate
from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.runnables import RunnablePassthrough

import metamodelAndRAG


def send_request(section_for_conversion):
    data = {
        \"messages\": [
            {
                \"role\": \"system\",
                \"content\": \"You are a consistent Legal Rule ML converter who takes the statute text as input and outputs the XML format for the same with reference to the documentation available at http://docs.oasis-open.org/legalruleml/legalruleml-core-spec/v1.0/legalruleml-core-spec-v1.0.html\"
            },
            {
                \"role\": \"user\",
                \"content\": \"Convert this statute extract to Legal Rule ML XML format: The benefit referred to in comma 1 shall be paid in an amount equal 80 per cent of five-twelfths of the income earned and reported for tax purposes by the freelancer in the second year preceding the year of application.\"
            },
            {
                \"role\": \"assistant\",
                \"content\": \"\"\"
          <lrml:ConstitutiveStatement key=\"tax2\">

          <ruleml:Rule closure=\"universal\">

        <lrml:Paraphrase>If income is reported in some year, then it was earned in the previous year.

        </lrml:Paraphrase>

        <ruleml:if>

          <ruleml:Atom>

            <ruleml:Rel iri=\":reported\"/>

            <ruleml:Var>income</ruleml:Var>

            <ruleml:Var>year</ruleml:Var>

          </ruleml:Atom>

        </ruleml:if>

        <ruleml:then>

          <ruleml:Atom>

            <ruleml:Rel iri=\":earned\"/>

            <ruleml:Var>income</ruleml:Var>

            <ruleml:Expr key=\":year-1\">

              <ruleml:Fun iri=\":subtract\"/>

              <ruleml:Var>year</ruleml:Var>

              <ruleml:Data xsi:type=\"xs:integer\">1</ruleml:Data>

            </ruleml:Expr>

          </ruleml:Atom>

        </ruleml:then>

      </ruleml:Rule>

    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key=\"literal\">

    <ruleml:Rule closure=\"universal\" key=\":literal-template\">

        <ruleml:if>

            <ruleml:And>

                <ruleml:Atom key=\":atom-earned\">

                    <ruleml:Rel iri=\":earned\"/>

                     <ruleml:Var>income</ruleml:Var>

                     <ruleml:Expr>

                        <ruleml:Fun iri=\":subtract\"/>

                        <ruleml:Var>year</ruleml:Var>

                        <ruleml:Data xsi:type=\"xs:integer\">2</ruleml:Data>

                     </ruleml:Expr>

                 </ruleml:Atom>

                 <ruleml:Atom key=\":atom-reported\">

                     <ruleml:Rel iri=\":reported\"/>

                     <ruleml:Var>income</ruleml:Var>

                    <ruleml:Expr>

                         <ruleml:Fun iri=\":subtract\"/>

                         <ruleml:Var>year</ruleml:Var>

                         <ruleml:Data xsi:type=\"xs:integer\">2</ruleml:Data>

                     </ruleml:Expr>

                 </ruleml:Atom>

            </ruleml:And>

        </ruleml:if>

        <ruleml:then>

             <lrml:Obligation key=\"obl-paybenefit\">

                  <ruleml:slot>

                      <lrml:Bearer/>

                      <ruleml:Var>Employer</ruleml:Var>

                  </ruleml:slot>

                  <ruleml:slot>

                      <lrml:AuxiliaryParty/>

                      <ruleml:Var>Freelancer</ruleml:Var>

                  </ruleml:slot>

                  <ruleml:Atom>

                      <ruleml:Rel iri=\":paybenefit\"/>

                     <ruleml:Expr>

                          <ruleml:Fun iri=\":80_percent_of_five-twelfths_of\"/>

                          <ruleml:Var>income</ruleml:Var>

                      </ruleml:Expr>

                      <ruleml:Var>year</ruleml:Var>

                  </ruleml:Atom>

              </lrml:Obligation>

          </ruleml:then>

      </ruleml:Rule>

</lrml:PrescriptiveStatement>
    \"\"\"
            },
            {
                \"role\": \"user\",
                \"content\": \"Convert this statute extract to Legal Rule ML XML format:A person must not engage in a credit activity if the person does not hold a licence authorising the person to engage in the credit activity. Civil penalty: 2,000 penalty units.  Criminal penalty: 200 penalty units, or 2 years imprisonment, or both.\"
            },
            {
                \"role\": \"assistant\",
                \"content\": \"\"\"

<lrml:LegalSources>

   <lrml:LegalSource key=\"ls1\"             sameAs=\"http://www.comlaw.gov.au/Details/C2009A00134/Html/Text#param43\"/>

</lrml:LegalSources>


<lrml:Context key=\"psInfo1\">

   <lrml:appliesAssociations>

          <lrml:Associations>

                <lrml:Association>

                       <lrml:appliesSource keyref=\"#ls1/>

                       <lrml:toTarget keyref=\"#ps1\"/>

                       <lrml:toTarget keyref=\"#ps2\"/>

                       <lrml:toTarget keyref=\"#pen1\"/>

                       <lrml:toTarget keyref=\"#pen2\"/>

                </lrml:Association>

          </lrml:Associations>

</lrml:appliesAssociations>

</lrml:Context>


<lrml:Statements key=\"textblock1\">

<lrml:hasQualification>

  <lrml:Override over=\"#ps2\" under=\"#ps1\"/>

  </lrml:hasQualification>

  <lrml:PrescriptiveStatement key=\"ps1\">

      <ruleml:Rule key=\":rule1\" closure=\"universal\">

        <lrml:hasStrength>

          <lrml:DefeasibleStrength key=\"str1\" iri=\"&defeasible-ontology;#defeasible1\"/>

        </lrml:hasStrength>

        <ruleml:if>

          <ruleml:Atom>

            <ruleml:Rel iri=\":person\"/>

            <ruleml:Var>X</ruleml:Var>

          </ruleml:Atom>

        </ruleml:if>

        <ruleml:then>

          <lrml:SuborderList>

            <lrml:Prohibition>

              <ruleml:Atom>

                <ruleml:Rel iri=\":engageCreditActivity\"/>

                <ruleml:Var>X</ruleml:Var>

              </ruleml:Atom>

            </lrml:Prohibition>

          </lrml:SuborderList>

        </ruleml:then>

      </ruleml:Rule>

    </lrml:PrescriptiveStatement>



    <lrml:PenaltyStatement key=\"pen2\">

      <lrml:SuborderList>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":payPenalUnits\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>200</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":imprisonment\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>2 years</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

        <lrml:Obligation>

          <ruleml:Atom>

            <ruleml:Rel iri=\":payPenalUnitPlusImprisonment\"/>

            <ruleml:Var>X</ruleml:Var>

            <ruleml:Ind>200</ruleml:Ind>

            <ruleml:Ind>2 years</ruleml:Ind>

          </ruleml:Atom>

        </lrml:Obligation>

      </lrml:SuborderList>

    </lrml:PenaltyStatement>



    <lrml:ReparationStatement key=\"rep1\">

      <lrml:Reparation key=\"assoc1\">

        <lrml:appliesPenalty keyref=\"#pen1\"/>

        <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>

      </lrml:Reparation>

    </lrml:ReparationStatement>

    <lrml:ReparationStatement key=\"rep2\">

      <lrml:Reparation keyref=\"#assoc1\">

        <lrml:appliesPenalty keyref=\"#pen2\"/>

        <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>

      </lrml:Reparation>

    </lrml:ReparationStatement>

</lrml:Statements>
\"\"\"
            },
            {
                \"role\": \"user\",
                \"content\": f\"\"\"Convert this extract of a statute to LegalRuleML XML format: {section_for_conversion}\"\"\"
            }
        ],
        \"temperature\": 0.25,
        \"max_tokens\": 3000
    }

    body = str.encode(json.dumps(data))

    url = 'https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions'
    # Replace this with the primary/secondary key or AMLToken for the endpoint
    api_key = '4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj'
    if not api_key:
        raise Exception(\"A key should be provided to invoke the endpoint\")

    headers = {'Content-Type': 'application/json', 'Authorization': ('Bearer ' + api_key)}

    req = urllib.request.Request(url, body, headers)

    try:
        response = urllib.request.urlopen(req)

        result = response.read()
        # print(result)

        return result

    except urllib.error.HTTPError as error:
        print(\"The request failed with status code: \" + str(error.code))

        # Print the headers - they include the requert ID and the timestamp, which are useful for debugging the failure
        print(error.info())
        print(error.read().decode(\"utf8\", 'ignore'))

def allowSelfSignedHttps(allowed):
    # bypass the server certificate verification on client side
    if allowed and not os.environ.get('PYTHONHTTPSVERIFY', '') and getattr(ssl, '_create_unverified_context', None):
        ssl._create_default_https_context = ssl._create_unverified_context


allowSelfSignedHttps(True)  # this line is needed if you use self-signed certificate in your scoring service.



# Request data goes here
# The example below assumes JSON formatting which may be updated
# depending on the format your endpoint expects.
# More information can be found here:
# https://docs.microsoft.com/azure/machine-learning/how-to-deploy-advanced-entry-script
def RAGPrompt(metamodel_XML, text_value, metamodel_definition, metamodel_definition_filename):

    llm = AzureMLChatOnlineEndpoint(
        endpoint_url=\"https://sankalpsrivastava-2538-xkazl.eastus2.inference.ml.azure.com/v1/chat/completions\",
        endpoint_api_type=AzureMLEndpointApiType.serverless,
        endpoint_api_key=\"4SPdZEkutLw9T61QlhqcVDb6gc5cWhQj\",
        content_formatter=LlamaChatContentFormatter(),
        model_kwargs={\"temperature\": 0.4, \"max_tokens\": 1000}
    )


    prompt_template = \"\"\"
    ### [INST] 
    <<SYS>> You are an assistant that takes the XML generated and tweaks it in accordance with the rdfs metamodel provided to you below as context. 
    The XML is in compliance with the LegalRuleML core specification, whereas the metamodel provides an overview of what the XML should be for a particular category of XML elements.
    The category being implemented is {metamodel_definition_filename} which is defined as follows:

    '{metamodel_definition}'
    <</SYS>>
    Use the following metamodel to ensure that the XML generated is in terms of the definition of {metamodel_definition_filename} provided in the LegalRuleML specification.

    {metamodel_XML}

    ### QUESTION:
    {question} 

    [/INST]
    \"\"\"

    # Abstraction of Prompt
    prompt = ChatPromptTemplate.from_template(prompt_template)
    output_parser = StrOutputParser()

    # Creating an LLM Chain
    llm_chain = LLMChain(llm=llm, prompt=prompt)
    # RAG Chain
    rag_chain = (
            {\"metamodel_XML\": metamodel_XML, \"question\": text_value, \"metamodel_definition_filename\": metamodel_definition_filename, \"metamodel_definition\": metamodel_definition}
            | llm_chain
    )

    new_text_value = rag_chain.invoke()

    return new_text_value

if __name__ == \"__main__\":
    with open (\"Docs/statement.rdf\", \"r\") as filename:
        metamodel_XML = filename.read()
    with open (\"Docs/statement.txt\" , \"r\") as filename:
        metamodel_definition = filename.read()
    with open (\"_cache/text_value_stripped.txt\", \"r\") as filename:
        text_value = filename.read()
    metamodel_definition_filename = \"statement\"
    new_text_value = RAGPrompt(metamodel_XML, text_value, metamodel_definition, metamodel_definition_filename)"},
{"Similarity-XML-SimpleRatio.ipynb": "{
 \"cells\": [
  {
   \"cell_type\": \"markdown\",
   \"id\": \"2684ea73-a2ed-4d27-8439-4574a57389a0\",
   \"metadata\": {},
   \"source\": [
    \"### Introduction\n\",
    \"Since LLM output generated sequentially (via Few Shot Prompting) for conversion of Statutes in LegalRuleML XML format can have overlapping elements and attributes, it is useful to gauge the instances where such an output needs to be integrated with the previously generated schema. This notebook demonstrates an approach using similarity scores from TheFuzz library.\n\",
    \"\n\",
    \"### Table of Contents\n\",
    \"[Step 1](#Step-1) - Convert all elements and values to a dictionary\n\",
    \"\n\",
    \"[Step 2](#Step-2) - Compare the Elements only using Fuzzy Similarity\n\",
    \"\n\",
    \"[Step 3](#Step-3) - Clean the data and compare all elements and attributes with each other\n\",
    \"\n\",
    \"[Results](#Results) - Some instances which cross a threshold of 0.5\n\",
    \"\n\",
    \"### Conclusion\n\",
    \"Using Simple Ratio, it is possible to iterate over the previously generated elements and attributes and compare them at the points at which the LLM's text generation has been similar. It will be beneficial to use similarity scores as a starting point for this comparison so that output can be compared when generated sequentially, and thereafter integrate. However, a further step would involve comparing the XML tree to ensure consistency. \"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"062bac56-bc3d-4beb-ab8c-2369d2e93a4e\",
   \"metadata\": {},
   \"source\": [
    \"### Step 1\n\",
    \"Convert all elements and values to a dictionary\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 19,
   \"id\": \"380497d9-77e8-491f-a692-8c91850d7bb2\",
   \"metadata\": {
    \"scrolled\": true
   },
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"{'{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': [], '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': ('id', 'AccidentReporting'), '{http://www.oasis-open.org/committees/legalruleml}Rule': ('id', 'AccidentReportingRule'), '{http://www.oasis-open.org/committees/legalruleml}if': [], '{http://www.oasis-open.org/committees/legalruleml}Fact': [], '{http://www.oasis-open.org/committees/legalruleml}Rel': ('iri', '#majorAccident'), '{http://www.oasis-open.org/committees/legalruleml}then': [], '{http://www.oasis-open.org/committees/legalruleml}Obligation': [], '{http://www.oasis-open.org/committees/legalruleml}Action': [], '{http://www.oasis-open.org/committees/legalruleml}Intimation': [], '{http://www.oasis-open.org/committees/legalruleml}To': ('iri', '#prescribedAuthority'), '{http://www.oasis-open.org/committees/legalruleml}Within': ('{http://www.oasis-open.org/committees/legalruleml}TimeUnit', 'days'), '{http://www.oasis-open.org/committees/legalruleml}Reporting': [], '{http://www.oasis-open.org/committees/legalruleml}Form': ('iri', '#FormI')}\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}LegalRuleML\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement\n\",
      \"Attributes: ('id', 'AccidentReporting')\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Rule\n\",
      \"Attributes: ('id', 'AccidentReportingRule')\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}if\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Fact\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Rel\n\",
      \"Attributes: ('iri', '#majorAccident')\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}then\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Obligation\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Action\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Intimation\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}To\n\",
      \"Attributes: ('iri', '#prescribedAuthority')\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Within\n\",
      \"Attributes: ('{http://www.oasis-open.org/committees/legalruleml}TimeUnit', 'days')\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Reporting\n\",
      \"Attributes: []\n\",
      \"Element: {http://www.oasis-open.org/committees/legalruleml}Form\n\",
      \"Attributes: ('iri', '#FormI')\n\"
     ]
    }
   ],
   \"source\": [
    \"import xml.etree.ElementTree as ET\n\",
    \"\n\",
    \"def get_elements_and_attributes(xml_file):\n\",
    \"    tree = ET.parse(xml_file)\n\",
    \"    root = tree.getroot()\n\",
    \"\n\",
    \"    elements_and_attributes = {}\n\",
    \"\n\",
    \"    # Function to recursively traverse the XML tree\n\",
    \"    def traverse(element):\n\",
    \"        nonlocal elements_and_attributes\n\",
    \"\n\",
    \"        # Adding the element itself\n\",
    \"        attributes = element.attrib\n\",
    \"\n\",
    \"        elements_and_attributes[element.tag] = list(element.attrib.keys())\n\",
    \"        for attr in attributes:\n\",
    \"            attributes_with_values = (attr, attributes.get(attr, 0))\n\",
    \"            \n\",
    \"            elements_and_attributes[element.tag] = attributes_with_values\n\",
    \"\n\",
    \"            \n\",
    \"        \n\",
    \"        # Recursively traversing child elements\n\",
    \"        for child in element:\n\",
    \"            traverse(child)\n\",
    \"\n\",
    \"    traverse(root)\n\",
    \"\n\",
    \"    return elements_and_attributes\n\",
    \"\n\",
    \"# Example usage\n\",
    \"xml_file = 'Test-XML1.xml'  # Replace with the path to your XML file\n\",
    \"elements_and_attributes = get_elements_and_attributes(xml_file)\n\",
    \"print (elements_and_attributes)\n\",
    \"for element, attributes in elements_and_attributes.items():\n\",
    \"    print(f\\"Element: {element}\\")\n\",
    \"    print(f\\"Attributes: {attributes}\\")\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 24,
   \"id\": \"e84d04a6-71db-46a4-b254-b4d9319ba898\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"xml_file_1 = \\"Test-XML1.xml\\"\n\",
    \"xml_file_2 = \\"Test-XML2.xml\\"\n\",
    \"\n\",
    \"dict1 = get_elements_and_attributes(xml_file_1)\n\",
    \"dict2 = get_elements_and_attributes(xml_file_2)\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"93934595-b710-4799-aee9-64c51e5f0d97\",
   \"metadata\": {},
   \"source\": [
    \"### Step 2\n\",
    \"\n\",
    \"Compare the Elements only using Simple Ratio\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 22,
   \"id\": \"2ba5726a-ff2f-40fd-b386-2954bb272a79\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"from thefuzz import fuzz\n\",
    \"def fuzzy_similarity(s1, s2):\n\",
    \"    \\"\\"\\"\n\",
    \"    Compute the fuzzy string similarity using TheFuzz library.\n\",
    \"    \\"\\"\\"\n\",
    \"    return fuzz.ratio(s1, s2) / 100.0  # Convert to a float [0, 1]\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 23,
   \"id\": \"5168c083-e631-4f2c-80c8-cdd087c9109a\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"def compare_dicts(dict1, dict2):\n\",
    \"    \\"\\"\\"\n\",
    \"    Compare elements from two dictionaries and compute fuzzy similarity.\n\",
    \"    \\"\\"\\"\n\",
    \"    for key1, value1 in dict1.items():\n\",
    \"        for key2, value2 in dict2.items():\n\",
    \"            similarity = fuzzy_similarity(key1, key2)\n\",
    \"            print(f\\"Similarity between '{key1}' and '{key2}': {similarity}\\")\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 25,
   \"id\": \"50e4c6d2-9a74-4de4-a523-f021011235b4\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': ('id',\n\",
       \"  'AccidentReporting'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Rule': ('id',\n\",
       \"  'AccidentReportingRule'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}if': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Fact': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Rel': ('iri',\n\",
       \"  '#majorAccident'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}then': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Obligation': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Action': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Intimation': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}To': ('iri',\n\",
       \"  '#prescribedAuthority'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Within': ('{http://www.oasis-open.org/committees/legalruleml}TimeUnit',\n\",
       \"  'days'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Reporting': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Form': ('iri', '#FormI')}\"
      ]
     },
     \"execution_count\": 25,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"dict1\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 26,
   \"id\": \"79c5077d-b97a-4e6a-b744-a739c8f9b196\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': ('id',\n\",
       \"  'AccidentReporting'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Rule': ('id',\n\",
       \"  'AccidentReportingRule'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}if': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Fact': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Rel': ('iri',\n\",
       \"  '#majorAccident'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}then': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Obligation': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Action': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': ('iri',\n\",
       \"  '#prescribedAuthority'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Timing': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': ('start',\n\",
       \"  'within24hours'),\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Reporting': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Form': [],\n\",
       \" '{http://www.oasis-open.org/committees/legalruleml}Iri': ('iri', '#FormI')}\"
      ]
     },
     \"execution_count\": 26,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"dict2\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 27,
   \"id\": \"12716643-4796-4e66-8cc9-bbce056f1b4b\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.8\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.81\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.8\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.81\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.84\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.97\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.84\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rule' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}if': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}if' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.97\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Fact' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.97\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Rel' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}then': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}then' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.82\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Obligation' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Action': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Action' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.84\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.84\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Intimation' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.81\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.96\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.96\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}To' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.96\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.88\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.95\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Within' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.85\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.9\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Form': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Reporting' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}LegalRuleML': 0.87\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}PrescriptiveStatement': 0.83\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Rule': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}if': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Fact': 0.94\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Rel': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}then': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Obligation': 0.89\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Action': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}IntimateAuthority': 0.86\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Timing': 0.93\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}TimeSpan': 0.91\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Reporting': 0.92\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Form': 1.0\n\",
      \"Similarity between '{http://www.oasis-open.org/committees/legalruleml}Form' and '{http://www.oasis-open.org/committees/legalruleml}Iri': 0.95\n\"
     ]
    }
   ],
   \"source\": [
    \"compare_dicts(dict1, dict2)\"
   ]
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"d6f71a86-093e-41e2-978b-096754b61817\",
   \"metadata\": {},
   \"source\": [
    \"### Step 3\n\",
    \"\n\",
    \"Clean the data and compare all elements and attributes with each other\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 53,
   \"id\": \"f480b1e5-66db-4143-8a44-1d4ceacfef5d\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"def remove_string_from_tuple_value(value, string_to_remove):\n\",
    \"    \\"\\"\\"\n\",
    \"    Remove a specified string from all elements in the tuple value.\n\",
    \"    \\"\\"\\"\n\",
    \"    return tuple(item.replace(string_to_remove, '') for item in value)\n\",
    \"\n\",
    \"def clean_dictionary(dictionary, string_to_remove):\n\",
    \"    \\"\\"\\"\n\",
    \"    Remove a specified string from all keys and values in the dictionary.\n\",
    \"    \\"\\"\\"\n\",
    \"    cleaned_dict = {}\n\",
    \"    for key, value in dictionary.items():\n\",
    \"        cleaned_key = key.replace(string_to_remove, '')\n\",
    \"        if isinstance(value, tuple):\n\",
    \"            cleaned_value = remove_string_from_tuple_value(value, string_to_remove)\n\",
    \"        else:\n\",
    \"            cleaned_value = value.replace(string_to_remove, '') if isinstance(value, str) else value\n\",
    \"        cleaned_dict[cleaned_key] = cleaned_value\n\",
    \"    return cleaned_dict\n\",
    \"    \n\",
    \"dict1_cleaned = clean_dictionary(dict1, \\"{http://www.oasis-open.org/committees/legalruleml}\\")\n\",
    \"dict2_cleaned = remove_string(dict2, \\"{http://www.oasis-open.org/committees/legalruleml}\\")\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 54,
   \"id\": \"d4f28522-87c3-42ca-b9ae-f73ed3045433\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'LegalRuleML': [],\n\",
       \" 'PrescriptiveStatement': ('id', 'AccidentReporting'),\n\",
       \" 'Rule': ('id', 'AccidentReportingRule'),\n\",
       \" 'if': [],\n\",
       \" 'Fact': [],\n\",
       \" 'Rel': ('iri', '#majorAccident'),\n\",
       \" 'then': [],\n\",
       \" 'Obligation': [],\n\",
       \" 'Action': [],\n\",
       \" 'Intimation': [],\n\",
       \" 'To': ('iri', '#prescribedAuthority'),\n\",
       \" 'Within': ('TimeUnit', 'days'),\n\",
       \" 'Reporting': [],\n\",
       \" 'Form': ('iri', '#FormI')}\"
      ]
     },
     \"execution_count\": 54,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"dict1_cleaned\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 55,
   \"id\": \"1861f776-5aee-44ec-b173-5ca9c4303a62\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Similarity between 'LegalRuleML' and 'LegalRuleML': 1.0\n\",
      \"Similarity between 'LegalRuleML' and 'PrescriptiveStatement': 0.19\n\",
      \"Similarity between 'LegalRuleML' and 'Rule': 0.53\n\",
      \"Similarity between 'LegalRuleML' and 'if': 0.0\n\",
      \"Similarity between 'LegalRuleML' and 'Fact': 0.13\n\",
      \"Similarity between 'LegalRuleML' and 'Rel': 0.29\n\",
      \"Similarity between 'LegalRuleML' and 'then': 0.13\n\",
      \"Similarity between 'LegalRuleML' and 'Obligation': 0.19\n\",
      \"Similarity between 'LegalRuleML' and 'Action': 0.0\n\",
      \"Similarity between 'LegalRuleML' and 'IntimateAuthority': 0.14\n\",
      \"Similarity between 'LegalRuleML' and 'Timing': 0.12\n\",
      \"Similarity between 'LegalRuleML' and 'TimeSpan': 0.21\n\",
      \"Similarity between 'LegalRuleML' and 'Reporting': 0.2\n\",
      \"Similarity between 'LegalRuleML' and 'Form': 0.0\n\",
      \"Similarity between 'LegalRuleML' and 'Iri': 0.0\n\",
      \"Similarity between 'PrescriptiveStatement' and 'LegalRuleML': 0.19\n\",
      \"Similarity between 'PrescriptiveStatement' and 'PrescriptiveStatement': 1.0\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Rule': 0.08\n\",
      \"Similarity between 'PrescriptiveStatement' and 'if': 0.09\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Fact': 0.16\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Rel': 0.08\n\",
      \"Similarity between 'PrescriptiveStatement' and 'then': 0.24\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Obligation': 0.26\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Action': 0.3\n\",
      \"Similarity between 'PrescriptiveStatement' and 'IntimateAuthority': 0.32\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Timing': 0.22\n\",
      \"Similarity between 'PrescriptiveStatement' and 'TimeSpan': 0.34\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Reporting': 0.33\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Form': 0.16\n\",
      \"Similarity between 'PrescriptiveStatement' and 'Iri': 0.17\n\",
      \"Similarity between 'Rule' and 'LegalRuleML': 0.53\n\",
      \"Similarity between 'Rule' and 'PrescriptiveStatement': 0.08\n\",
      \"Similarity between 'Rule' and 'Rule': 1.0\n\",
      \"Similarity between 'Rule' and 'if': 0.0\n\",
      \"Similarity between 'Rule' and 'Fact': 0.0\n\",
      \"Similarity between 'Rule' and 'Rel': 0.57\n\",
      \"Similarity between 'Rule' and 'then': 0.25\n\",
      \"Similarity between 'Rule' and 'Obligation': 0.14\n\",
      \"Similarity between 'Rule' and 'Action': 0.0\n\",
      \"Similarity between 'Rule' and 'IntimateAuthority': 0.1\n\",
      \"Similarity between 'Rule' and 'Timing': 0.0\n\",
      \"Similarity between 'Rule' and 'TimeSpan': 0.17\n\",
      \"Similarity between 'Rule' and 'Reporting': 0.31\n\",
      \"Similarity between 'Rule' and 'Form': 0.0\n\",
      \"Similarity between 'Rule' and 'Iri': 0.0\n\",
      \"Similarity between 'if' and 'LegalRuleML': 0.0\n\",
      \"Similarity between 'if' and 'PrescriptiveStatement': 0.09\n\",
      \"Similarity between 'if' and 'Rule': 0.0\n\",
      \"Similarity between 'if' and 'if': 1.0\n\",
      \"Similarity between 'if' and 'Fact': 0.0\n\",
      \"Similarity between 'if' and 'Rel': 0.0\n\",
      \"Similarity between 'if' and 'then': 0.0\n\",
      \"Similarity between 'if' and 'Obligation': 0.17\n\",
      \"Similarity between 'if' and 'Action': 0.25\n\",
      \"Similarity between 'if' and 'IntimateAuthority': 0.11\n\",
      \"Similarity between 'if' and 'Timing': 0.25\n\",
      \"Similarity between 'if' and 'TimeSpan': 0.2\n\",
      \"Similarity between 'if' and 'Reporting': 0.18\n\",
      \"Similarity between 'if' and 'Form': 0.0\n\",
      \"Similarity between 'if' and 'Iri': 0.4\n\",
      \"Similarity between 'Fact' and 'LegalRuleML': 0.13\n\",
      \"Similarity between 'Fact' and 'PrescriptiveStatement': 0.16\n\",
      \"Similarity between 'Fact' and 'Rule': 0.0\n\",
      \"Similarity between 'Fact' and 'if': 0.0\n\",
      \"Similarity between 'Fact' and 'Fact': 1.0\n\",
      \"Similarity between 'Fact' and 'Rel': 0.0\n\",
      \"Similarity between 'Fact' and 'then': 0.25\n\",
      \"Similarity between 'Fact' and 'Obligation': 0.29\n\",
      \"Similarity between 'Fact' and 'Action': 0.4\n\",
      \"Similarity between 'Fact' and 'IntimateAuthority': 0.19\n\",
      \"Similarity between 'Fact' and 'Timing': 0.0\n\",
      \"Similarity between 'Fact' and 'TimeSpan': 0.17\n\",
      \"Similarity between 'Fact' and 'Reporting': 0.15\n\",
      \"Similarity between 'Fact' and 'Form': 0.25\n\",
      \"Similarity between 'Fact' and 'Iri': 0.0\n\",
      \"Similarity between 'Rel' and 'LegalRuleML': 0.29\n\",
      \"Similarity between 'Rel' and 'PrescriptiveStatement': 0.08\n\",
      \"Similarity between 'Rel' and 'Rule': 0.57\n\",
      \"Similarity between 'Rel' and 'if': 0.0\n\",
      \"Similarity between 'Rel' and 'Fact': 0.0\n\",
      \"Similarity between 'Rel' and 'Rel': 1.0\n\",
      \"Similarity between 'Rel' and 'then': 0.29\n\",
      \"Similarity between 'Rel' and 'Obligation': 0.15\n\",
      \"Similarity between 'Rel' and 'Action': 0.0\n\",
      \"Similarity between 'Rel' and 'IntimateAuthority': 0.1\n\",
      \"Similarity between 'Rel' and 'Timing': 0.0\n\",
      \"Similarity between 'Rel' and 'TimeSpan': 0.18\n\",
      \"Similarity between 'Rel' and 'Reporting': 0.33\n\",
      \"Similarity between 'Rel' and 'Form': 0.0\n\",
      \"Similarity between 'Rel' and 'Iri': 0.0\n\",
      \"Similarity between 'then' and 'LegalRuleML': 0.13\n\",
      \"Similarity between 'then' and 'PrescriptiveStatement': 0.24\n\",
      \"Similarity between 'then' and 'Rule': 0.25\n\",
      \"Similarity between 'then' and 'if': 0.0\n\",
      \"Similarity between 'then' and 'Fact': 0.25\n\",
      \"Similarity between 'then' and 'Rel': 0.29\n\",
      \"Similarity between 'then' and 'then': 1.0\n\",
      \"Similarity between 'then' and 'Obligation': 0.29\n\",
      \"Similarity between 'then' and 'Action': 0.4\n\",
      \"Similarity between 'then' and 'IntimateAuthority': 0.19\n\",
      \"Similarity between 'then' and 'Timing': 0.2\n\",
      \"Similarity between 'then' and 'TimeSpan': 0.33\n\",
      \"Similarity between 'then' and 'Reporting': 0.31\n\",
      \"Similarity between 'then' and 'Form': 0.0\n\",
      \"Similarity between 'then' and 'Iri': 0.0\n\",
      \"Similarity between 'Obligation' and 'LegalRuleML': 0.19\n\",
      \"Similarity between 'Obligation' and 'PrescriptiveStatement': 0.26\n\",
      \"Similarity between 'Obligation' and 'Rule': 0.14\n\",
      \"Similarity between 'Obligation' and 'if': 0.17\n\",
      \"Similarity between 'Obligation' and 'Fact': 0.29\n\",
      \"Similarity between 'Obligation' and 'Rel': 0.15\n\",
      \"Similarity between 'Obligation' and 'then': 0.29\n\",
      \"Similarity between 'Obligation' and 'Obligation': 1.0\n\",
      \"Similarity between 'Obligation' and 'Action': 0.5\n\",
      \"Similarity between 'Obligation' and 'IntimateAuthority': 0.3\n\",
      \"Similarity between 'Obligation' and 'Timing': 0.38\n\",
      \"Similarity between 'Obligation' and 'TimeSpan': 0.33\n\",
      \"Similarity between 'Obligation' and 'Reporting': 0.32\n\",
      \"Similarity between 'Obligation' and 'Form': 0.14\n\",
      \"Similarity between 'Obligation' and 'Iri': 0.15\n\",
      \"Similarity between 'Action' and 'LegalRuleML': 0.0\n\",
      \"Similarity between 'Action' and 'PrescriptiveStatement': 0.3\n\",
      \"Similarity between 'Action' and 'Rule': 0.0\n\",
      \"Similarity between 'Action' and 'if': 0.25\n\",
      \"Similarity between 'Action' and 'Fact': 0.4\n\",
      \"Similarity between 'Action' and 'Rel': 0.0\n\",
      \"Similarity between 'Action' and 'then': 0.4\n\",
      \"Similarity between 'Action' and 'Obligation': 0.5\n\",
      \"Similarity between 'Action' and 'Action': 1.0\n\",
      \"Similarity between 'Action' and 'IntimateAuthority': 0.26\n\",
      \"Similarity between 'Action' and 'Timing': 0.33\n\",
      \"Similarity between 'Action' and 'TimeSpan': 0.29\n\",
      \"Similarity between 'Action' and 'Reporting': 0.4\n\",
      \"Similarity between 'Action' and 'Form': 0.2\n\",
      \"Similarity between 'Action' and 'Iri': 0.22\n\",
      \"Similarity between 'Intimation' and 'LegalRuleML': 0.1\n\",
      \"Similarity between 'Intimation' and 'PrescriptiveStatement': 0.32\n\",
      \"Similarity between 'Intimation' and 'Rule': 0.0\n\",
      \"Similarity between 'Intimation' and 'if': 0.17\n\",
      \"Similarity between 'Intimation' and 'Fact': 0.29\n\",
      \"Similarity between 'Intimation' and 'Rel': 0.0\n\",
      \"Similarity between 'Intimation' and 'then': 0.29\n\",
      \"Similarity between 'Intimation' and 'Obligation': 0.6\n\",
      \"Similarity between 'Intimation' and 'Action': 0.5\n\",
      \"Similarity between 'Intimation' and 'IntimateAuthority': 0.59\n\",
      \"Similarity between 'Intimation' and 'Timing': 0.5\n\",
      \"Similarity between 'Intimation' and 'TimeSpan': 0.44\n\",
      \"Similarity between 'Intimation' and 'Reporting': 0.32\n\",
      \"Similarity between 'Intimation' and 'Form': 0.14\n\",
      \"Similarity between 'Intimation' and 'Iri': 0.31\n\",
      \"Similarity between 'To' and 'LegalRuleML': 0.0\n\",
      \"Similarity between 'To' and 'PrescriptiveStatement': 0.0\n\",
      \"Similarity between 'To' and 'Rule': 0.0\n\",
      \"Similarity between 'To' and 'if': 0.0\n\",
      \"Similarity between 'To' and 'Fact': 0.0\n\",
      \"Similarity between 'To' and 'Rel': 0.0\n\",
      \"Similarity between 'To' and 'then': 0.0\n\",
      \"Similarity between 'To' and 'Obligation': 0.17\n\",
      \"Similarity between 'To' and 'Action': 0.25\n\",
      \"Similarity between 'To' and 'IntimateAuthority': 0.11\n\",
      \"Similarity between 'To' and 'Timing': 0.25\n\",
      \"Similarity between 'To' and 'TimeSpan': 0.2\n\",
      \"Similarity between 'To' and 'Reporting': 0.18\n\",
      \"Similarity between 'To' and 'Form': 0.33\n\",
      \"Similarity between 'To' and 'Iri': 0.0\n\",
      \"Similarity between 'Within' and 'LegalRuleML': 0.0\n\",
      \"Similarity between 'Within' and 'PrescriptiveStatement': 0.3\n\",
      \"Similarity between 'Within' and 'Rule': 0.0\n\",
      \"Similarity between 'Within' and 'if': 0.25\n\",
      \"Similarity between 'Within' and 'Fact': 0.2\n\",
      \"Similarity between 'Within' and 'Rel': 0.0\n\",
      \"Similarity between 'Within' and 'then': 0.6\n\",
      \"Similarity between 'Within' and 'Obligation': 0.5\n\",
      \"Similarity between 'Within' and 'Action': 0.5\n\",
      \"Similarity between 'Within' and 'IntimateAuthority': 0.35\n\",
      \"Similarity between 'Within' and 'Timing': 0.5\n\",
      \"Similarity between 'Within' and 'TimeSpan': 0.29\n\",
      \"Similarity between 'Within' and 'Reporting': 0.4\n\",
      \"Similarity between 'Within' and 'Form': 0.0\n\",
      \"Similarity between 'Within' and 'Iri': 0.22\n\",
      \"Similarity between 'Reporting' and 'LegalRuleML': 0.2\n\",
      \"Similarity between 'Reporting' and 'PrescriptiveStatement': 0.33\n\",
      \"Similarity between 'Reporting' and 'Rule': 0.31\n\",
      \"Similarity between 'Reporting' and 'if': 0.18\n\",
      \"Similarity between 'Reporting' and 'Fact': 0.15\n\",
      \"Similarity between 'Reporting' and 'Rel': 0.33\n\",
      \"Similarity between 'Reporting' and 'then': 0.31\n\",
      \"Similarity between 'Reporting' and 'Obligation': 0.32\n\",
      \"Similarity between 'Reporting' and 'Action': 0.4\n\",
      \"Similarity between 'Reporting' and 'IntimateAuthority': 0.31\n\",
      \"Similarity between 'Reporting' and 'Timing': 0.4\n\",
      \"Similarity between 'Reporting' and 'TimeSpan': 0.35\n\",
      \"Similarity between 'Reporting' and 'Reporting': 1.0\n\",
      \"Similarity between 'Reporting' and 'Form': 0.31\n\",
      \"Similarity between 'Reporting' and 'Iri': 0.33\n\",
      \"Similarity between 'Form' and 'LegalRuleML': 0.0\n\",
      \"Similarity between 'Form' and 'PrescriptiveStatement': 0.16\n\",
      \"Similarity between 'Form' and 'Rule': 0.0\n\",
      \"Similarity between 'Form' and 'if': 0.0\n\",
      \"Similarity between 'Form' and 'Fact': 0.25\n\",
      \"Similarity between 'Form' and 'Rel': 0.0\n\",
      \"Similarity between 'Form' and 'then': 0.0\n\",
      \"Similarity between 'Form' and 'Obligation': 0.14\n\",
      \"Similarity between 'Form' and 'Action': 0.2\n\",
      \"Similarity between 'Form' and 'IntimateAuthority': 0.19\n\",
      \"Similarity between 'Form' and 'Timing': 0.2\n\",
      \"Similarity between 'Form' and 'TimeSpan': 0.17\n\",
      \"Similarity between 'Form' and 'Reporting': 0.31\n\",
      \"Similarity between 'Form' and 'Form': 1.0\n\",
      \"Similarity between 'Form' and 'Iri': 0.29\n\"
     ]
    }
   ],
   \"source\": [
    \"compare_dicts(dict1_cleaned, dict2_cleaned)\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 52,
   \"id\": \"ab7064b6-8205-4fa0-a16b-04dae9cef39c\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"data\": {
      \"text/plain\": [
       \"{'LegalRuleML': [],\n\",
       \" 'PrescriptiveStatement': ('id', 'AccidentReporting'),\n\",
       \" 'Rule': ('id', 'AccidentReportingRule'),\n\",
       \" 'if': [],\n\",
       \" 'Fact': [],\n\",
       \" 'Rel': ('iri', '#majorAccident'),\n\",
       \" 'then': [],\n\",
       \" 'Obligation': [],\n\",
       \" 'Action': [],\n\",
       \" 'Intimation': [],\n\",
       \" 'To': ('iri', '#prescribedAuthority'),\n\",
       \" 'Within': ('TimeUnit', 'days'),\n\",
       \" 'Reporting': [],\n\",
       \" 'Form': ('iri', '#FormI')}\"
      ]
     },
     \"execution_count\": 52,
     \"metadata\": {},
     \"output_type\": \"execute_result\"
    }
   ],
   \"source\": [
    \"dict1_cleaned\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"id\": \"d9629648-cfa0-4c32-9360-e79fff5418d0\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 62,
   \"id\": \"26e6eb74-4d5d-45df-97da-fe97b6f90ef3\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"name\": \"stdout\",
     \"output_type\": \"stream\",
     \"text\": [
      \"Similarity between key 'LegalRuleML' and key 'LegalRuleML': 1.0\n\",
      \"Similarity between key 'LegalRuleML' and key 'PrescriptiveStatement': 0.19\n\",
      \"Similarity between key 'LegalRuleML' and value 'id': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value 'AccidentReporting': 0.21\n\",
      \"Similarity between key 'LegalRuleML' and key 'Rule': 0.53\n\",
      \"Similarity between key 'LegalRuleML' and value 'id': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value 'AccidentReportingRule': 0.38\n\",
      \"Similarity between key 'LegalRuleML' and key 'if': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and key 'Fact': 0.13\n\",
      \"Similarity between key 'LegalRuleML' and key 'Rel': 0.29\n\",
      \"Similarity between key 'LegalRuleML' and value 'iri': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value '#majorAccident': 0.16\n\",
      \"Similarity between key 'LegalRuleML' and key 'then': 0.13\n\",
      \"Similarity between key 'LegalRuleML' and key 'Obligation': 0.19\n\",
      \"Similarity between key 'LegalRuleML' and key 'Action': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and key 'IntimateAuthority': 0.14\n\",
      \"Similarity between key 'LegalRuleML' and value 'iri': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value '#prescribedAuthority': 0.13\n\",
      \"Similarity between key 'LegalRuleML' and key 'Timing': 0.12\n\",
      \"Similarity between key 'LegalRuleML' and key 'TimeSpan': 0.21\n\",
      \"Similarity between key 'LegalRuleML' and value 'start': 0.12\n\",
      \"Similarity between key 'LegalRuleML' and value 'within24hours': 0.08\n\",
      \"Similarity between key 'LegalRuleML' and key 'Reporting': 0.2\n\",
      \"Similarity between key 'LegalRuleML' and key 'Form': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and key 'Iri': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value 'iri': 0.0\n\",
      \"Similarity between key 'LegalRuleML' and value '#FormI': 0.0\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'LegalRuleML': 0.19\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'PrescriptiveStatement': 1.0\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'id': 0.09\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'AccidentReporting': 0.32\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Rule': 0.08\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'id': 0.09\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'AccidentReportingRule': 0.29\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'if': 0.09\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Fact': 0.16\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Rel': 0.08\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'iri': 0.17\n\",
      \"Similarity between key 'PrescriptiveStatement' and value '#majorAccident': 0.34\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'then': 0.24\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Obligation': 0.26\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Action': 0.3\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'IntimateAuthority': 0.32\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'iri': 0.17\n\",
      \"Similarity between key 'PrescriptiveStatement' and value '#prescribedAuthority': 0.44\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Timing': 0.22\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'TimeSpan': 0.34\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'start': 0.31\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'within24hours': 0.24\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Reporting': 0.33\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Form': 0.16\n\",
      \"Similarity between key 'PrescriptiveStatement' and key 'Iri': 0.17\n\",
      \"Similarity between key 'PrescriptiveStatement' and value 'iri': 0.17\n\",
      \"Similarity between key 'PrescriptiveStatement' and value '#FormI': 0.15\n\",
      \"Similarity between value 'id' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'LegalRuleML': 0.21\n\",
      \"Similarity between value 'id' and key 'PrescriptiveStatement': 0.09\n\",
      \"Similarity between value 'AccidentReporting' and key 'PrescriptiveStatement': 0.32\n\",
      \"Similarity between value 'id' and key 'Rule': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'Rule': 0.19\n\",
      \"Similarity between value 'id' and key 'if': 0.5\n\",
      \"Similarity between value 'AccidentReporting' and key 'if': 0.11\n\",
      \"Similarity between value 'id' and key 'Fact': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'Fact': 0.19\n\",
      \"Similarity between value 'id' and key 'Rel': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'Rel': 0.2\n\",
      \"Similarity between value 'id' and key 'then': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'then': 0.29\n\",
      \"Similarity between value 'id' and key 'Obligation': 0.17\n\",
      \"Similarity between value 'AccidentReporting' and key 'Obligation': 0.3\n\",
      \"Similarity between value 'id' and key 'Action': 0.25\n\",
      \"Similarity between value 'AccidentReporting' and key 'Action': 0.43\n\",
      \"Similarity between value 'id' and key 'IntimateAuthority': 0.11\n\",
      \"Similarity between value 'AccidentReporting' and key 'IntimateAuthority': 0.35\n\",
      \"Similarity between value 'id' and key 'Timing': 0.25\n\",
      \"Similarity between value 'AccidentReporting' and key 'Timing': 0.35\n\",
      \"Similarity between value 'id' and key 'TimeSpan': 0.2\n\",
      \"Similarity between value 'AccidentReporting' and key 'TimeSpan': 0.32\n\",
      \"Similarity between value 'id' and key 'Reporting': 0.18\n\",
      \"Similarity between value 'AccidentReporting' and key 'Reporting': 0.69\n\",
      \"Similarity between value 'id' and key 'Form': 0.0\n\",
      \"Similarity between value 'AccidentReporting' and key 'Form': 0.19\n\",
      \"Similarity between value 'id' and key 'Iri': 0.4\n\",
      \"Similarity between value 'AccidentReporting' and key 'Iri': 0.2\n\",
      \"Similarity between key 'Rule' and key 'LegalRuleML': 0.53\n\",
      \"Similarity between key 'Rule' and key 'PrescriptiveStatement': 0.08\n\",
      \"Similarity between key 'Rule' and value 'id': 0.0\n\",
      \"Similarity between key 'Rule' and value 'AccidentReporting': 0.19\n\",
      \"Similarity between key 'Rule' and key 'Rule': 1.0\n\",
      \"Similarity between key 'Rule' and value 'id': 0.0\n\",
      \"Similarity between key 'Rule' and value 'AccidentReportingRule': 0.32\n\",
      \"Similarity between key 'Rule' and key 'if': 0.0\n\",
      \"Similarity between key 'Rule' and key 'Fact': 0.0\n\",
      \"Similarity between key 'Rule' and key 'Rel': 0.57\n\",
      \"Similarity between key 'Rule' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rule' and value '#majorAccident': 0.11\n\",
      \"Similarity between key 'Rule' and key 'then': 0.25\n\",
      \"Similarity between key 'Rule' and key 'Obligation': 0.14\n\",
      \"Similarity between key 'Rule' and key 'Action': 0.0\n\",
      \"Similarity between key 'Rule' and key 'IntimateAuthority': 0.1\n\",
      \"Similarity between key 'Rule' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rule' and value '#prescribedAuthority': 0.08\n\",
      \"Similarity between key 'Rule' and key 'Timing': 0.0\n\",
      \"Similarity between key 'Rule' and key 'TimeSpan': 0.17\n\",
      \"Similarity between key 'Rule' and value 'start': 0.0\n\",
      \"Similarity between key 'Rule' and value 'within24hours': 0.12\n\",
      \"Similarity between key 'Rule' and key 'Reporting': 0.31\n\",
      \"Similarity between key 'Rule' and key 'Form': 0.0\n\",
      \"Similarity between key 'Rule' and key 'Iri': 0.0\n\",
      \"Similarity between key 'Rule' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rule' and value '#FormI': 0.0\n\",
      \"Similarity between value 'id' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'LegalRuleML': 0.38\n\",
      \"Similarity between value 'id' and key 'PrescriptiveStatement': 0.09\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'PrescriptiveStatement': 0.29\n\",
      \"Similarity between value 'id' and key 'Rule': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Rule': 0.32\n\",
      \"Similarity between value 'id' and key 'if': 0.5\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'if': 0.09\n\",
      \"Similarity between value 'id' and key 'Fact': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Fact': 0.16\n\",
      \"Similarity between value 'id' and key 'Rel': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Rel': 0.25\n\",
      \"Similarity between value 'id' and key 'then': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'then': 0.24\n\",
      \"Similarity between value 'id' and key 'Obligation': 0.17\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Obligation': 0.26\n\",
      \"Similarity between value 'id' and key 'Action': 0.25\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Action': 0.37\n\",
      \"Similarity between value 'id' and key 'IntimateAuthority': 0.11\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'IntimateAuthority': 0.32\n\",
      \"Similarity between value 'id' and key 'Timing': 0.25\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Timing': 0.3\n\",
      \"Similarity between value 'id' and key 'TimeSpan': 0.2\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'TimeSpan': 0.28\n\",
      \"Similarity between value 'id' and key 'Reporting': 0.18\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Reporting': 0.6\n\",
      \"Similarity between value 'id' and key 'Form': 0.0\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Form': 0.16\n\",
      \"Similarity between value 'id' and key 'Iri': 0.4\n\",
      \"Similarity between value 'AccidentReportingRule' and key 'Iri': 0.17\n\",
      \"Similarity between key 'if' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between key 'if' and key 'PrescriptiveStatement': 0.09\n\",
      \"Similarity between key 'if' and value 'id': 0.5\n\",
      \"Similarity between key 'if' and value 'AccidentReporting': 0.11\n\",
      \"Similarity between key 'if' and key 'Rule': 0.0\n\",
      \"Similarity between key 'if' and value 'id': 0.5\n\",
      \"Similarity between key 'if' and value 'AccidentReportingRule': 0.09\n\",
      \"Similarity between key 'if' and key 'if': 1.0\n\",
      \"Similarity between key 'if' and key 'Fact': 0.0\n\",
      \"Similarity between key 'if' and key 'Rel': 0.0\n\",
      \"Similarity between key 'if' and value 'iri': 0.4\n\",
      \"Similarity between key 'if' and value '#majorAccident': 0.12\n\",
      \"Similarity between key 'if' and key 'then': 0.0\n\",
      \"Similarity between key 'if' and key 'Obligation': 0.17\n\",
      \"Similarity between key 'if' and key 'Action': 0.25\n\",
      \"Similarity between key 'if' and key 'IntimateAuthority': 0.11\n\",
      \"Similarity between key 'if' and value 'iri': 0.4\n\",
      \"Similarity between key 'if' and value '#prescribedAuthority': 0.09\n\",
      \"Similarity between key 'if' and key 'Timing': 0.25\n\",
      \"Similarity between key 'if' and key 'TimeSpan': 0.2\n\",
      \"Similarity between key 'if' and value 'start': 0.0\n\",
      \"Similarity between key 'if' and value 'within24hours': 0.13\n\",
      \"Similarity between key 'if' and key 'Reporting': 0.18\n\",
      \"Similarity between key 'if' and key 'Form': 0.0\n\",
      \"Similarity between key 'if' and key 'Iri': 0.4\n\",
      \"Similarity between key 'if' and value 'iri': 0.4\n\",
      \"Similarity between key 'if' and value '#FormI': 0.0\n\",
      \"Similarity between key 'Fact' and key 'LegalRuleML': 0.13\n\",
      \"Similarity between key 'Fact' and key 'PrescriptiveStatement': 0.16\n\",
      \"Similarity between key 'Fact' and value 'id': 0.0\n\",
      \"Similarity between key 'Fact' and value 'AccidentReporting': 0.19\n\",
      \"Similarity between key 'Fact' and key 'Rule': 0.0\n\",
      \"Similarity between key 'Fact' and value 'id': 0.0\n\",
      \"Similarity between key 'Fact' and value 'AccidentReportingRule': 0.16\n\",
      \"Similarity between key 'Fact' and key 'if': 0.0\n\",
      \"Similarity between key 'Fact' and key 'Fact': 1.0\n\",
      \"Similarity between key 'Fact' and key 'Rel': 0.0\n\",
      \"Similarity between key 'Fact' and value 'iri': 0.0\n\",
      \"Similarity between key 'Fact' and value '#majorAccident': 0.33\n\",
      \"Similarity between key 'Fact' and key 'then': 0.25\n\",
      \"Similarity between key 'Fact' and key 'Obligation': 0.29\n\",
      \"Similarity between key 'Fact' and key 'Action': 0.4\n\",
      \"Similarity between key 'Fact' and key 'IntimateAuthority': 0.19\n\",
      \"Similarity between key 'Fact' and value 'iri': 0.0\n\",
      \"Similarity between key 'Fact' and value '#prescribedAuthority': 0.17\n\",
      \"Similarity between key 'Fact' and key 'Timing': 0.0\n\",
      \"Similarity between key 'Fact' and key 'TimeSpan': 0.17\n\",
      \"Similarity between key 'Fact' and value 'start': 0.44\n\",
      \"Similarity between key 'Fact' and value 'within24hours': 0.12\n\",
      \"Similarity between key 'Fact' and key 'Reporting': 0.15\n\",
      \"Similarity between key 'Fact' and key 'Form': 0.25\n\",
      \"Similarity between key 'Fact' and key 'Iri': 0.0\n\",
      \"Similarity between key 'Fact' and value 'iri': 0.0\n\",
      \"Similarity between key 'Fact' and value '#FormI': 0.2\n\",
      \"Similarity between key 'Rel' and key 'LegalRuleML': 0.29\n\",
      \"Similarity between key 'Rel' and key 'PrescriptiveStatement': 0.08\n\",
      \"Similarity between key 'Rel' and value 'id': 0.0\n\",
      \"Similarity between key 'Rel' and value 'AccidentReporting': 0.2\n\",
      \"Similarity between key 'Rel' and key 'Rule': 0.57\n\",
      \"Similarity between key 'Rel' and value 'id': 0.0\n\",
      \"Similarity between key 'Rel' and value 'AccidentReportingRule': 0.25\n\",
      \"Similarity between key 'Rel' and key 'if': 0.0\n\",
      \"Similarity between key 'Rel' and key 'Fact': 0.0\n\",
      \"Similarity between key 'Rel' and key 'Rel': 1.0\n\",
      \"Similarity between key 'Rel' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rel' and value '#majorAccident': 0.12\n\",
      \"Similarity between key 'Rel' and key 'then': 0.29\n\",
      \"Similarity between key 'Rel' and key 'Obligation': 0.15\n\",
      \"Similarity between key 'Rel' and key 'Action': 0.0\n\",
      \"Similarity between key 'Rel' and key 'IntimateAuthority': 0.1\n\",
      \"Similarity between key 'Rel' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rel' and value '#prescribedAuthority': 0.09\n\",
      \"Similarity between key 'Rel' and key 'Timing': 0.0\n\",
      \"Similarity between key 'Rel' and key 'TimeSpan': 0.18\n\",
      \"Similarity between key 'Rel' and value 'start': 0.0\n\",
      \"Similarity between key 'Rel' and value 'within24hours': 0.0\n\",
      \"Similarity between key 'Rel' and key 'Reporting': 0.33\n\",
      \"Similarity between key 'Rel' and key 'Form': 0.0\n\",
      \"Similarity between key 'Rel' and key 'Iri': 0.0\n\",
      \"Similarity between key 'Rel' and value 'iri': 0.0\n\",
      \"Similarity between key 'Rel' and value '#FormI': 0.0\n\",
      \"Similarity between value 'iri' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value '#majorAccident' and key 'LegalRuleML': 0.16\n\",
      \"Similarity between value 'iri' and key 'PrescriptiveStatement': 0.17\n\",
      \"Similarity between value '#majorAccident' and key 'PrescriptiveStatement': 0.34\n\",
      \"Similarity between value 'iri' and key 'Rule': 0.0\n\",
      \"Similarity between value '#majorAccident' and key 'Rule': 0.11\n\",
      \"Similarity between value 'iri' and key 'if': 0.4\n\",
      \"Similarity between value '#majorAccident' and key 'if': 0.12\n\",
      \"Similarity between value 'iri' and key 'Fact': 0.0\n\",
      \"Similarity between value '#majorAccident' and key 'Fact': 0.33\n\",
      \"Similarity between value 'iri' and key 'Rel': 0.0\n\",
      \"Similarity between value '#majorAccident' and key 'Rel': 0.12\n\",
      \"Similarity between value 'iri' and key 'then': 0.0\n\",
      \"Similarity between value '#majorAccident' and key 'then': 0.22\n\",
      \"Similarity between value 'iri' and key 'Obligation': 0.31\n\",
      \"Similarity between value '#majorAccident' and key 'Obligation': 0.25\n\",
      \"Similarity between value 'iri' and key 'Action': 0.22\n\",
      \"Similarity between value '#majorAccident' and key 'Action': 0.4\n\",
      \"Similarity between value 'iri' and key 'IntimateAuthority': 0.3\n\",
      \"Similarity between value '#majorAccident' and key 'IntimateAuthority': 0.39\n\",
      \"Similarity between value 'iri' and key 'Timing': 0.44\n\",
      \"Similarity between value '#majorAccident' and key 'Timing': 0.3\n\",
      \"Similarity between value 'iri' and key 'TimeSpan': 0.18\n\",
      \"Similarity between value '#majorAccident' and key 'TimeSpan': 0.27\n\",
      \"Similarity between value 'iri' and key 'Reporting': 0.33\n\",
      \"Similarity between value '#majorAccident' and key 'Reporting': 0.35\n\",
      \"Similarity between value 'iri' and key 'Form': 0.29\n\",
      \"Similarity between value '#majorAccident' and key 'Form': 0.22\n\",
      \"Similarity between value 'iri' and key 'Iri': 0.67\n\",
      \"Similarity between value '#majorAccident' and key 'Iri': 0.24\n\",
      \"Similarity between key 'then' and key 'LegalRuleML': 0.13\n\",
      \"Similarity between key 'then' and key 'PrescriptiveStatement': 0.24\n\",
      \"Similarity between key 'then' and value 'id': 0.0\n\",
      \"Similarity between key 'then' and value 'AccidentReporting': 0.29\n\",
      \"Similarity between key 'then' and key 'Rule': 0.25\n\",
      \"Similarity between key 'then' and value 'id': 0.0\n\",
      \"Similarity between key 'then' and value 'AccidentReportingRule': 0.24\n\",
      \"Similarity between key 'then' and key 'if': 0.0\n\",
      \"Similarity between key 'then' and key 'Fact': 0.25\n\",
      \"Similarity between key 'then' and key 'Rel': 0.29\n\",
      \"Similarity between key 'then' and value 'iri': 0.0\n\",
      \"Similarity between key 'then' and value '#majorAccident': 0.22\n\",
      \"Similarity between key 'then' and key 'then': 1.0\n\",
      \"Similarity between key 'then' and key 'Obligation': 0.29\n\",
      \"Similarity between key 'then' and key 'Action': 0.4\n\",
      \"Similarity between key 'then' and key 'IntimateAuthority': 0.19\n\",
      \"Similarity between key 'then' and value 'iri': 0.0\n\",
      \"Similarity between key 'then' and value '#prescribedAuthority': 0.17\n\",
      \"Similarity between key 'then' and key 'Timing': 0.2\n\",
      \"Similarity between key 'then' and key 'TimeSpan': 0.33\n\",
      \"Similarity between key 'then' and value 'start': 0.22\n\",
      \"Similarity between key 'then' and value 'within24hours': 0.35\n\",
      \"Similarity between key 'then' and key 'Reporting': 0.31\n\",
      \"Similarity between key 'then' and key 'Form': 0.0\n\",
      \"Similarity between key 'then' and key 'Iri': 0.0\n\",
      \"Similarity between key 'then' and value 'iri': 0.0\n\",
      \"Similarity between key 'then' and value '#FormI': 0.0\n\",
      \"Similarity between key 'Obligation' and key 'LegalRuleML': 0.19\n\",
      \"Similarity between key 'Obligation' and key 'PrescriptiveStatement': 0.26\n\",
      \"Similarity between key 'Obligation' and value 'id': 0.17\n\",
      \"Similarity between key 'Obligation' and value 'AccidentReporting': 0.3\n\",
      \"Similarity between key 'Obligation' and key 'Rule': 0.14\n\",
      \"Similarity between key 'Obligation' and value 'id': 0.17\n\",
      \"Similarity between key 'Obligation' and value 'AccidentReportingRule': 0.26\n\",
      \"Similarity between key 'Obligation' and key 'if': 0.17\n\",
      \"Similarity between key 'Obligation' and key 'Fact': 0.29\n\",
      \"Similarity between key 'Obligation' and key 'Rel': 0.15\n\",
      \"Similarity between key 'Obligation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Obligation' and value '#majorAccident': 0.25\n\",
      \"Similarity between key 'Obligation' and key 'then': 0.29\n\",
      \"Similarity between key 'Obligation' and key 'Obligation': 1.0\n\",
      \"Similarity between key 'Obligation' and key 'Action': 0.5\n\",
      \"Similarity between key 'Obligation' and key 'IntimateAuthority': 0.3\n\",
      \"Similarity between key 'Obligation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Obligation' and value '#prescribedAuthority': 0.2\n\",
      \"Similarity between key 'Obligation' and key 'Timing': 0.38\n\",
      \"Similarity between key 'Obligation' and key 'TimeSpan': 0.33\n\",
      \"Similarity between key 'Obligation' and value 'start': 0.27\n\",
      \"Similarity between key 'Obligation' and value 'within24hours': 0.35\n\",
      \"Similarity between key 'Obligation' and key 'Reporting': 0.32\n\",
      \"Similarity between key 'Obligation' and key 'Form': 0.14\n\",
      \"Similarity between key 'Obligation' and key 'Iri': 0.15\n\",
      \"Similarity between key 'Obligation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Obligation' and value '#FormI': 0.12\n\",
      \"Similarity between key 'Action' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between key 'Action' and key 'PrescriptiveStatement': 0.3\n\",
      \"Similarity between key 'Action' and value 'id': 0.25\n\",
      \"Similarity between key 'Action' and value 'AccidentReporting': 0.43\n\",
      \"Similarity between key 'Action' and key 'Rule': 0.0\n\",
      \"Similarity between key 'Action' and value 'id': 0.25\n\",
      \"Similarity between key 'Action' and value 'AccidentReportingRule': 0.37\n\",
      \"Similarity between key 'Action' and key 'if': 0.25\n\",
      \"Similarity between key 'Action' and key 'Fact': 0.4\n\",
      \"Similarity between key 'Action' and key 'Rel': 0.0\n\",
      \"Similarity between key 'Action' and value 'iri': 0.22\n\",
      \"Similarity between key 'Action' and value '#majorAccident': 0.4\n\",
      \"Similarity between key 'Action' and key 'then': 0.4\n\",
      \"Similarity between key 'Action' and key 'Obligation': 0.5\n\",
      \"Similarity between key 'Action' and key 'Action': 1.0\n\",
      \"Similarity between key 'Action' and key 'IntimateAuthority': 0.26\n\",
      \"Similarity between key 'Action' and value 'iri': 0.22\n\",
      \"Similarity between key 'Action' and value '#prescribedAuthority': 0.23\n\",
      \"Similarity between key 'Action' and key 'Timing': 0.33\n\",
      \"Similarity between key 'Action' and key 'TimeSpan': 0.29\n\",
      \"Similarity between key 'Action' and value 'start': 0.18\n\",
      \"Similarity between key 'Action' and value 'within24hours': 0.32\n\",
      \"Similarity between key 'Action' and key 'Reporting': 0.4\n\",
      \"Similarity between key 'Action' and key 'Form': 0.2\n\",
      \"Similarity between key 'Action' and key 'Iri': 0.22\n\",
      \"Similarity between key 'Action' and value 'iri': 0.22\n\",
      \"Similarity between key 'Action' and value '#FormI': 0.17\n\",
      \"Similarity between key 'Intimation' and key 'LegalRuleML': 0.1\n\",
      \"Similarity between key 'Intimation' and key 'PrescriptiveStatement': 0.32\n\",
      \"Similarity between key 'Intimation' and value 'id': 0.17\n\",
      \"Similarity between key 'Intimation' and value 'AccidentReporting': 0.37\n\",
      \"Similarity between key 'Intimation' and key 'Rule': 0.0\n\",
      \"Similarity between key 'Intimation' and value 'id': 0.17\n\",
      \"Similarity between key 'Intimation' and value 'AccidentReportingRule': 0.32\n\",
      \"Similarity between key 'Intimation' and key 'if': 0.17\n\",
      \"Similarity between key 'Intimation' and key 'Fact': 0.29\n\",
      \"Similarity between key 'Intimation' and key 'Rel': 0.0\n\",
      \"Similarity between key 'Intimation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Intimation' and value '#majorAccident': 0.33\n\",
      \"Similarity between key 'Intimation' and key 'then': 0.29\n\",
      \"Similarity between key 'Intimation' and key 'Obligation': 0.6\n\",
      \"Similarity between key 'Intimation' and key 'Action': 0.5\n\",
      \"Similarity between key 'Intimation' and key 'IntimateAuthority': 0.59\n\",
      \"Similarity between key 'Intimation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Intimation' and value '#prescribedAuthority': 0.2\n\",
      \"Similarity between key 'Intimation' and key 'Timing': 0.5\n\",
      \"Similarity between key 'Intimation' and key 'TimeSpan': 0.44\n\",
      \"Similarity between key 'Intimation' and value 'start': 0.4\n\",
      \"Similarity between key 'Intimation' and value 'within24hours': 0.35\n\",
      \"Similarity between key 'Intimation' and key 'Reporting': 0.32\n\",
      \"Similarity between key 'Intimation' and key 'Form': 0.14\n\",
      \"Similarity between key 'Intimation' and key 'Iri': 0.31\n\",
      \"Similarity between key 'Intimation' and value 'iri': 0.31\n\",
      \"Similarity between key 'Intimation' and value '#FormI': 0.12\n\",
      \"Similarity between key 'To' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between key 'To' and key 'PrescriptiveStatement': 0.0\n\",
      \"Similarity between key 'To' and value 'id': 0.0\n\",
      \"Similarity between key 'To' and value 'AccidentReporting': 0.11\n\",
      \"Similarity between key 'To' and key 'Rule': 0.0\n\",
      \"Similarity between key 'To' and value 'id': 0.0\n\",
      \"Similarity between key 'To' and value 'AccidentReportingRule': 0.09\n\",
      \"Similarity between key 'To' and key 'if': 0.0\n\",
      \"Similarity between key 'To' and key 'Fact': 0.0\n\",
      \"Similarity between key 'To' and key 'Rel': 0.0\n\",
      \"Similarity between key 'To' and value 'iri': 0.0\n\",
      \"Similarity between key 'To' and value '#majorAccident': 0.12\n\",
      \"Similarity between key 'To' and key 'then': 0.0\n\",
      \"Similarity between key 'To' and key 'Obligation': 0.17\n\",
      \"Similarity between key 'To' and key 'Action': 0.25\n\",
      \"Similarity between key 'To' and key 'IntimateAuthority': 0.11\n\",
      \"Similarity between key 'To' and value 'iri': 0.0\n\",
      \"Similarity between key 'To' and value '#prescribedAuthority': 0.09\n\",
      \"Similarity between key 'To' and key 'Timing': 0.25\n\",
      \"Similarity between key 'To' and key 'TimeSpan': 0.2\n\",
      \"Similarity between key 'To' and value 'start': 0.0\n\",
      \"Similarity between key 'To' and value 'within24hours': 0.13\n\",
      \"Similarity between key 'To' and key 'Reporting': 0.18\n\",
      \"Similarity between key 'To' and key 'Form': 0.33\n\",
      \"Similarity between key 'To' and key 'Iri': 0.0\n\",
      \"Similarity between key 'To' and value 'iri': 0.0\n\",
      \"Similarity between key 'To' and value '#FormI': 0.25\n\",
      \"Similarity between value 'iri' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value '#prescribedAuthority' and key 'LegalRuleML': 0.13\n\",
      \"Similarity between value 'iri' and key 'PrescriptiveStatement': 0.17\n\",
      \"Similarity between value '#prescribedAuthority' and key 'PrescriptiveStatement': 0.44\n\",
      \"Similarity between value 'iri' and key 'Rule': 0.0\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Rule': 0.08\n\",
      \"Similarity between value 'iri' and key 'if': 0.4\n\",
      \"Similarity between value '#prescribedAuthority' and key 'if': 0.09\n\",
      \"Similarity between value 'iri' and key 'Fact': 0.0\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Fact': 0.17\n\",
      \"Similarity between value 'iri' and key 'Rel': 0.0\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Rel': 0.09\n\",
      \"Similarity between value 'iri' and key 'then': 0.0\n\",
      \"Similarity between value '#prescribedAuthority' and key 'then': 0.17\n\",
      \"Similarity between value 'iri' and key 'Obligation': 0.31\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Obligation': 0.2\n\",
      \"Similarity between value 'iri' and key 'Action': 0.22\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Action': 0.23\n\",
      \"Similarity between value 'iri' and key 'IntimateAuthority': 0.3\n\",
      \"Similarity between value '#prescribedAuthority' and key 'IntimateAuthority': 0.59\n\",
      \"Similarity between value 'iri' and key 'Timing': 0.44\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Timing': 0.15\n\",
      \"Similarity between value 'iri' and key 'TimeSpan': 0.18\n\",
      \"Similarity between value '#prescribedAuthority' and key 'TimeSpan': 0.14\n\",
      \"Similarity between value 'iri' and key 'Reporting': 0.33\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Reporting': 0.28\n\",
      \"Similarity between value 'iri' and key 'Form': 0.29\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Form': 0.17\n\",
      \"Similarity between value 'iri' and key 'Iri': 0.67\n\",
      \"Similarity between value '#prescribedAuthority' and key 'Iri': 0.17\n\",
      \"Similarity between key 'Within' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between key 'Within' and key 'PrescriptiveStatement': 0.3\n\",
      \"Similarity between key 'Within' and value 'id': 0.25\n\",
      \"Similarity between key 'Within' and value 'AccidentReporting': 0.35\n\",
      \"Similarity between key 'Within' and key 'Rule': 0.0\n\",
      \"Similarity between key 'Within' and value 'id': 0.25\n\",
      \"Similarity between key 'Within' and value 'AccidentReportingRule': 0.3\n\",
      \"Similarity between key 'Within' and key 'if': 0.25\n\",
      \"Similarity between key 'Within' and key 'Fact': 0.2\n\",
      \"Similarity between key 'Within' and key 'Rel': 0.0\n\",
      \"Similarity between key 'Within' and value 'iri': 0.44\n\",
      \"Similarity between key 'Within' and value '#majorAccident': 0.2\n\",
      \"Similarity between key 'Within' and key 'then': 0.6\n\",
      \"Similarity between key 'Within' and key 'Obligation': 0.5\n\",
      \"Similarity between key 'Within' and key 'Action': 0.5\n\",
      \"Similarity between key 'Within' and key 'IntimateAuthority': 0.35\n\",
      \"Similarity between key 'Within' and value 'iri': 0.44\n\",
      \"Similarity between key 'Within' and value '#prescribedAuthority': 0.31\n\",
      \"Similarity between key 'Within' and key 'Timing': 0.5\n\",
      \"Similarity between key 'Within' and key 'TimeSpan': 0.29\n\",
      \"Similarity between key 'Within' and value 'start': 0.18\n\",
      \"Similarity between key 'Within' and value 'within24hours': 0.53\n\",
      \"Similarity between key 'Within' and key 'Reporting': 0.4\n\",
      \"Similarity between key 'Within' and key 'Form': 0.0\n\",
      \"Similarity between key 'Within' and key 'Iri': 0.22\n\",
      \"Similarity between key 'Within' and value 'iri': 0.44\n\",
      \"Similarity between key 'Within' and value '#FormI': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'LegalRuleML': 0.11\n\",
      \"Similarity between value 'days' and key 'LegalRuleML': 0.13\n\",
      \"Similarity between value 'TimeUnit' and key 'PrescriptiveStatement': 0.34\n\",
      \"Similarity between value 'days' and key 'PrescriptiveStatement': 0.08\n\",
      \"Similarity between value 'TimeUnit' and key 'Rule': 0.17\n\",
      \"Similarity between value 'days' and key 'Rule': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'if': 0.2\n\",
      \"Similarity between value 'days' and key 'if': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'Fact': 0.17\n\",
      \"Similarity between value 'days' and key 'Fact': 0.25\n\",
      \"Similarity between value 'TimeUnit' and key 'Rel': 0.18\n\",
      \"Similarity between value 'days' and key 'Rel': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'then': 0.33\n\",
      \"Similarity between value 'days' and key 'then': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'Obligation': 0.22\n\",
      \"Similarity between value 'days' and key 'Obligation': 0.14\n\",
      \"Similarity between value 'TimeUnit' and key 'Action': 0.29\n\",
      \"Similarity between value 'days' and key 'Action': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'IntimateAuthority': 0.4\n\",
      \"Similarity between value 'days' and key 'IntimateAuthority': 0.19\n\",
      \"Similarity between value 'TimeUnit' and key 'Timing': 0.57\n\",
      \"Similarity between value 'days' and key 'Timing': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'TimeSpan': 0.62\n\",
      \"Similarity between value 'days' and key 'TimeSpan': 0.17\n\",
      \"Similarity between value 'TimeUnit' and key 'Reporting': 0.24\n\",
      \"Similarity between value 'days' and key 'Reporting': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'Form': 0.17\n\",
      \"Similarity between value 'days' and key 'Form': 0.0\n\",
      \"Similarity between value 'TimeUnit' and key 'Iri': 0.18\n\",
      \"Similarity between value 'days' and key 'Iri': 0.0\n\",
      \"Similarity between key 'Reporting' and key 'LegalRuleML': 0.2\n\",
      \"Similarity between key 'Reporting' and key 'PrescriptiveStatement': 0.33\n\",
      \"Similarity between key 'Reporting' and value 'id': 0.18\n\",
      \"Similarity between key 'Reporting' and value 'AccidentReporting': 0.69\n\",
      \"Similarity between key 'Reporting' and key 'Rule': 0.31\n\",
      \"Similarity between key 'Reporting' and value 'id': 0.18\n\",
      \"Similarity between key 'Reporting' and value 'AccidentReportingRule': 0.6\n\",
      \"Similarity between key 'Reporting' and key 'if': 0.18\n\",
      \"Similarity between key 'Reporting' and key 'Fact': 0.15\n\",
      \"Similarity between key 'Reporting' and key 'Rel': 0.33\n\",
      \"Similarity between key 'Reporting' and value 'iri': 0.33\n\",
      \"Similarity between key 'Reporting' and value '#majorAccident': 0.35\n\",
      \"Similarity between key 'Reporting' and key 'then': 0.31\n\",
      \"Similarity between key 'Reporting' and key 'Obligation': 0.32\n\",
      \"Similarity between key 'Reporting' and key 'Action': 0.4\n\",
      \"Similarity between key 'Reporting' and key 'IntimateAuthority': 0.31\n\",
      \"Similarity between key 'Reporting' and value 'iri': 0.33\n\",
      \"Similarity between key 'Reporting' and value '#prescribedAuthority': 0.28\n\",
      \"Similarity between key 'Reporting' and key 'Timing': 0.4\n\",
      \"Similarity between key 'Reporting' and key 'TimeSpan': 0.35\n\",
      \"Similarity between key 'Reporting' and value 'start': 0.29\n\",
      \"Similarity between key 'Reporting' and value 'within24hours': 0.27\n\",
      \"Similarity between key 'Reporting' and key 'Reporting': 1.0\n\",
      \"Similarity between key 'Reporting' and key 'Form': 0.31\n\",
      \"Similarity between key 'Reporting' and key 'Iri': 0.33\n\",
      \"Similarity between key 'Reporting' and value 'iri': 0.33\n\",
      \"Similarity between key 'Reporting' and value '#FormI': 0.27\n\",
      \"Similarity between key 'Form' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between key 'Form' and key 'PrescriptiveStatement': 0.16\n\",
      \"Similarity between key 'Form' and value 'id': 0.0\n\",
      \"Similarity between key 'Form' and value 'AccidentReporting': 0.19\n\",
      \"Similarity between key 'Form' and key 'Rule': 0.0\n\",
      \"Similarity between key 'Form' and value 'id': 0.0\n\",
      \"Similarity between key 'Form' and value 'AccidentReportingRule': 0.16\n\",
      \"Similarity between key 'Form' and key 'if': 0.0\n\",
      \"Similarity between key 'Form' and key 'Fact': 0.25\n\",
      \"Similarity between key 'Form' and key 'Rel': 0.0\n\",
      \"Similarity between key 'Form' and value 'iri': 0.29\n\",
      \"Similarity between key 'Form' and value '#majorAccident': 0.22\n\",
      \"Similarity between key 'Form' and key 'then': 0.0\n\",
      \"Similarity between key 'Form' and key 'Obligation': 0.14\n\",
      \"Similarity between key 'Form' and key 'Action': 0.2\n\",
      \"Similarity between key 'Form' and key 'IntimateAuthority': 0.19\n\",
      \"Similarity between key 'Form' and value 'iri': 0.29\n\",
      \"Similarity between key 'Form' and value '#prescribedAuthority': 0.17\n\",
      \"Similarity between key 'Form' and key 'Timing': 0.2\n\",
      \"Similarity between key 'Form' and key 'TimeSpan': 0.17\n\",
      \"Similarity between key 'Form' and value 'start': 0.22\n\",
      \"Similarity between key 'Form' and value 'within24hours': 0.24\n\",
      \"Similarity between key 'Form' and key 'Reporting': 0.31\n\",
      \"Similarity between key 'Form' and key 'Form': 1.0\n\",
      \"Similarity between key 'Form' and key 'Iri': 0.29\n\",
      \"Similarity between key 'Form' and value 'iri': 0.29\n\",
      \"Similarity between key 'Form' and value '#FormI': 0.8\n\",
      \"Similarity between value 'iri' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value '#FormI' and key 'LegalRuleML': 0.0\n\",
      \"Similarity between value 'iri' and key 'PrescriptiveStatement': 0.17\n\",
      \"Similarity between value '#FormI' and key 'PrescriptiveStatement': 0.15\n\",
      \"Similarity between value 'iri' and key 'Rule': 0.0\n\",
      \"Similarity between value '#FormI' and key 'Rule': 0.0\n\",
      \"Similarity between value 'iri' and key 'if': 0.4\n\",
      \"Similarity between value '#FormI' and key 'if': 0.0\n\",
      \"Similarity between value 'iri' and key 'Fact': 0.0\n\",
      \"Similarity between value '#FormI' and key 'Fact': 0.2\n\",
      \"Similarity between value 'iri' and key 'Rel': 0.0\n\",
      \"Similarity between value '#FormI' and key 'Rel': 0.0\n\",
      \"Similarity between value 'iri' and key 'then': 0.0\n\",
      \"Similarity between value '#FormI' and key 'then': 0.0\n\",
      \"Similarity between value 'iri' and key 'Obligation': 0.31\n\",
      \"Similarity between value '#FormI' and key 'Obligation': 0.12\n\",
      \"Similarity between value 'iri' and key 'Action': 0.22\n\",
      \"Similarity between value '#FormI' and key 'Action': 0.17\n\",
      \"Similarity between value 'iri' and key 'IntimateAuthority': 0.3\n\",
      \"Similarity between value '#FormI' and key 'IntimateAuthority': 0.17\n\",
      \"Similarity between value 'iri' and key 'Timing': 0.44\n\",
      \"Similarity between value '#FormI' and key 'Timing': 0.17\n\",
      \"Similarity between value 'iri' and key 'TimeSpan': 0.18\n\",
      \"Similarity between value '#FormI' and key 'TimeSpan': 0.14\n\",
      \"Similarity between value 'iri' and key 'Reporting': 0.33\n\",
      \"Similarity between value '#FormI' and key 'Reporting': 0.27\n\",
      \"Similarity between value 'iri' and key 'Form': 0.29\n\",
      \"Similarity between value '#FormI' and key 'Form': 0.8\n\",
      \"Similarity between value 'iri' and key 'Iri': 0.67\n\",
      \"Similarity between value '#FormI' and key 'Iri': 0.22\n\"
     ]
    }
   ],
   \"source\": [
    \"def compare_dicts(dict1, dict2):\n\",
    \"    \\"\\"\\"\n\",
    \"    Compare keys and values between two dictionaries and compute fuzzy similarity.\n\",
    \"    \\"\\"\\"\n\",
    \"    for key1, value1 in dict1.items():\n\",
    \"        for key2, value2 in dict2.items():\n\",
    \"            # Compare key1 with key2\n\",
    \"            key_similarity = fuzzy_similarity(key1, key2)\n\",
    \"            print(f\\"Similarity between key '{key1}' and key '{key2}': {key_similarity}\\")\n\",
    \"            \n\",
    \"            # Compare key1 with value2\n\",
    \"            value_similarity_0 = fuzzy_similarity(key1, value2[0]) if isinstance(value2, tuple) else None\n\",
    \"            value_similarity_1 = fuzzy_similarity(key1, value2[1]) if isinstance(value2, tuple) else None\n\",
    \"            if value_similarity_0 is not None:\n\",
    \"                print(f\\"Similarity between key '{key1}' and value '{value2[0]}': {value_similarity_0}\\")\n\",
    \"                print(f\\"Similarity between key '{key1}' and value '{value2[1]}': {value_similarity_1}\\")\n\",
    \"                \n\",
    \"        # Compare value1 with each key in dict2\n\",
    \"        for key2 in dict2.keys():\n\",
    \"            value_similarity_0 = fuzzy_similarity(value1[0], key2) if isinstance(value1, tuple) else None\n\",
    \"            value_similarity_1 = fuzzy_similarity(value1[1], key2) if isinstance(value1, tuple) else None\n\",
    \"            if value_similarity_0 is not None:\n\",
    \"                print(f\\"Similarity between value '{value1[0]}' and key '{key2}': {value_similarity_0}\\")\n\",
    \"                print(f\\"Similarity between value '{value1[1]}' and key '{key2}': {value_similarity_1}\\")\n\",
    \"\n\",
    \"# Example usage:\n\",
    \"dict1 = {'apple': 'fruit', 'banana': 'fruit', 'carrot': 'vegetable'}\n\",
    \"dict2 = {'apples': 'fruit', 'orange': 'fruit', 'carrots': 'vegetable'}\n\",
    \"\n\",
    \"compare_dicts(dict1_cleaned, dict2_cleaned)\n\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"id\": \"ead77459-5887-46b8-896c-857ff037a46b\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  },
  {
   \"cell_type\": \"markdown\",
   \"id\": \"bd1e168d-b801-412a-b71d-cd909eb74498\",
   \"metadata\": {},
   \"source\": [
    \"### Results\n\",
    \"\n\",
    \"Some instances which cross a **threshold of 0.5**\n\",
    \"\n\",
    \"- Similarity between value 'TimeUnit' and key 'Timing': 0.57\n\",
    \"- Similarity between value '#prescribedAuthority' and key 'IntimateAuthority': 0.59\n\",
    \"- Similarity between key 'Intimation' and key 'IntimateAuthority': 0.59\n\",
    \"- Similarity between value 'AccidentReporting' and key 'Reporting': 0.69\"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"id\": \"6484b0e8-f32f-4860-9abc-034b582e98fd\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  }
 ],
 \"metadata\": {
  \"kernelspec\": {
   \"display_name\": \"Schematise\",
   \"language\": \"python\",
   \"name\": \"schematise\"
  },
  \"language_info\": {
   \"codemirror_mode\": {
    \"name\": \"ipython\",
    \"version\": 3
   },
   \"file_extension\": \".py\",
   \"mimetype\": \"text/x-python\",
   \"name\": \"python\",
   \"nbconvert_exporter\": \"python\",
   \"pygments_lexer\": \"ipython3\",
   \"version\": \"3.10.12\"
  }
 },
 \"nbformat\": 4,
 \"nbformat_minor\": 5
}"},
{"strip_code.py": "def strip_code_block(string):
    #Find the first occurrence of ```
    start_index = string.find('```')
    end_index = len(string)
    no_start_index = False
    no_end_index = False
    if start_index == -1:
        no_start_index = True # No code block found
        start_index = 0
    else:
        start_index += 3

    # Find the next occurrence of ``` after the first one
    end_index = string.find('```', start_index + 3)
    if end_index == -1:
        no_end_index = True
        end_index = len(string)# No closing code block found
    else:
        pass

    # Extract the part between the first and last ```
    extracted_string = string[start_index:end_index]



    #extracted_string = string
    # Find the index of the first occurrence of '<' after removing the code block
    index_of_first_opening_bracket = extracted_string.find('<')

    # Find the index of the last closing bracket
    index_of_last_closing_bracket = find_last_closing_tag_index(string)

    # Extract the part of the string between the first opening '<' and the last closing '>'
    if index_of_first_opening_bracket != -1 and index_of_last_closing_bracket != -1:
        result = extracted_string[index_of_first_opening_bracket -1:index_of_last_closing_bracket +1]
    elif index_of_first_opening_bracket != -1 and index_of_last_closing_bracket == -1:
        result = extracted_string[index_of_first_opening_bracket -1:]
    elif index_of_first_opening_bracket != -1 and index_of_last_closing_bracket != -1:
        result = extracted_string[:index_of_last_closing_bracket+1]
    else:
        result = extracted_string

    return result


import re


def find_last_closing_tag_index(xml_string):
    # Regular expression to match closing XML tags
    pattern = r'<\/.*>'

    # Find all occurrences of the closing tags
    matches = list(re.finditer(pattern, xml_string))

    # Check if there are any matches
    if matches:
        # Get the last match
        last_match = matches[-1]
        # Return the start index of the last closing tag
        return last_match.end()
    else:
        # Return an indication that no closing tag was found
        return -1
def remove_linebreaks(s):
    return s.replace(\"\"\"\n\"\"\", \" \")

def func(value):
    return ''.join(value.splitlines())


if __name__ == '__main__':
    statute_extract = \"\"\"```\n\n<lrml:LegalSources>\n  <lrml:LegalSource key=\"ls1\" sameAs=\"http://www.eco.gov.in/sites/default/files/pdf_file/E-Waste%20Rules%2C%202016.pdf\"``` Note\"\"\"
    statute_extract = \"\"\"
    Here is the statute extract in LegalRuleML XML format:
```
<lrml:LegalSources>
  <lrml:LegalSource key=\"ls1\">
    <lrml:uri>http://www.example.com/statutes/e-waste.html</lrml:uri>
  </lrml:LegalSource>
</lrml:LegalSources>

<lrml:Context key=\"psInfo1\">
  <lrml:appliesAssociations>
    <lrml:Associations>
      <lrml:Association keyref=\"#ps1\">
        <lrml:appliesSource keyref=\"#ls1\"/>
        <lrml:toTarget keyref=\"#rep1\"/>
        <lrml:toTarget keyref=\"#rep2\"/>
      </lrml:Association>
    </lrml:Associations>
  </lrml:appliesAssociations>
</lrml:Context>

<lrml:Statements key=\"textblock1\">
  <lrml:hasQualification>
    <lrml:DefeasibleStrength key=\"str1\" iri=\"http://defee.org/defeasible-ontology#defeasible1\"/>
  </lrml:hasQualification>
  <lrml:PrescriptiveStatement key=\"ps1\">
    <ruleml:Rule key=\":rule1\" closure=\"universal\">
      <lrml:if>
        <lrml:Atom>
          <lrml:Rel iri=\":collectEWaste\"/>
          <lrml:Var>X</lrml:Var>
        </lrml:Atom>
      </lrml:if>
      <lrml:then>
        <lrml:SuborderList>
          <lrml:Prohibition>
            <ruleml:Atom>
              <lrml:Rel iri=\":collectEWasteOnBehalfOfProducer\"/>
              <lrml:Var>X</lrml:Var>
            </ruleml:Atom>
          </lrml:Prohibition>
          <lrml:Prohibition>
            <ruleml:Atom>
              <lrml:Rel iri=\":collectEWasteOnBehalfOfDismantlerRefurbisherRecyclerOrphanedProducts\"/>
              <lrml:Var>X</lrml:Var>
            </ruleml:Atom>
          </lrml:Prohibition>
        </lrml:SuborderList>
      </lrml:then>
    </ruleml:Rule>
  </lrml:PrescriptiveStatement>
</lrml:Statements>

<lrml:PenaltyStatement key=\"rep1\">
  <lrml:Reparation key=\"assoc1\">
    <lrml:appliesPenalty keyref=\"#pen1\"/>
    <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>
  </lrml:Reparation>
</lrml:PenaltyStatement>

<lrml:PenaltyStatement key=\"rep2\">
  <lrml:Reparation keyref=\"#assoc1\">
    <lrml:appliesPenalty keyref=\"#pen2\"/>
    <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>
  </lrml:Reparation>
</lrml:PenaltyStatement>
```
Explanation:

* `<lrml:LegalSources>` i    \"\"\"
    stripped_statute_extract = strip_code_block(statute_extract)
    #print(stripped_statute_extract)



    with open (\"./_cache/xml_file_test.txt\", \"r\", encoding='utf-8') as fn:
        text = fn.read()# Example usage:

    text = \"\"\"['\n<lrml:LegalSources>\n  <lrml:LegalSource key=\"ls1\" sameAs=\"http://www.legislation.gov.in/sites/default/files/file/The%20E-Waste%20Rules%2C%202016.pdf\"/>\n</lrml:LegalSources>\n\n<lrml:Context key=\"psInfo1\">\n  <lrml:appliesAssociations>\n    <lrml:Associations>\n      <lrml:Association keyref=\"#ls1\"/>\n      <lrml:toTarget keyref=\"#ps1\"/>\n      <lrml:toTarget keyref=\"#ps2\"/>\n      <lrml:toTarget keyref=\"#pen1\"/>\n      <lrml:toTarget keyref=\"#pen2\"/>\n    </lrml:Associations>\n  </lrml:appliesAssociations>\n</lrml:Context>\n\n<lrml:Statements key=\"textblock1\">\n  <lrml:hasQualification>\n    <lrml:DefeasibleStrength key=\"str1\" iri=\"http://defs.legalsemantics.org/defeasible-ontology/defeasible1\"/>\n  </lrml:hasQualification>\n  <lrml:PrescriptiveStatement key=\"ps1\">\n    <ruleml:Rule key=\":rule1\" closure=\"universal\">\n      <lrml:if>\n        <lrml:Atom>\n          <lrml:Rel iri=\":collectEWaste\"/>\n          <lrml:Var>X</lrml:Var>\n        </lrml:Atom>\n      </lrml:if>\n      <lrml:then>\n        <lrml:SuborderList>\n          <lrml:Prohibition>\n            <lrml:Atom>\n              <lrml:Rel iri=\":collectEWasteOnBehalfOfProducer\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Prohibition>\n          <lrml:Prohibition>\n            <lrml:Atom>\n              <lrml:Rel iri=\":collectEWasteOnBehalfOfDismantlerRefurbisherOrRecycler\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Prohibition>\n          <lrml:Obligation>\n            <lrml:Atom>\n              <lrml:Rel iri=\":ensureFacilitiesAreInAccordanceWithStandardsOrGuidelinesIssuedByCentralPollutionControlBoard\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Obligation>\n          <lrml:Obligation>\n            <lrml:Atom>\n              <lrml:Rel iri=\":ensureEWasteIsStoredInSecuredMannerTillItIsSentToAuthorisedDismantlerOrRecycler\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Obligation>\n          <lrml:Obligation>\n            <lrml:Atom>\n              <lrml:Rel iri=\":ensureNoDamageIsCausedToEnvironmentDuringStorageAndTransportationOfEWaste\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Obligation>\n          <lrml:Obligation>\n            <lrml:Atom>\n              <lrml:Rel iri=\":maintainRecordsInForm2OfEWasteHandledAsPerGuidelinesOfCentralPollutionControlBoard\"/>\n              <lrml:Var>X</lrml:Var>\n            </lrml:Atom>\n          </lrml:Obligation>\n        </lrml:SuborderList>\n      </lrml:Then>\n    </ruleml:Rule>\n  </lrml:PrescriptiveStatement>\n</lrml:Statements>\n\n<lrml:PenaltyStatement key=\"rep1\">\n  <lrml:Reparation keyref=\"#assoc1\">\n    <lrml:appliesPenalty keyref=\"#pen1\"/>\n    <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>\n  </lrml:Reparation>\n</lrml:PenaltyStatement>\n\n<lrml:PenaltyStatement key=\"rep2\">\n  <lrml:Reparation keyref=\"#assoc1\">\n    <lrml:appliesPenalty keyref=\"#pen2\"/>\n    <lrml:toPrescriptiveStatement keyref=\"#ps1\"/>\n  </lrml:Reparation>\n</lrml:PenaltyStatement>\n\n</lrml:Statements>']\"\"\"
    cleaned_text=text.replace('\n', '')
    print(cleaned_text)"},
{"TemplateParser.ipynb": "{
 \"cells\": [
  {
   \"cell_type\": \"code\",
   \"execution_count\": 2,
   \"id\": \"74361c38-781f-45a5-8474-af898487cf96\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": [
    \"class IKTemplateParser:\n\",
    \"    def remove_text(input_string, start_constant, end_constant):\n\",
    \"        pattern = re.escape(start_constant) + r\\".*?\\" + re.escape(end_constant)\n\",
    \"        output_string = re.sub(pattern, '', input_string)\n\",
    \"        return output_string\n\",
    \"\n\",
    \"\n\",
    \"    def clean_text(res):\n\",
    \"        documenttext = res['doc']\n\",
    \"        html_string = str(documenttext)\n\",
    \"        escaped_string = bytes(html_string, 'utf-8').decode('unicode-escape')\n\",
    \"        soup = BeautifulSoup(escaped_string, \\"html.parser\\")\n\",
    \"        attachments_spans = soup.find_all('span', class_='akn-attachments')\n\",
    \"        for span in attachments_spans:\n\",
    \"            span.extract()\n\",
    \"        modified_html = str(soup)\n\",
    \"        soup2 = BeautifulSoup (modified_html, 'html.parser')\n\",
    \"        text = str(soup2.get_text())\n\",
    \"        initialremove = remove_text(text, start_constant=\\"{'tid\\", end_constant=\\"'doc': '\\")\n\",
    \"        secondremove = remove_text(initialremove, start_constant=\\"'numcites': \\", end_constant=\\"'courtcopy': \\")\n\",
    \"        return secondremove, modified_html\n\",
    \"    \n\",
    \"    def extract_sections(modified_html):\n\",
    \"        soup = BeautifulSoup(modified_html, 'html.parser')\n\",
    \"    \n\",
    \"        # Find all <section> elements with id=\\"section_<number between 1 to 1000>\\"\n\",
    \"        sections = soup.find_all('section', id=lambda x: x and x.startswith('section_'))\n\",
    \"    \n\",
    \"        # Create a CSV file\n\",
    \"        csv_filename = 'sections.csv'\n\",
    \"    \n\",
    \"        with open(csv_filename, 'w', newline='') as csv_file:\n\",
    \"            writer = csv.writer(csv_file)\n\",
    \"        \n\",
    \"            # Write CSV header\n\",
    \"            writer.writerow(['Section Title', 'Nested Content'])\n\",
    \"            \n\",
    \"            # Iterate through <section> elements and write to CSV\n\",
    \"            for section in sections:\n\",
    \"                section_title_init = section.find(['h2', 'h3'])\n\",
    \"    \n\",
    \"                if section_title_init:\n\",
    \"                    section_title = section_title_init.text.strip()\n\",
    \"                else:\n\",
    \"                    pass\n\",
    \"                \n\",
    \"                # Check if there is nested content\n\",
    \"                nested_content_spans = section.find_all('span', class_='akn-p')\n\",
    \"                nested_contents = []\n\",
    \"                for span in nested_content_spans:\n\",
    \"                    nested_content = span.text.strip()\n\",
    \"                    nested_contents.append(nested_content)\n\",
    \"                \n\",
    \"                writer.writerow([section_title, ', '.join(nested_contents)])\n\",
    \"    \n\",
    \"    def extract_text(doc_number):\n\",
    \"        url = f'https://api.indiankanoon.org/doc/{doc_number}/'\n\",
    \"        try:\n\",
    \"            response = requests.post(url, headers=headers)\n\",
    \"            response.raise_for_status()  # Checks for HTTP request errors\n\",
    \"    \n\",
    \"            res = response.json()\n\",
    \"    \n\",
    \"            cleaned_text, modified_html = clean_text(res)\n\",
    \"    \n\",
    \"            extract_sections(modified_html)\n\",
    \"    \n\",
    \"            '''with open(\\"cleaned_text.txt\\", \\"w\\") as file:\n\",
    \"                file.write(cleaned_text)\n\",
    \"    \n\",
    \"            with open(\\"Response.txt\\", \\"w\\") as file:\n\",
    \"                file.write(str(res))\n\",
    \"            '''\n\",
    \"    \n\",
    \"            #return res\n\",
    \"    \n\",
    \"        except Exception as e:\n\",
    \"            print(f\\"Error: {e}\\")\n\",
    \"\n\",
    \"\n\",
    \"    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": 3,
   \"id\": \"081bb64e-acac-469a-a407-b44d99316904\",
   \"metadata\": {},
   \"outputs\": [
    {
     \"ename\": \"ModuleNotFoundError\",
     \"evalue\": \"No module named 'antlr4'\",
     \"output_type\": \"error\",
     \"traceback\": [
      \"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\",
      \"\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\",
      \"\u001b[0;32m/tmp/ipykernel_12351/3402318771.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mantlr4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mEwasteRulesLexer\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mEwasteRulesLexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mEwasteRulesParser\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mEwasteRulesParser\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mantlr4\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrees\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mTrees\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\",
      \"\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'antlr4'\"
     ]
    }
   ],
   \"source\": [
    \"from antlr4 import *\n\",
    \"from EwasteRulesLexer import EwasteRulesLexer\n\",
    \"from EwasteRulesParser import EwasteRulesParser\n\",
    \"from antlr4.tree.Trees import Trees\n\",
    \"\n\",
    \"def main():\n\",
    \"    # Assuming 'input' is your string to parse\n\",
    \"    input_stream = InputStream(input)\n\",
    \"    lexer = EwasteRulesLexer(input_stream)\n\",
    \"    stream = CommonTokenStream(lexer)\n\",
    \"    parser = EwasteRulesParser(stream)\n\",
    \"    tree = parser.startRule()  # 'startRule' is the name of the starting rule in your grammar\n\",
    \"\n\",
    \"    # To print the tree\n\",
    \"    print(Trees.toStringTree(tree, None, parser))\n\",
    \"\n\",
    \"if __name__ == '__main__':\n\",
    \"    main()\n\",
    \"\n\",
    \"'''class ANTLR_Rules:\n\",
    \"    def eGazzete\n\",
    \"'''    \"
   ]
  },
  {
   \"cell_type\": \"code\",
   \"execution_count\": null,
   \"id\": \"6c940c6a-e9aa-42fd-95e0-479eb7701747\",
   \"metadata\": {},
   \"outputs\": [],
   \"source\": []
  }
 ],
 \"metadata\": {
  \"kernelspec\": {
   \"display_name\": \"Python 3 (ipykernel)\",
   \"language\": \"python\",
   \"name\": \"python3\"
  },
  \"language_info\": {
   \"codemirror_mode\": {
    \"name\": \"ipython\",
    \"version\": 3
   },
   \"file_extension\": \".py\",
   \"mimetype\": \"text/x-python\",
   \"name\": \"python\",
   \"nbconvert_exporter\": \"python\",
   \"pygments_lexer\": \"ipython3\",
   \"version\": \"3.10.12\"
  }
 },
 \"nbformat\": 4,
 \"nbformat_minor\": 5
}"},
{"utils.py": "import pandas as pd
import xml.etree.ElementTree as ET
from thefuzz import fuzz
import re
def csv_parser():

    csv_filename = 'fullsections.csv' # file containing all the sections from the E-Waste Rules, generated via IK_interface function

    df_condition = \"1\"
    # Read the CSV file into a Pandas DataFrame
    df = pd.read_csv(csv_filename)

    if df_condition == \"1\":
        df2 = df.iloc[70:85]
    else:
        df2=df.copy()

    return df2



def find_last_closing_tag_index(xml_string):
    # Regular expression to match closing XML tags
    pattern = r'<\/.*>'

    # Find all occurrences of the closing tags
    matches = list(re.finditer(pattern, xml_string))

    # Check if there are any matches
    if matches:
        # Get the last match
        last_match = matches[-1]
        # Return the start index of the last closing tag
        return last_match.end()
    else:
        # Return an indication that no closing tag was found
        return -1
def strip_code_block(string):
    #Find the first occurrence of ```
    start_index = string.find('```')
    end_index = len(string)
    no_start_index = False
    no_end_index = False
    if start_index == -1:
        no_start_index = True # No code block found
        start_index = 0
    else:
        start_index += 3

    # Find the next occurrence of ``` after the first one
    end_index = string.find('```', start_index + 3)
    if end_index == -1:
        no_end_index = True
        end_index = len(string)# No closing code block found
    else:
        pass

    # Extract the part between the first and last ```
    extracted_string = string[start_index:end_index]


    #extracted_string = string
    # Find the index of the first occurrence of '<' after removing the code block
    index_of_first_opening_bracket = extracted_string.find('<')

    # Find the index of the last closing bracket
    index_of_last_closing_bracket = find_last_closing_tag_index(string)

    # Extract the part of the string between the first opening '<' and the last closing '>'
    if index_of_first_opening_bracket != -1 and index_of_last_closing_bracket != -1:
        result = extracted_string[index_of_first_opening_bracket -1:index_of_last_closing_bracket +1]
    elif index_of_first_opening_bracket != -1 and index_of_last_closing_bracket == -1:
        result = extracted_string[index_of_first_opening_bracket -1:]
    elif index_of_first_opening_bracket != -1 and index_of_last_closing_bracket != -1:
        result = extracted_string[:index_of_last_closing_bracket+1]
    else:
        result = extracted_string

    return result



def XML_Similarity(XML_responses, text_value):

    def get_elements_and_attributes(xml_file):
        tree = ET.parse(xml_file)
        root = tree.getroot()

        elements_and_attributes = {}

        # Function to recursively traverse the XML tree
        def traverse(element):
            nonlocal elements_and_attributes

            # Adding the element itself
            attributes = element.attrib

            elements_and_attributes[element.tag] = list(element.attrib.keys())
            for attr in attributes:
                attributes_with_values = (attr, attributes.get(attr, 0))

                elements_and_attributes[element.tag] = attributes_with_values

            # Recursively traversing child elements
            for child in element:
                traverse(child)

        traverse(root)

        return elements_and_attributes


    def fuzzy_similarity(s1, s2):
        \"\"\"
        Compute the fuzzy string similarity using TheFuzz library.
        \"\"\"
        return fuzz.ratio(s1, s2) / 100.0  # Convert to a float [0, 1]

    def remove_string_from_tuple_value(value, string_to_remove):
        \"\"\"
        Remove a specified string from all elements in the tuple value.
        \"\"\"
        return tuple(item.replace(string_to_remove, '') for item in value)

    def clean_dictionary(dictionary, string_to_remove):
        \"\"\"
        Remove a specified string from all keys and values in the dictionary.
        \"\"\"
        cleaned_dict = {}
        for key, value in dictionary.items():
            cleaned_key = key.replace(string_to_remove, '')
            if isinstance(value, tuple):
                cleaned_value = remove_string_from_tuple_value(value, string_to_remove)
            else:
                cleaned_value = value.replace(string_to_remove, '') if isinstance(value, str) else value
            cleaned_dict[cleaned_key] = cleaned_value
        return cleaned_dict

    def compare_dicts(dict1, dict2, similarity_threshold=0.5):
        \"\"\"
        Compare keys and values between two dictionaries and compute fuzzy similarity.
        \"\"\"
        similarities_dict = {}
        for key1, value1 in dict1.items():
            for key2, value2 in dict2.items():
                # Compare key1 with key2
                key_similarity = fuzzy_similarity(key1, key2)
                #print(f\"Similarity between key '{key1}' and key '{key2}': {key_similarity}\")
                keypair_for_similarities_dict = key1 + '' + key2
                similarities_dict[keypair_for_similarities_dict]=key_similarity
                # Compare key1 with value2
                value_similarity_0 = fuzzy_similarity(key1, value2[0]) if isinstance(value2, tuple) else None
                value_similarity_1 = fuzzy_similarity(key1, value2[1]) if isinstance(value2, tuple) else None
                #print(f\"Similarity between key '{key1}' and value '{value2[0]}': {value_similarity_0}\")
                #print(f\"Similarity between key '{key1}' and value '{value2[1]}': {value_similarity_1}\")
                keypair_0_for_similarities_dict = key1 + '' + value2[0]
                keypair_1_for_similarities_dict = key1 + '' + value2[1]

                similarities_dict[keypair_0_for_similarities_dict]=value_similarity_0
                similarities_dict[keypair_1_for_similarities_dict]=value_similarity_1

            # Compare value1 with each key in dict2
            for key2 in dict2.keys():
                value_similarity_0 = fuzzy_similarity(value1[0], key2) if isinstance(value1, tuple) else None
                value_similarity_1 = fuzzy_similarity(value1[1], key2) if isinstance(value1, tuple) else None
                keypair_0_for_similarities_dict = key2 + '' + value1[0]
                keypair_1_for_similarities_dict = key2 + '' + value1[1]
                similarities_dict[keypair_0_for_similarities_dict]=value_similarity_0
                similarities_dict[keypair_1_for_similarities_dict]=value_similarity_1
                #print(f\"Similarity between value '{value1[0]}' and key '{key2}': {value_similarity_0}\")
                #print(f\"Similarity between value '{value1[1]}' and key '{key2}': {value_similarity_1}\")

            def remove_below_threshold(similarities_dict, similarity_threshold):
                return {key: value for key, value in similarities_dict.items() if value >= similarity_threshold}

            similarities_dict_below_threshold = remove_below_threshold(similarities_dict, similarity_threshold)

    def similarity_tweaking(similarities_dict_below_threshold, dict1, dict2_cleaned):



        value_to_tweak = input (\"Press the index number of the similarities to tweak: \")

        print (\"Which value do you prefer?\")



    # Example usage
    xml_file_1 = './_cache/xml_file_1.xml'  # Replace with the path to your XML file
    xml_file_2 = \"./_cache/xml_file_2.xml\"
    combined_XML_responses = ' '.join(XML_responses)
    with open (xml_file_1, \"w\") as fn:
        fn.write(combined_XML_responses.replace('\n', ''))
    with open(xml_file_2, \"w\") as fn:
        fn.write(text_value)
    dict1 = get_elements_and_attributes(xml_file_1)
    dict2 = get_elements_and_attributes(xml_file_2)
    dict2_cleaned = clean_dictionary(dict2, \"{http://www.oasis-open.org/committees/legalruleml}\")
    similarities_dict_below_threshold = compare_dicts(dict1, dict2_cleaned)
    '''print(elements_and_attributes)
    for element, attributes in elements_and_attributes.items():
        print(f\"Element: {element}\")
        print(f\"Attributes: {attributes}\")
    '''


    return similarities_dict_below_threshold, dict1, dict2_cleaned"}
